package operations_test

import (
	"github.com/initialcapacity/atomic-arithmetic/pkg/operations"
	"testing"
)

func TestDivideBy1(t *testing.T) {
	result := operations.DivideBy1(17000)
	
	if result != 17000 {
		t.Errorf("Expected 17000 but got %d", result)
	}
}

func TestDivideBy2(t *testing.T) {
	result := operations.DivideBy2(17000)
	
	if result != 8500 {
		t.Errorf("Expected 8500 but got %d", result)
	}
}

func TestDivideBy3(t *testing.T) {
	result := operations.DivideBy3(17000)
	
	if result != 5666 {
		t.Errorf("Expected 5666 but got %d", result)
	}
}

func TestDivideBy4(t *testing.T) {
	result := operations.DivideBy4(17000)
	
	if result != 4250 {
		t.Errorf("Expected 4250 but got %d", result)
	}
}

func TestDivideBy5(t *testing.T) {
	result := operations.DivideBy5(17000)
	
	if result != 3400 {
		t.Errorf("Expected 3400 but got %d", result)
	}
}

func TestDivideBy6(t *testing.T) {
	result := operations.DivideBy6(17000)
	
	if result != 2833 {
		t.Errorf("Expected 2833 but got %d", result)
	}
}

func TestDivideBy7(t *testing.T) {
	result := operations.DivideBy7(17000)
	
	if result != 2428 {
		t.Errorf("Expected 2428 but got %d", result)
	}
}

func TestDivideBy8(t *testing.T) {
	result := operations.DivideBy8(17000)
	
	if result != 2125 {
		t.Errorf("Expected 2125 but got %d", result)
	}
}

func TestDivideBy9(t *testing.T) {
	result := operations.DivideBy9(17000)
	
	if result != 1888 {
		t.Errorf("Expected 1888 but got %d", result)
	}
}

func TestDivideBy10(t *testing.T) {
	result := operations.DivideBy10(17000)
	
	if result != 1700 {
		t.Errorf("Expected 1700 but got %d", result)
	}
}

func TestDivideBy11(t *testing.T) {
	result := operations.DivideBy11(17000)
	
	if result != 1545 {
		t.Errorf("Expected 1545 but got %d", result)
	}
}

func TestDivideBy12(t *testing.T) {
	result := operations.DivideBy12(17000)
	
	if result != 1416 {
		t.Errorf("Expected 1416 but got %d", result)
	}
}

func TestDivideBy13(t *testing.T) {
	result := operations.DivideBy13(17000)
	
	if result != 1307 {
		t.Errorf("Expected 1307 but got %d", result)
	}
}

func TestDivideBy14(t *testing.T) {
	result := operations.DivideBy14(17000)
	
	if result != 1214 {
		t.Errorf("Expected 1214 but got %d", result)
	}
}

func TestDivideBy15(t *testing.T) {
	result := operations.DivideBy15(17000)
	
	if result != 1133 {
		t.Errorf("Expected 1133 but got %d", result)
	}
}

func TestDivideBy16(t *testing.T) {
	result := operations.DivideBy16(17000)
	
	if result != 1062 {
		t.Errorf("Expected 1062 but got %d", result)
	}
}

func TestDivideBy17(t *testing.T) {
	result := operations.DivideBy17(17000)
	
	if result != 1000 {
		t.Errorf("Expected 1000 but got %d", result)
	}
}

func TestDivideBy18(t *testing.T) {
	result := operations.DivideBy18(17000)
	
	if result != 944 {
		t.Errorf("Expected 944 but got %d", result)
	}
}

func TestDivideBy19(t *testing.T) {
	result := operations.DivideBy19(17000)
	
	if result != 894 {
		t.Errorf("Expected 894 but got %d", result)
	}
}

func TestDivideBy20(t *testing.T) {
	result := operations.DivideBy20(17000)
	
	if result != 850 {
		t.Errorf("Expected 850 but got %d", result)
	}
}

func TestDivideBy21(t *testing.T) {
	result := operations.DivideBy21(17000)
	
	if result != 809 {
		t.Errorf("Expected 809 but got %d", result)
	}
}

func TestDivideBy22(t *testing.T) {
	result := operations.DivideBy22(17000)
	
	if result != 772 {
		t.Errorf("Expected 772 but got %d", result)
	}
}

func TestDivideBy23(t *testing.T) {
	result := operations.DivideBy23(17000)
	
	if result != 739 {
		t.Errorf("Expected 739 but got %d", result)
	}
}

func TestDivideBy24(t *testing.T) {
	result := operations.DivideBy24(17000)
	
	if result != 708 {
		t.Errorf("Expected 708 but got %d", result)
	}
}

func TestDivideBy25(t *testing.T) {
	result := operations.DivideBy25(17000)
	
	if result != 680 {
		t.Errorf("Expected 680 but got %d", result)
	}
}

func TestDivideBy26(t *testing.T) {
	result := operations.DivideBy26(17000)
	
	if result != 653 {
		t.Errorf("Expected 653 but got %d", result)
	}
}

func TestDivideBy27(t *testing.T) {
	result := operations.DivideBy27(17000)
	
	if result != 629 {
		t.Errorf("Expected 629 but got %d", result)
	}
}

func TestDivideBy28(t *testing.T) {
	result := operations.DivideBy28(17000)
	
	if result != 607 {
		t.Errorf("Expected 607 but got %d", result)
	}
}

func TestDivideBy29(t *testing.T) {
	result := operations.DivideBy29(17000)
	
	if result != 586 {
		t.Errorf("Expected 586 but got %d", result)
	}
}

func TestDivideBy30(t *testing.T) {
	result := operations.DivideBy30(17000)
	
	if result != 566 {
		t.Errorf("Expected 566 but got %d", result)
	}
}

func TestDivideBy31(t *testing.T) {
	result := operations.DivideBy31(17000)
	
	if result != 548 {
		t.Errorf("Expected 548 but got %d", result)
	}
}

func TestDivideBy32(t *testing.T) {
	result := operations.DivideBy32(17000)
	
	if result != 531 {
		t.Errorf("Expected 531 but got %d", result)
	}
}

func TestDivideBy33(t *testing.T) {
	result := operations.DivideBy33(17000)
	
	if result != 515 {
		t.Errorf("Expected 515 but got %d", result)
	}
}

func TestDivideBy34(t *testing.T) {
	result := operations.DivideBy34(17000)
	
	if result != 500 {
		t.Errorf("Expected 500 but got %d", result)
	}
}

func TestDivideBy35(t *testing.T) {
	result := operations.DivideBy35(17000)
	
	if result != 485 {
		t.Errorf("Expected 485 but got %d", result)
	}
}

func TestDivideBy36(t *testing.T) {
	result := operations.DivideBy36(17000)
	
	if result != 472 {
		t.Errorf("Expected 472 but got %d", result)
	}
}

func TestDivideBy37(t *testing.T) {
	result := operations.DivideBy37(17000)
	
	if result != 459 {
		t.Errorf("Expected 459 but got %d", result)
	}
}

func TestDivideBy38(t *testing.T) {
	result := operations.DivideBy38(17000)
	
	if result != 447 {
		t.Errorf("Expected 447 but got %d", result)
	}
}

func TestDivideBy39(t *testing.T) {
	result := operations.DivideBy39(17000)
	
	if result != 435 {
		t.Errorf("Expected 435 but got %d", result)
	}
}

func TestDivideBy40(t *testing.T) {
	result := operations.DivideBy40(17000)
	
	if result != 425 {
		t.Errorf("Expected 425 but got %d", result)
	}
}

func TestDivideBy41(t *testing.T) {
	result := operations.DivideBy41(17000)
	
	if result != 414 {
		t.Errorf("Expected 414 but got %d", result)
	}
}

func TestDivideBy42(t *testing.T) {
	result := operations.DivideBy42(17000)
	
	if result != 404 {
		t.Errorf("Expected 404 but got %d", result)
	}
}

func TestDivideBy43(t *testing.T) {
	result := operations.DivideBy43(17000)
	
	if result != 395 {
		t.Errorf("Expected 395 but got %d", result)
	}
}

func TestDivideBy44(t *testing.T) {
	result := operations.DivideBy44(17000)
	
	if result != 386 {
		t.Errorf("Expected 386 but got %d", result)
	}
}

func TestDivideBy45(t *testing.T) {
	result := operations.DivideBy45(17000)
	
	if result != 377 {
		t.Errorf("Expected 377 but got %d", result)
	}
}

func TestDivideBy46(t *testing.T) {
	result := operations.DivideBy46(17000)
	
	if result != 369 {
		t.Errorf("Expected 369 but got %d", result)
	}
}

func TestDivideBy47(t *testing.T) {
	result := operations.DivideBy47(17000)
	
	if result != 361 {
		t.Errorf("Expected 361 but got %d", result)
	}
}

func TestDivideBy48(t *testing.T) {
	result := operations.DivideBy48(17000)
	
	if result != 354 {
		t.Errorf("Expected 354 but got %d", result)
	}
}

func TestDivideBy49(t *testing.T) {
	result := operations.DivideBy49(17000)
	
	if result != 346 {
		t.Errorf("Expected 346 but got %d", result)
	}
}

func TestDivideBy50(t *testing.T) {
	result := operations.DivideBy50(17000)
	
	if result != 340 {
		t.Errorf("Expected 340 but got %d", result)
	}
}

func TestDivideBy51(t *testing.T) {
	result := operations.DivideBy51(17000)
	
	if result != 333 {
		t.Errorf("Expected 333 but got %d", result)
	}
}

func TestDivideBy52(t *testing.T) {
	result := operations.DivideBy52(17000)
	
	if result != 326 {
		t.Errorf("Expected 326 but got %d", result)
	}
}

func TestDivideBy53(t *testing.T) {
	result := operations.DivideBy53(17000)
	
	if result != 320 {
		t.Errorf("Expected 320 but got %d", result)
	}
}

func TestDivideBy54(t *testing.T) {
	result := operations.DivideBy54(17000)
	
	if result != 314 {
		t.Errorf("Expected 314 but got %d", result)
	}
}

func TestDivideBy55(t *testing.T) {
	result := operations.DivideBy55(17000)
	
	if result != 309 {
		t.Errorf("Expected 309 but got %d", result)
	}
}

func TestDivideBy56(t *testing.T) {
	result := operations.DivideBy56(17000)
	
	if result != 303 {
		t.Errorf("Expected 303 but got %d", result)
	}
}

func TestDivideBy57(t *testing.T) {
	result := operations.DivideBy57(17000)
	
	if result != 298 {
		t.Errorf("Expected 298 but got %d", result)
	}
}

func TestDivideBy58(t *testing.T) {
	result := operations.DivideBy58(17000)
	
	if result != 293 {
		t.Errorf("Expected 293 but got %d", result)
	}
}

func TestDivideBy59(t *testing.T) {
	result := operations.DivideBy59(17000)
	
	if result != 288 {
		t.Errorf("Expected 288 but got %d", result)
	}
}

func TestDivideBy60(t *testing.T) {
	result := operations.DivideBy60(17000)
	
	if result != 283 {
		t.Errorf("Expected 283 but got %d", result)
	}
}

func TestDivideBy61(t *testing.T) {
	result := operations.DivideBy61(17000)
	
	if result != 278 {
		t.Errorf("Expected 278 but got %d", result)
	}
}

func TestDivideBy62(t *testing.T) {
	result := operations.DivideBy62(17000)
	
	if result != 274 {
		t.Errorf("Expected 274 but got %d", result)
	}
}

func TestDivideBy63(t *testing.T) {
	result := operations.DivideBy63(17000)
	
	if result != 269 {
		t.Errorf("Expected 269 but got %d", result)
	}
}

func TestDivideBy64(t *testing.T) {
	result := operations.DivideBy64(17000)
	
	if result != 265 {
		t.Errorf("Expected 265 but got %d", result)
	}
}

func TestDivideBy65(t *testing.T) {
	result := operations.DivideBy65(17000)
	
	if result != 261 {
		t.Errorf("Expected 261 but got %d", result)
	}
}

func TestDivideBy66(t *testing.T) {
	result := operations.DivideBy66(17000)
	
	if result != 257 {
		t.Errorf("Expected 257 but got %d", result)
	}
}

func TestDivideBy67(t *testing.T) {
	result := operations.DivideBy67(17000)
	
	if result != 253 {
		t.Errorf("Expected 253 but got %d", result)
	}
}

func TestDivideBy68(t *testing.T) {
	result := operations.DivideBy68(17000)
	
	if result != 250 {
		t.Errorf("Expected 250 but got %d", result)
	}
}

func TestDivideBy69(t *testing.T) {
	result := operations.DivideBy69(17000)
	
	if result != 246 {
		t.Errorf("Expected 246 but got %d", result)
	}
}

func TestDivideBy70(t *testing.T) {
	result := operations.DivideBy70(17000)
	
	if result != 242 {
		t.Errorf("Expected 242 but got %d", result)
	}
}

func TestDivideBy71(t *testing.T) {
	result := operations.DivideBy71(17000)
	
	if result != 239 {
		t.Errorf("Expected 239 but got %d", result)
	}
}

func TestDivideBy72(t *testing.T) {
	result := operations.DivideBy72(17000)
	
	if result != 236 {
		t.Errorf("Expected 236 but got %d", result)
	}
}

func TestDivideBy73(t *testing.T) {
	result := operations.DivideBy73(17000)
	
	if result != 232 {
		t.Errorf("Expected 232 but got %d", result)
	}
}

func TestDivideBy74(t *testing.T) {
	result := operations.DivideBy74(17000)
	
	if result != 229 {
		t.Errorf("Expected 229 but got %d", result)
	}
}

func TestDivideBy75(t *testing.T) {
	result := operations.DivideBy75(17000)
	
	if result != 226 {
		t.Errorf("Expected 226 but got %d", result)
	}
}

func TestDivideBy76(t *testing.T) {
	result := operations.DivideBy76(17000)
	
	if result != 223 {
		t.Errorf("Expected 223 but got %d", result)
	}
}

func TestDivideBy77(t *testing.T) {
	result := operations.DivideBy77(17000)
	
	if result != 220 {
		t.Errorf("Expected 220 but got %d", result)
	}
}

func TestDivideBy78(t *testing.T) {
	result := operations.DivideBy78(17000)
	
	if result != 217 {
		t.Errorf("Expected 217 but got %d", result)
	}
}

func TestDivideBy79(t *testing.T) {
	result := operations.DivideBy79(17000)
	
	if result != 215 {
		t.Errorf("Expected 215 but got %d", result)
	}
}

func TestDivideBy80(t *testing.T) {
	result := operations.DivideBy80(17000)
	
	if result != 212 {
		t.Errorf("Expected 212 but got %d", result)
	}
}

func TestDivideBy81(t *testing.T) {
	result := operations.DivideBy81(17000)
	
	if result != 209 {
		t.Errorf("Expected 209 but got %d", result)
	}
}

func TestDivideBy82(t *testing.T) {
	result := operations.DivideBy82(17000)
	
	if result != 207 {
		t.Errorf("Expected 207 but got %d", result)
	}
}

func TestDivideBy83(t *testing.T) {
	result := operations.DivideBy83(17000)
	
	if result != 204 {
		t.Errorf("Expected 204 but got %d", result)
	}
}

func TestDivideBy84(t *testing.T) {
	result := operations.DivideBy84(17000)
	
	if result != 202 {
		t.Errorf("Expected 202 but got %d", result)
	}
}

func TestDivideBy85(t *testing.T) {
	result := operations.DivideBy85(17000)
	
	if result != 200 {
		t.Errorf("Expected 200 but got %d", result)
	}
}

func TestDivideBy86(t *testing.T) {
	result := operations.DivideBy86(17000)
	
	if result != 197 {
		t.Errorf("Expected 197 but got %d", result)
	}
}

func TestDivideBy87(t *testing.T) {
	result := operations.DivideBy87(17000)
	
	if result != 195 {
		t.Errorf("Expected 195 but got %d", result)
	}
}

func TestDivideBy88(t *testing.T) {
	result := operations.DivideBy88(17000)
	
	if result != 193 {
		t.Errorf("Expected 193 but got %d", result)
	}
}

func TestDivideBy89(t *testing.T) {
	result := operations.DivideBy89(17000)
	
	if result != 191 {
		t.Errorf("Expected 191 but got %d", result)
	}
}

func TestDivideBy90(t *testing.T) {
	result := operations.DivideBy90(17000)
	
	if result != 188 {
		t.Errorf("Expected 188 but got %d", result)
	}
}

func TestDivideBy91(t *testing.T) {
	result := operations.DivideBy91(17000)
	
	if result != 186 {
		t.Errorf("Expected 186 but got %d", result)
	}
}

func TestDivideBy92(t *testing.T) {
	result := operations.DivideBy92(17000)
	
	if result != 184 {
		t.Errorf("Expected 184 but got %d", result)
	}
}

func TestDivideBy93(t *testing.T) {
	result := operations.DivideBy93(17000)
	
	if result != 182 {
		t.Errorf("Expected 182 but got %d", result)
	}
}

func TestDivideBy94(t *testing.T) {
	result := operations.DivideBy94(17000)
	
	if result != 180 {
		t.Errorf("Expected 180 but got %d", result)
	}
}

func TestDivideBy95(t *testing.T) {
	result := operations.DivideBy95(17000)
	
	if result != 178 {
		t.Errorf("Expected 178 but got %d", result)
	}
}

func TestDivideBy96(t *testing.T) {
	result := operations.DivideBy96(17000)
	
	if result != 177 {
		t.Errorf("Expected 177 but got %d", result)
	}
}

func TestDivideBy97(t *testing.T) {
	result := operations.DivideBy97(17000)
	
	if result != 175 {
		t.Errorf("Expected 175 but got %d", result)
	}
}

func TestDivideBy98(t *testing.T) {
	result := operations.DivideBy98(17000)
	
	if result != 173 {
		t.Errorf("Expected 173 but got %d", result)
	}
}

func TestDivideBy99(t *testing.T) {
	result := operations.DivideBy99(17000)
	
	if result != 171 {
		t.Errorf("Expected 171 but got %d", result)
	}
}

func TestDivideBy100(t *testing.T) {
	result := operations.DivideBy100(17000)
	
	if result != 170 {
		t.Errorf("Expected 170 but got %d", result)
	}
}

func TestDivideBy101(t *testing.T) {
	result := operations.DivideBy101(17000)
	
	if result != 168 {
		t.Errorf("Expected 168 but got %d", result)
	}
}

func TestDivideBy102(t *testing.T) {
	result := operations.DivideBy102(17000)
	
	if result != 166 {
		t.Errorf("Expected 166 but got %d", result)
	}
}

func TestDivideBy103(t *testing.T) {
	result := operations.DivideBy103(17000)
	
	if result != 165 {
		t.Errorf("Expected 165 but got %d", result)
	}
}

func TestDivideBy104(t *testing.T) {
	result := operations.DivideBy104(17000)
	
	if result != 163 {
		t.Errorf("Expected 163 but got %d", result)
	}
}

func TestDivideBy105(t *testing.T) {
	result := operations.DivideBy105(17000)
	
	if result != 161 {
		t.Errorf("Expected 161 but got %d", result)
	}
}

func TestDivideBy106(t *testing.T) {
	result := operations.DivideBy106(17000)
	
	if result != 160 {
		t.Errorf("Expected 160 but got %d", result)
	}
}

func TestDivideBy107(t *testing.T) {
	result := operations.DivideBy107(17000)
	
	if result != 158 {
		t.Errorf("Expected 158 but got %d", result)
	}
}

func TestDivideBy108(t *testing.T) {
	result := operations.DivideBy108(17000)
	
	if result != 157 {
		t.Errorf("Expected 157 but got %d", result)
	}
}

func TestDivideBy109(t *testing.T) {
	result := operations.DivideBy109(17000)
	
	if result != 155 {
		t.Errorf("Expected 155 but got %d", result)
	}
}

func TestDivideBy110(t *testing.T) {
	result := operations.DivideBy110(17000)
	
	if result != 154 {
		t.Errorf("Expected 154 but got %d", result)
	}
}

func TestDivideBy111(t *testing.T) {
	result := operations.DivideBy111(17000)
	
	if result != 153 {
		t.Errorf("Expected 153 but got %d", result)
	}
}

func TestDivideBy112(t *testing.T) {
	result := operations.DivideBy112(17000)
	
	if result != 151 {
		t.Errorf("Expected 151 but got %d", result)
	}
}

func TestDivideBy113(t *testing.T) {
	result := operations.DivideBy113(17000)
	
	if result != 150 {
		t.Errorf("Expected 150 but got %d", result)
	}
}

func TestDivideBy114(t *testing.T) {
	result := operations.DivideBy114(17000)
	
	if result != 149 {
		t.Errorf("Expected 149 but got %d", result)
	}
}

func TestDivideBy115(t *testing.T) {
	result := operations.DivideBy115(17000)
	
	if result != 147 {
		t.Errorf("Expected 147 but got %d", result)
	}
}

func TestDivideBy116(t *testing.T) {
	result := operations.DivideBy116(17000)
	
	if result != 146 {
		t.Errorf("Expected 146 but got %d", result)
	}
}

func TestDivideBy117(t *testing.T) {
	result := operations.DivideBy117(17000)
	
	if result != 145 {
		t.Errorf("Expected 145 but got %d", result)
	}
}

func TestDivideBy118(t *testing.T) {
	result := operations.DivideBy118(17000)
	
	if result != 144 {
		t.Errorf("Expected 144 but got %d", result)
	}
}

func TestDivideBy119(t *testing.T) {
	result := operations.DivideBy119(17000)
	
	if result != 142 {
		t.Errorf("Expected 142 but got %d", result)
	}
}

func TestDivideBy120(t *testing.T) {
	result := operations.DivideBy120(17000)
	
	if result != 141 {
		t.Errorf("Expected 141 but got %d", result)
	}
}

func TestDivideBy121(t *testing.T) {
	result := operations.DivideBy121(17000)
	
	if result != 140 {
		t.Errorf("Expected 140 but got %d", result)
	}
}

func TestDivideBy122(t *testing.T) {
	result := operations.DivideBy122(17000)
	
	if result != 139 {
		t.Errorf("Expected 139 but got %d", result)
	}
}

func TestDivideBy123(t *testing.T) {
	result := operations.DivideBy123(17000)
	
	if result != 138 {
		t.Errorf("Expected 138 but got %d", result)
	}
}

func TestDivideBy124(t *testing.T) {
	result := operations.DivideBy124(17000)
	
	if result != 137 {
		t.Errorf("Expected 137 but got %d", result)
	}
}

func TestDivideBy125(t *testing.T) {
	result := operations.DivideBy125(17000)
	
	if result != 136 {
		t.Errorf("Expected 136 but got %d", result)
	}
}

func TestDivideBy126(t *testing.T) {
	result := operations.DivideBy126(17000)
	
	if result != 134 {
		t.Errorf("Expected 134 but got %d", result)
	}
}

func TestDivideBy127(t *testing.T) {
	result := operations.DivideBy127(17000)
	
	if result != 133 {
		t.Errorf("Expected 133 but got %d", result)
	}
}

func TestDivideBy128(t *testing.T) {
	result := operations.DivideBy128(17000)
	
	if result != 132 {
		t.Errorf("Expected 132 but got %d", result)
	}
}

func TestDivideBy129(t *testing.T) {
	result := operations.DivideBy129(17000)
	
	if result != 131 {
		t.Errorf("Expected 131 but got %d", result)
	}
}

func TestDivideBy130(t *testing.T) {
	result := operations.DivideBy130(17000)
	
	if result != 130 {
		t.Errorf("Expected 130 but got %d", result)
	}
}

func TestDivideBy131(t *testing.T) {
	result := operations.DivideBy131(17000)
	
	if result != 129 {
		t.Errorf("Expected 129 but got %d", result)
	}
}

func TestDivideBy132(t *testing.T) {
	result := operations.DivideBy132(17000)
	
	if result != 128 {
		t.Errorf("Expected 128 but got %d", result)
	}
}

func TestDivideBy133(t *testing.T) {
	result := operations.DivideBy133(17000)
	
	if result != 127 {
		t.Errorf("Expected 127 but got %d", result)
	}
}

func TestDivideBy134(t *testing.T) {
	result := operations.DivideBy134(17000)
	
	if result != 126 {
		t.Errorf("Expected 126 but got %d", result)
	}
}

func TestDivideBy135(t *testing.T) {
	result := operations.DivideBy135(17000)
	
	if result != 125 {
		t.Errorf("Expected 125 but got %d", result)
	}
}

func TestDivideBy136(t *testing.T) {
	result := operations.DivideBy136(17000)
	
	if result != 125 {
		t.Errorf("Expected 125 but got %d", result)
	}
}

func TestDivideBy137(t *testing.T) {
	result := operations.DivideBy137(17000)
	
	if result != 124 {
		t.Errorf("Expected 124 but got %d", result)
	}
}

func TestDivideBy138(t *testing.T) {
	result := operations.DivideBy138(17000)
	
	if result != 123 {
		t.Errorf("Expected 123 but got %d", result)
	}
}

func TestDivideBy139(t *testing.T) {
	result := operations.DivideBy139(17000)
	
	if result != 122 {
		t.Errorf("Expected 122 but got %d", result)
	}
}

func TestDivideBy140(t *testing.T) {
	result := operations.DivideBy140(17000)
	
	if result != 121 {
		t.Errorf("Expected 121 but got %d", result)
	}
}

func TestDivideBy141(t *testing.T) {
	result := operations.DivideBy141(17000)
	
	if result != 120 {
		t.Errorf("Expected 120 but got %d", result)
	}
}

func TestDivideBy142(t *testing.T) {
	result := operations.DivideBy142(17000)
	
	if result != 119 {
		t.Errorf("Expected 119 but got %d", result)
	}
}

func TestDivideBy143(t *testing.T) {
	result := operations.DivideBy143(17000)
	
	if result != 118 {
		t.Errorf("Expected 118 but got %d", result)
	}
}

func TestDivideBy144(t *testing.T) {
	result := operations.DivideBy144(17000)
	
	if result != 118 {
		t.Errorf("Expected 118 but got %d", result)
	}
}

func TestDivideBy145(t *testing.T) {
	result := operations.DivideBy145(17000)
	
	if result != 117 {
		t.Errorf("Expected 117 but got %d", result)
	}
}

func TestDivideBy146(t *testing.T) {
	result := operations.DivideBy146(17000)
	
	if result != 116 {
		t.Errorf("Expected 116 but got %d", result)
	}
}

func TestDivideBy147(t *testing.T) {
	result := operations.DivideBy147(17000)
	
	if result != 115 {
		t.Errorf("Expected 115 but got %d", result)
	}
}

func TestDivideBy148(t *testing.T) {
	result := operations.DivideBy148(17000)
	
	if result != 114 {
		t.Errorf("Expected 114 but got %d", result)
	}
}

func TestDivideBy149(t *testing.T) {
	result := operations.DivideBy149(17000)
	
	if result != 114 {
		t.Errorf("Expected 114 but got %d", result)
	}
}

func TestDivideBy150(t *testing.T) {
	result := operations.DivideBy150(17000)
	
	if result != 113 {
		t.Errorf("Expected 113 but got %d", result)
	}
}

func TestDivideBy151(t *testing.T) {
	result := operations.DivideBy151(17000)
	
	if result != 112 {
		t.Errorf("Expected 112 but got %d", result)
	}
}

func TestDivideBy152(t *testing.T) {
	result := operations.DivideBy152(17000)
	
	if result != 111 {
		t.Errorf("Expected 111 but got %d", result)
	}
}

func TestDivideBy153(t *testing.T) {
	result := operations.DivideBy153(17000)
	
	if result != 111 {
		t.Errorf("Expected 111 but got %d", result)
	}
}

func TestDivideBy154(t *testing.T) {
	result := operations.DivideBy154(17000)
	
	if result != 110 {
		t.Errorf("Expected 110 but got %d", result)
	}
}

func TestDivideBy155(t *testing.T) {
	result := operations.DivideBy155(17000)
	
	if result != 109 {
		t.Errorf("Expected 109 but got %d", result)
	}
}

func TestDivideBy156(t *testing.T) {
	result := operations.DivideBy156(17000)
	
	if result != 108 {
		t.Errorf("Expected 108 but got %d", result)
	}
}

func TestDivideBy157(t *testing.T) {
	result := operations.DivideBy157(17000)
	
	if result != 108 {
		t.Errorf("Expected 108 but got %d", result)
	}
}

func TestDivideBy158(t *testing.T) {
	result := operations.DivideBy158(17000)
	
	if result != 107 {
		t.Errorf("Expected 107 but got %d", result)
	}
}

func TestDivideBy159(t *testing.T) {
	result := operations.DivideBy159(17000)
	
	if result != 106 {
		t.Errorf("Expected 106 but got %d", result)
	}
}

func TestDivideBy160(t *testing.T) {
	result := operations.DivideBy160(17000)
	
	if result != 106 {
		t.Errorf("Expected 106 but got %d", result)
	}
}

func TestDivideBy161(t *testing.T) {
	result := operations.DivideBy161(17000)
	
	if result != 105 {
		t.Errorf("Expected 105 but got %d", result)
	}
}

func TestDivideBy162(t *testing.T) {
	result := operations.DivideBy162(17000)
	
	if result != 104 {
		t.Errorf("Expected 104 but got %d", result)
	}
}

func TestDivideBy163(t *testing.T) {
	result := operations.DivideBy163(17000)
	
	if result != 104 {
		t.Errorf("Expected 104 but got %d", result)
	}
}

func TestDivideBy164(t *testing.T) {
	result := operations.DivideBy164(17000)
	
	if result != 103 {
		t.Errorf("Expected 103 but got %d", result)
	}
}

func TestDivideBy165(t *testing.T) {
	result := operations.DivideBy165(17000)
	
	if result != 103 {
		t.Errorf("Expected 103 but got %d", result)
	}
}

func TestDivideBy166(t *testing.T) {
	result := operations.DivideBy166(17000)
	
	if result != 102 {
		t.Errorf("Expected 102 but got %d", result)
	}
}

func TestDivideBy167(t *testing.T) {
	result := operations.DivideBy167(17000)
	
	if result != 101 {
		t.Errorf("Expected 101 but got %d", result)
	}
}

func TestDivideBy168(t *testing.T) {
	result := operations.DivideBy168(17000)
	
	if result != 101 {
		t.Errorf("Expected 101 but got %d", result)
	}
}

func TestDivideBy169(t *testing.T) {
	result := operations.DivideBy169(17000)
	
	if result != 100 {
		t.Errorf("Expected 100 but got %d", result)
	}
}

func TestDivideBy170(t *testing.T) {
	result := operations.DivideBy170(17000)
	
	if result != 100 {
		t.Errorf("Expected 100 but got %d", result)
	}
}

func TestDivideBy171(t *testing.T) {
	result := operations.DivideBy171(17000)
	
	if result != 99 {
		t.Errorf("Expected 99 but got %d", result)
	}
}

func TestDivideBy172(t *testing.T) {
	result := operations.DivideBy172(17000)
	
	if result != 98 {
		t.Errorf("Expected 98 but got %d", result)
	}
}

func TestDivideBy173(t *testing.T) {
	result := operations.DivideBy173(17000)
	
	if result != 98 {
		t.Errorf("Expected 98 but got %d", result)
	}
}

func TestDivideBy174(t *testing.T) {
	result := operations.DivideBy174(17000)
	
	if result != 97 {
		t.Errorf("Expected 97 but got %d", result)
	}
}

func TestDivideBy175(t *testing.T) {
	result := operations.DivideBy175(17000)
	
	if result != 97 {
		t.Errorf("Expected 97 but got %d", result)
	}
}

func TestDivideBy176(t *testing.T) {
	result := operations.DivideBy176(17000)
	
	if result != 96 {
		t.Errorf("Expected 96 but got %d", result)
	}
}

func TestDivideBy177(t *testing.T) {
	result := operations.DivideBy177(17000)
	
	if result != 96 {
		t.Errorf("Expected 96 but got %d", result)
	}
}

func TestDivideBy178(t *testing.T) {
	result := operations.DivideBy178(17000)
	
	if result != 95 {
		t.Errorf("Expected 95 but got %d", result)
	}
}

func TestDivideBy179(t *testing.T) {
	result := operations.DivideBy179(17000)
	
	if result != 94 {
		t.Errorf("Expected 94 but got %d", result)
	}
}

func TestDivideBy180(t *testing.T) {
	result := operations.DivideBy180(17000)
	
	if result != 94 {
		t.Errorf("Expected 94 but got %d", result)
	}
}

func TestDivideBy181(t *testing.T) {
	result := operations.DivideBy181(17000)
	
	if result != 93 {
		t.Errorf("Expected 93 but got %d", result)
	}
}

func TestDivideBy182(t *testing.T) {
	result := operations.DivideBy182(17000)
	
	if result != 93 {
		t.Errorf("Expected 93 but got %d", result)
	}
}

func TestDivideBy183(t *testing.T) {
	result := operations.DivideBy183(17000)
	
	if result != 92 {
		t.Errorf("Expected 92 but got %d", result)
	}
}

func TestDivideBy184(t *testing.T) {
	result := operations.DivideBy184(17000)
	
	if result != 92 {
		t.Errorf("Expected 92 but got %d", result)
	}
}

func TestDivideBy185(t *testing.T) {
	result := operations.DivideBy185(17000)
	
	if result != 91 {
		t.Errorf("Expected 91 but got %d", result)
	}
}

func TestDivideBy186(t *testing.T) {
	result := operations.DivideBy186(17000)
	
	if result != 91 {
		t.Errorf("Expected 91 but got %d", result)
	}
}

func TestDivideBy187(t *testing.T) {
	result := operations.DivideBy187(17000)
	
	if result != 90 {
		t.Errorf("Expected 90 but got %d", result)
	}
}

func TestDivideBy188(t *testing.T) {
	result := operations.DivideBy188(17000)
	
	if result != 90 {
		t.Errorf("Expected 90 but got %d", result)
	}
}

func TestDivideBy189(t *testing.T) {
	result := operations.DivideBy189(17000)
	
	if result != 89 {
		t.Errorf("Expected 89 but got %d", result)
	}
}

func TestDivideBy190(t *testing.T) {
	result := operations.DivideBy190(17000)
	
	if result != 89 {
		t.Errorf("Expected 89 but got %d", result)
	}
}

func TestDivideBy191(t *testing.T) {
	result := operations.DivideBy191(17000)
	
	if result != 89 {
		t.Errorf("Expected 89 but got %d", result)
	}
}

func TestDivideBy192(t *testing.T) {
	result := operations.DivideBy192(17000)
	
	if result != 88 {
		t.Errorf("Expected 88 but got %d", result)
	}
}

func TestDivideBy193(t *testing.T) {
	result := operations.DivideBy193(17000)
	
	if result != 88 {
		t.Errorf("Expected 88 but got %d", result)
	}
}

func TestDivideBy194(t *testing.T) {
	result := operations.DivideBy194(17000)
	
	if result != 87 {
		t.Errorf("Expected 87 but got %d", result)
	}
}

func TestDivideBy195(t *testing.T) {
	result := operations.DivideBy195(17000)
	
	if result != 87 {
		t.Errorf("Expected 87 but got %d", result)
	}
}

func TestDivideBy196(t *testing.T) {
	result := operations.DivideBy196(17000)
	
	if result != 86 {
		t.Errorf("Expected 86 but got %d", result)
	}
}

func TestDivideBy197(t *testing.T) {
	result := operations.DivideBy197(17000)
	
	if result != 86 {
		t.Errorf("Expected 86 but got %d", result)
	}
}

func TestDivideBy198(t *testing.T) {
	result := operations.DivideBy198(17000)
	
	if result != 85 {
		t.Errorf("Expected 85 but got %d", result)
	}
}

func TestDivideBy199(t *testing.T) {
	result := operations.DivideBy199(17000)
	
	if result != 85 {
		t.Errorf("Expected 85 but got %d", result)
	}
}

func TestDivideBy200(t *testing.T) {
	result := operations.DivideBy200(17000)
	
	if result != 85 {
		t.Errorf("Expected 85 but got %d", result)
	}
}

func TestDivideBy201(t *testing.T) {
	result := operations.DivideBy201(17000)
	
	if result != 84 {
		t.Errorf("Expected 84 but got %d", result)
	}
}

func TestDivideBy202(t *testing.T) {
	result := operations.DivideBy202(17000)
	
	if result != 84 {
		t.Errorf("Expected 84 but got %d", result)
	}
}

func TestDivideBy203(t *testing.T) {
	result := operations.DivideBy203(17000)
	
	if result != 83 {
		t.Errorf("Expected 83 but got %d", result)
	}
}

func TestDivideBy204(t *testing.T) {
	result := operations.DivideBy204(17000)
	
	if result != 83 {
		t.Errorf("Expected 83 but got %d", result)
	}
}

func TestDivideBy205(t *testing.T) {
	result := operations.DivideBy205(17000)
	
	if result != 82 {
		t.Errorf("Expected 82 but got %d", result)
	}
}

func TestDivideBy206(t *testing.T) {
	result := operations.DivideBy206(17000)
	
	if result != 82 {
		t.Errorf("Expected 82 but got %d", result)
	}
}

func TestDivideBy207(t *testing.T) {
	result := operations.DivideBy207(17000)
	
	if result != 82 {
		t.Errorf("Expected 82 but got %d", result)
	}
}

func TestDivideBy208(t *testing.T) {
	result := operations.DivideBy208(17000)
	
	if result != 81 {
		t.Errorf("Expected 81 but got %d", result)
	}
}

func TestDivideBy209(t *testing.T) {
	result := operations.DivideBy209(17000)
	
	if result != 81 {
		t.Errorf("Expected 81 but got %d", result)
	}
}

func TestDivideBy210(t *testing.T) {
	result := operations.DivideBy210(17000)
	
	if result != 80 {
		t.Errorf("Expected 80 but got %d", result)
	}
}

func TestDivideBy211(t *testing.T) {
	result := operations.DivideBy211(17000)
	
	if result != 80 {
		t.Errorf("Expected 80 but got %d", result)
	}
}

func TestDivideBy212(t *testing.T) {
	result := operations.DivideBy212(17000)
	
	if result != 80 {
		t.Errorf("Expected 80 but got %d", result)
	}
}

func TestDivideBy213(t *testing.T) {
	result := operations.DivideBy213(17000)
	
	if result != 79 {
		t.Errorf("Expected 79 but got %d", result)
	}
}

func TestDivideBy214(t *testing.T) {
	result := operations.DivideBy214(17000)
	
	if result != 79 {
		t.Errorf("Expected 79 but got %d", result)
	}
}

func TestDivideBy215(t *testing.T) {
	result := operations.DivideBy215(17000)
	
	if result != 79 {
		t.Errorf("Expected 79 but got %d", result)
	}
}

func TestDivideBy216(t *testing.T) {
	result := operations.DivideBy216(17000)
	
	if result != 78 {
		t.Errorf("Expected 78 but got %d", result)
	}
}

func TestDivideBy217(t *testing.T) {
	result := operations.DivideBy217(17000)
	
	if result != 78 {
		t.Errorf("Expected 78 but got %d", result)
	}
}

func TestDivideBy218(t *testing.T) {
	result := operations.DivideBy218(17000)
	
	if result != 77 {
		t.Errorf("Expected 77 but got %d", result)
	}
}

func TestDivideBy219(t *testing.T) {
	result := operations.DivideBy219(17000)
	
	if result != 77 {
		t.Errorf("Expected 77 but got %d", result)
	}
}

func TestDivideBy220(t *testing.T) {
	result := operations.DivideBy220(17000)
	
	if result != 77 {
		t.Errorf("Expected 77 but got %d", result)
	}
}

func TestDivideBy221(t *testing.T) {
	result := operations.DivideBy221(17000)
	
	if result != 76 {
		t.Errorf("Expected 76 but got %d", result)
	}
}

func TestDivideBy222(t *testing.T) {
	result := operations.DivideBy222(17000)
	
	if result != 76 {
		t.Errorf("Expected 76 but got %d", result)
	}
}

func TestDivideBy223(t *testing.T) {
	result := operations.DivideBy223(17000)
	
	if result != 76 {
		t.Errorf("Expected 76 but got %d", result)
	}
}

func TestDivideBy224(t *testing.T) {
	result := operations.DivideBy224(17000)
	
	if result != 75 {
		t.Errorf("Expected 75 but got %d", result)
	}
}

func TestDivideBy225(t *testing.T) {
	result := operations.DivideBy225(17000)
	
	if result != 75 {
		t.Errorf("Expected 75 but got %d", result)
	}
}

func TestDivideBy226(t *testing.T) {
	result := operations.DivideBy226(17000)
	
	if result != 75 {
		t.Errorf("Expected 75 but got %d", result)
	}
}

func TestDivideBy227(t *testing.T) {
	result := operations.DivideBy227(17000)
	
	if result != 74 {
		t.Errorf("Expected 74 but got %d", result)
	}
}

func TestDivideBy228(t *testing.T) {
	result := operations.DivideBy228(17000)
	
	if result != 74 {
		t.Errorf("Expected 74 but got %d", result)
	}
}

func TestDivideBy229(t *testing.T) {
	result := operations.DivideBy229(17000)
	
	if result != 74 {
		t.Errorf("Expected 74 but got %d", result)
	}
}

func TestDivideBy230(t *testing.T) {
	result := operations.DivideBy230(17000)
	
	if result != 73 {
		t.Errorf("Expected 73 but got %d", result)
	}
}

func TestDivideBy231(t *testing.T) {
	result := operations.DivideBy231(17000)
	
	if result != 73 {
		t.Errorf("Expected 73 but got %d", result)
	}
}

func TestDivideBy232(t *testing.T) {
	result := operations.DivideBy232(17000)
	
	if result != 73 {
		t.Errorf("Expected 73 but got %d", result)
	}
}

func TestDivideBy233(t *testing.T) {
	result := operations.DivideBy233(17000)
	
	if result != 72 {
		t.Errorf("Expected 72 but got %d", result)
	}
}

func TestDivideBy234(t *testing.T) {
	result := operations.DivideBy234(17000)
	
	if result != 72 {
		t.Errorf("Expected 72 but got %d", result)
	}
}

func TestDivideBy235(t *testing.T) {
	result := operations.DivideBy235(17000)
	
	if result != 72 {
		t.Errorf("Expected 72 but got %d", result)
	}
}

func TestDivideBy236(t *testing.T) {
	result := operations.DivideBy236(17000)
	
	if result != 72 {
		t.Errorf("Expected 72 but got %d", result)
	}
}

func TestDivideBy237(t *testing.T) {
	result := operations.DivideBy237(17000)
	
	if result != 71 {
		t.Errorf("Expected 71 but got %d", result)
	}
}

func TestDivideBy238(t *testing.T) {
	result := operations.DivideBy238(17000)
	
	if result != 71 {
		t.Errorf("Expected 71 but got %d", result)
	}
}

func TestDivideBy239(t *testing.T) {
	result := operations.DivideBy239(17000)
	
	if result != 71 {
		t.Errorf("Expected 71 but got %d", result)
	}
}

func TestDivideBy240(t *testing.T) {
	result := operations.DivideBy240(17000)
	
	if result != 70 {
		t.Errorf("Expected 70 but got %d", result)
	}
}

func TestDivideBy241(t *testing.T) {
	result := operations.DivideBy241(17000)
	
	if result != 70 {
		t.Errorf("Expected 70 but got %d", result)
	}
}

func TestDivideBy242(t *testing.T) {
	result := operations.DivideBy242(17000)
	
	if result != 70 {
		t.Errorf("Expected 70 but got %d", result)
	}
}

func TestDivideBy243(t *testing.T) {
	result := operations.DivideBy243(17000)
	
	if result != 69 {
		t.Errorf("Expected 69 but got %d", result)
	}
}

func TestDivideBy244(t *testing.T) {
	result := operations.DivideBy244(17000)
	
	if result != 69 {
		t.Errorf("Expected 69 but got %d", result)
	}
}

func TestDivideBy245(t *testing.T) {
	result := operations.DivideBy245(17000)
	
	if result != 69 {
		t.Errorf("Expected 69 but got %d", result)
	}
}

func TestDivideBy246(t *testing.T) {
	result := operations.DivideBy246(17000)
	
	if result != 69 {
		t.Errorf("Expected 69 but got %d", result)
	}
}

func TestDivideBy247(t *testing.T) {
	result := operations.DivideBy247(17000)
	
	if result != 68 {
		t.Errorf("Expected 68 but got %d", result)
	}
}

func TestDivideBy248(t *testing.T) {
	result := operations.DivideBy248(17000)
	
	if result != 68 {
		t.Errorf("Expected 68 but got %d", result)
	}
}

func TestDivideBy249(t *testing.T) {
	result := operations.DivideBy249(17000)
	
	if result != 68 {
		t.Errorf("Expected 68 but got %d", result)
	}
}

func TestDivideBy250(t *testing.T) {
	result := operations.DivideBy250(17000)
	
	if result != 68 {
		t.Errorf("Expected 68 but got %d", result)
	}
}

func TestDivideBy251(t *testing.T) {
	result := operations.DivideBy251(17000)
	
	if result != 67 {
		t.Errorf("Expected 67 but got %d", result)
	}
}

func TestDivideBy252(t *testing.T) {
	result := operations.DivideBy252(17000)
	
	if result != 67 {
		t.Errorf("Expected 67 but got %d", result)
	}
}

func TestDivideBy253(t *testing.T) {
	result := operations.DivideBy253(17000)
	
	if result != 67 {
		t.Errorf("Expected 67 but got %d", result)
	}
}

func TestDivideBy254(t *testing.T) {
	result := operations.DivideBy254(17000)
	
	if result != 66 {
		t.Errorf("Expected 66 but got %d", result)
	}
}

func TestDivideBy255(t *testing.T) {
	result := operations.DivideBy255(17000)
	
	if result != 66 {
		t.Errorf("Expected 66 but got %d", result)
	}
}

func TestDivideBy256(t *testing.T) {
	result := operations.DivideBy256(17000)
	
	if result != 66 {
		t.Errorf("Expected 66 but got %d", result)
	}
}

func TestDivideBy257(t *testing.T) {
	result := operations.DivideBy257(17000)
	
	if result != 66 {
		t.Errorf("Expected 66 but got %d", result)
	}
}

func TestDivideBy258(t *testing.T) {
	result := operations.DivideBy258(17000)
	
	if result != 65 {
		t.Errorf("Expected 65 but got %d", result)
	}
}

func TestDivideBy259(t *testing.T) {
	result := operations.DivideBy259(17000)
	
	if result != 65 {
		t.Errorf("Expected 65 but got %d", result)
	}
}

func TestDivideBy260(t *testing.T) {
	result := operations.DivideBy260(17000)
	
	if result != 65 {
		t.Errorf("Expected 65 but got %d", result)
	}
}

func TestDivideBy261(t *testing.T) {
	result := operations.DivideBy261(17000)
	
	if result != 65 {
		t.Errorf("Expected 65 but got %d", result)
	}
}

func TestDivideBy262(t *testing.T) {
	result := operations.DivideBy262(17000)
	
	if result != 64 {
		t.Errorf("Expected 64 but got %d", result)
	}
}

func TestDivideBy263(t *testing.T) {
	result := operations.DivideBy263(17000)
	
	if result != 64 {
		t.Errorf("Expected 64 but got %d", result)
	}
}

func TestDivideBy264(t *testing.T) {
	result := operations.DivideBy264(17000)
	
	if result != 64 {
		t.Errorf("Expected 64 but got %d", result)
	}
}

func TestDivideBy265(t *testing.T) {
	result := operations.DivideBy265(17000)
	
	if result != 64 {
		t.Errorf("Expected 64 but got %d", result)
	}
}

func TestDivideBy266(t *testing.T) {
	result := operations.DivideBy266(17000)
	
	if result != 63 {
		t.Errorf("Expected 63 but got %d", result)
	}
}

func TestDivideBy267(t *testing.T) {
	result := operations.DivideBy267(17000)
	
	if result != 63 {
		t.Errorf("Expected 63 but got %d", result)
	}
}

func TestDivideBy268(t *testing.T) {
	result := operations.DivideBy268(17000)
	
	if result != 63 {
		t.Errorf("Expected 63 but got %d", result)
	}
}

func TestDivideBy269(t *testing.T) {
	result := operations.DivideBy269(17000)
	
	if result != 63 {
		t.Errorf("Expected 63 but got %d", result)
	}
}

func TestDivideBy270(t *testing.T) {
	result := operations.DivideBy270(17000)
	
	if result != 62 {
		t.Errorf("Expected 62 but got %d", result)
	}
}

func TestDivideBy271(t *testing.T) {
	result := operations.DivideBy271(17000)
	
	if result != 62 {
		t.Errorf("Expected 62 but got %d", result)
	}
}

func TestDivideBy272(t *testing.T) {
	result := operations.DivideBy272(17000)
	
	if result != 62 {
		t.Errorf("Expected 62 but got %d", result)
	}
}

func TestDivideBy273(t *testing.T) {
	result := operations.DivideBy273(17000)
	
	if result != 62 {
		t.Errorf("Expected 62 but got %d", result)
	}
}

func TestDivideBy274(t *testing.T) {
	result := operations.DivideBy274(17000)
	
	if result != 62 {
		t.Errorf("Expected 62 but got %d", result)
	}
}

func TestDivideBy275(t *testing.T) {
	result := operations.DivideBy275(17000)
	
	if result != 61 {
		t.Errorf("Expected 61 but got %d", result)
	}
}

func TestDivideBy276(t *testing.T) {
	result := operations.DivideBy276(17000)
	
	if result != 61 {
		t.Errorf("Expected 61 but got %d", result)
	}
}

func TestDivideBy277(t *testing.T) {
	result := operations.DivideBy277(17000)
	
	if result != 61 {
		t.Errorf("Expected 61 but got %d", result)
	}
}

func TestDivideBy278(t *testing.T) {
	result := operations.DivideBy278(17000)
	
	if result != 61 {
		t.Errorf("Expected 61 but got %d", result)
	}
}

func TestDivideBy279(t *testing.T) {
	result := operations.DivideBy279(17000)
	
	if result != 60 {
		t.Errorf("Expected 60 but got %d", result)
	}
}

func TestDivideBy280(t *testing.T) {
	result := operations.DivideBy280(17000)
	
	if result != 60 {
		t.Errorf("Expected 60 but got %d", result)
	}
}

func TestDivideBy281(t *testing.T) {
	result := operations.DivideBy281(17000)
	
	if result != 60 {
		t.Errorf("Expected 60 but got %d", result)
	}
}

func TestDivideBy282(t *testing.T) {
	result := operations.DivideBy282(17000)
	
	if result != 60 {
		t.Errorf("Expected 60 but got %d", result)
	}
}

func TestDivideBy283(t *testing.T) {
	result := operations.DivideBy283(17000)
	
	if result != 60 {
		t.Errorf("Expected 60 but got %d", result)
	}
}

func TestDivideBy284(t *testing.T) {
	result := operations.DivideBy284(17000)
	
	if result != 59 {
		t.Errorf("Expected 59 but got %d", result)
	}
}

func TestDivideBy285(t *testing.T) {
	result := operations.DivideBy285(17000)
	
	if result != 59 {
		t.Errorf("Expected 59 but got %d", result)
	}
}

func TestDivideBy286(t *testing.T) {
	result := operations.DivideBy286(17000)
	
	if result != 59 {
		t.Errorf("Expected 59 but got %d", result)
	}
}

func TestDivideBy287(t *testing.T) {
	result := operations.DivideBy287(17000)
	
	if result != 59 {
		t.Errorf("Expected 59 but got %d", result)
	}
}

func TestDivideBy288(t *testing.T) {
	result := operations.DivideBy288(17000)
	
	if result != 59 {
		t.Errorf("Expected 59 but got %d", result)
	}
}

func TestDivideBy289(t *testing.T) {
	result := operations.DivideBy289(17000)
	
	if result != 58 {
		t.Errorf("Expected 58 but got %d", result)
	}
}

func TestDivideBy290(t *testing.T) {
	result := operations.DivideBy290(17000)
	
	if result != 58 {
		t.Errorf("Expected 58 but got %d", result)
	}
}

func TestDivideBy291(t *testing.T) {
	result := operations.DivideBy291(17000)
	
	if result != 58 {
		t.Errorf("Expected 58 but got %d", result)
	}
}

func TestDivideBy292(t *testing.T) {
	result := operations.DivideBy292(17000)
	
	if result != 58 {
		t.Errorf("Expected 58 but got %d", result)
	}
}

func TestDivideBy293(t *testing.T) {
	result := operations.DivideBy293(17000)
	
	if result != 58 {
		t.Errorf("Expected 58 but got %d", result)
	}
}

func TestDivideBy294(t *testing.T) {
	result := operations.DivideBy294(17000)
	
	if result != 57 {
		t.Errorf("Expected 57 but got %d", result)
	}
}

func TestDivideBy295(t *testing.T) {
	result := operations.DivideBy295(17000)
	
	if result != 57 {
		t.Errorf("Expected 57 but got %d", result)
	}
}

func TestDivideBy296(t *testing.T) {
	result := operations.DivideBy296(17000)
	
	if result != 57 {
		t.Errorf("Expected 57 but got %d", result)
	}
}

func TestDivideBy297(t *testing.T) {
	result := operations.DivideBy297(17000)
	
	if result != 57 {
		t.Errorf("Expected 57 but got %d", result)
	}
}

func TestDivideBy298(t *testing.T) {
	result := operations.DivideBy298(17000)
	
	if result != 57 {
		t.Errorf("Expected 57 but got %d", result)
	}
}

func TestDivideBy299(t *testing.T) {
	result := operations.DivideBy299(17000)
	
	if result != 56 {
		t.Errorf("Expected 56 but got %d", result)
	}
}

func TestDivideBy300(t *testing.T) {
	result := operations.DivideBy300(17000)
	
	if result != 56 {
		t.Errorf("Expected 56 but got %d", result)
	}
}

func TestDivideBy301(t *testing.T) {
	result := operations.DivideBy301(17000)
	
	if result != 56 {
		t.Errorf("Expected 56 but got %d", result)
	}
}

func TestDivideBy302(t *testing.T) {
	result := operations.DivideBy302(17000)
	
	if result != 56 {
		t.Errorf("Expected 56 but got %d", result)
	}
}

func TestDivideBy303(t *testing.T) {
	result := operations.DivideBy303(17000)
	
	if result != 56 {
		t.Errorf("Expected 56 but got %d", result)
	}
}

func TestDivideBy304(t *testing.T) {
	result := operations.DivideBy304(17000)
	
	if result != 55 {
		t.Errorf("Expected 55 but got %d", result)
	}
}

func TestDivideBy305(t *testing.T) {
	result := operations.DivideBy305(17000)
	
	if result != 55 {
		t.Errorf("Expected 55 but got %d", result)
	}
}

func TestDivideBy306(t *testing.T) {
	result := operations.DivideBy306(17000)
	
	if result != 55 {
		t.Errorf("Expected 55 but got %d", result)
	}
}

func TestDivideBy307(t *testing.T) {
	result := operations.DivideBy307(17000)
	
	if result != 55 {
		t.Errorf("Expected 55 but got %d", result)
	}
}

func TestDivideBy308(t *testing.T) {
	result := operations.DivideBy308(17000)
	
	if result != 55 {
		t.Errorf("Expected 55 but got %d", result)
	}
}

func TestDivideBy309(t *testing.T) {
	result := operations.DivideBy309(17000)
	
	if result != 55 {
		t.Errorf("Expected 55 but got %d", result)
	}
}

func TestDivideBy310(t *testing.T) {
	result := operations.DivideBy310(17000)
	
	if result != 54 {
		t.Errorf("Expected 54 but got %d", result)
	}
}

func TestDivideBy311(t *testing.T) {
	result := operations.DivideBy311(17000)
	
	if result != 54 {
		t.Errorf("Expected 54 but got %d", result)
	}
}

func TestDivideBy312(t *testing.T) {
	result := operations.DivideBy312(17000)
	
	if result != 54 {
		t.Errorf("Expected 54 but got %d", result)
	}
}

func TestDivideBy313(t *testing.T) {
	result := operations.DivideBy313(17000)
	
	if result != 54 {
		t.Errorf("Expected 54 but got %d", result)
	}
}

func TestDivideBy314(t *testing.T) {
	result := operations.DivideBy314(17000)
	
	if result != 54 {
		t.Errorf("Expected 54 but got %d", result)
	}
}

func TestDivideBy315(t *testing.T) {
	result := operations.DivideBy315(17000)
	
	if result != 53 {
		t.Errorf("Expected 53 but got %d", result)
	}
}

func TestDivideBy316(t *testing.T) {
	result := operations.DivideBy316(17000)
	
	if result != 53 {
		t.Errorf("Expected 53 but got %d", result)
	}
}

func TestDivideBy317(t *testing.T) {
	result := operations.DivideBy317(17000)
	
	if result != 53 {
		t.Errorf("Expected 53 but got %d", result)
	}
}

func TestDivideBy318(t *testing.T) {
	result := operations.DivideBy318(17000)
	
	if result != 53 {
		t.Errorf("Expected 53 but got %d", result)
	}
}

func TestDivideBy319(t *testing.T) {
	result := operations.DivideBy319(17000)
	
	if result != 53 {
		t.Errorf("Expected 53 but got %d", result)
	}
}

func TestDivideBy320(t *testing.T) {
	result := operations.DivideBy320(17000)
	
	if result != 53 {
		t.Errorf("Expected 53 but got %d", result)
	}
}

func TestDivideBy321(t *testing.T) {
	result := operations.DivideBy321(17000)
	
	if result != 52 {
		t.Errorf("Expected 52 but got %d", result)
	}
}

func TestDivideBy322(t *testing.T) {
	result := operations.DivideBy322(17000)
	
	if result != 52 {
		t.Errorf("Expected 52 but got %d", result)
	}
}

func TestDivideBy323(t *testing.T) {
	result := operations.DivideBy323(17000)
	
	if result != 52 {
		t.Errorf("Expected 52 but got %d", result)
	}
}

func TestDivideBy324(t *testing.T) {
	result := operations.DivideBy324(17000)
	
	if result != 52 {
		t.Errorf("Expected 52 but got %d", result)
	}
}

func TestDivideBy325(t *testing.T) {
	result := operations.DivideBy325(17000)
	
	if result != 52 {
		t.Errorf("Expected 52 but got %d", result)
	}
}

func TestDivideBy326(t *testing.T) {
	result := operations.DivideBy326(17000)
	
	if result != 52 {
		t.Errorf("Expected 52 but got %d", result)
	}
}

func TestDivideBy327(t *testing.T) {
	result := operations.DivideBy327(17000)
	
	if result != 51 {
		t.Errorf("Expected 51 but got %d", result)
	}
}

func TestDivideBy328(t *testing.T) {
	result := operations.DivideBy328(17000)
	
	if result != 51 {
		t.Errorf("Expected 51 but got %d", result)
	}
}

func TestDivideBy329(t *testing.T) {
	result := operations.DivideBy329(17000)
	
	if result != 51 {
		t.Errorf("Expected 51 but got %d", result)
	}
}

func TestDivideBy330(t *testing.T) {
	result := operations.DivideBy330(17000)
	
	if result != 51 {
		t.Errorf("Expected 51 but got %d", result)
	}
}

func TestDivideBy331(t *testing.T) {
	result := operations.DivideBy331(17000)
	
	if result != 51 {
		t.Errorf("Expected 51 but got %d", result)
	}
}

func TestDivideBy332(t *testing.T) {
	result := operations.DivideBy332(17000)
	
	if result != 51 {
		t.Errorf("Expected 51 but got %d", result)
	}
}

func TestDivideBy333(t *testing.T) {
	result := operations.DivideBy333(17000)
	
	if result != 51 {
		t.Errorf("Expected 51 but got %d", result)
	}
}

func TestDivideBy334(t *testing.T) {
	result := operations.DivideBy334(17000)
	
	if result != 50 {
		t.Errorf("Expected 50 but got %d", result)
	}
}

func TestDivideBy335(t *testing.T) {
	result := operations.DivideBy335(17000)
	
	if result != 50 {
		t.Errorf("Expected 50 but got %d", result)
	}
}

func TestDivideBy336(t *testing.T) {
	result := operations.DivideBy336(17000)
	
	if result != 50 {
		t.Errorf("Expected 50 but got %d", result)
	}
}

func TestDivideBy337(t *testing.T) {
	result := operations.DivideBy337(17000)
	
	if result != 50 {
		t.Errorf("Expected 50 but got %d", result)
	}
}

func TestDivideBy338(t *testing.T) {
	result := operations.DivideBy338(17000)
	
	if result != 50 {
		t.Errorf("Expected 50 but got %d", result)
	}
}

func TestDivideBy339(t *testing.T) {
	result := operations.DivideBy339(17000)
	
	if result != 50 {
		t.Errorf("Expected 50 but got %d", result)
	}
}

func TestDivideBy340(t *testing.T) {
	result := operations.DivideBy340(17000)
	
	if result != 50 {
		t.Errorf("Expected 50 but got %d", result)
	}
}

func TestDivideBy341(t *testing.T) {
	result := operations.DivideBy341(17000)
	
	if result != 49 {
		t.Errorf("Expected 49 but got %d", result)
	}
}

func TestDivideBy342(t *testing.T) {
	result := operations.DivideBy342(17000)
	
	if result != 49 {
		t.Errorf("Expected 49 but got %d", result)
	}
}

func TestDivideBy343(t *testing.T) {
	result := operations.DivideBy343(17000)
	
	if result != 49 {
		t.Errorf("Expected 49 but got %d", result)
	}
}

func TestDivideBy344(t *testing.T) {
	result := operations.DivideBy344(17000)
	
	if result != 49 {
		t.Errorf("Expected 49 but got %d", result)
	}
}

func TestDivideBy345(t *testing.T) {
	result := operations.DivideBy345(17000)
	
	if result != 49 {
		t.Errorf("Expected 49 but got %d", result)
	}
}

func TestDivideBy346(t *testing.T) {
	result := operations.DivideBy346(17000)
	
	if result != 49 {
		t.Errorf("Expected 49 but got %d", result)
	}
}

func TestDivideBy347(t *testing.T) {
	result := operations.DivideBy347(17000)
	
	if result != 48 {
		t.Errorf("Expected 48 but got %d", result)
	}
}

func TestDivideBy348(t *testing.T) {
	result := operations.DivideBy348(17000)
	
	if result != 48 {
		t.Errorf("Expected 48 but got %d", result)
	}
}

func TestDivideBy349(t *testing.T) {
	result := operations.DivideBy349(17000)
	
	if result != 48 {
		t.Errorf("Expected 48 but got %d", result)
	}
}

func TestDivideBy350(t *testing.T) {
	result := operations.DivideBy350(17000)
	
	if result != 48 {
		t.Errorf("Expected 48 but got %d", result)
	}
}

func TestDivideBy351(t *testing.T) {
	result := operations.DivideBy351(17000)
	
	if result != 48 {
		t.Errorf("Expected 48 but got %d", result)
	}
}

func TestDivideBy352(t *testing.T) {
	result := operations.DivideBy352(17000)
	
	if result != 48 {
		t.Errorf("Expected 48 but got %d", result)
	}
}

func TestDivideBy353(t *testing.T) {
	result := operations.DivideBy353(17000)
	
	if result != 48 {
		t.Errorf("Expected 48 but got %d", result)
	}
}

func TestDivideBy354(t *testing.T) {
	result := operations.DivideBy354(17000)
	
	if result != 48 {
		t.Errorf("Expected 48 but got %d", result)
	}
}

func TestDivideBy355(t *testing.T) {
	result := operations.DivideBy355(17000)
	
	if result != 47 {
		t.Errorf("Expected 47 but got %d", result)
	}
}

func TestDivideBy356(t *testing.T) {
	result := operations.DivideBy356(17000)
	
	if result != 47 {
		t.Errorf("Expected 47 but got %d", result)
	}
}

func TestDivideBy357(t *testing.T) {
	result := operations.DivideBy357(17000)
	
	if result != 47 {
		t.Errorf("Expected 47 but got %d", result)
	}
}

func TestDivideBy358(t *testing.T) {
	result := operations.DivideBy358(17000)
	
	if result != 47 {
		t.Errorf("Expected 47 but got %d", result)
	}
}

func TestDivideBy359(t *testing.T) {
	result := operations.DivideBy359(17000)
	
	if result != 47 {
		t.Errorf("Expected 47 but got %d", result)
	}
}

func TestDivideBy360(t *testing.T) {
	result := operations.DivideBy360(17000)
	
	if result != 47 {
		t.Errorf("Expected 47 but got %d", result)
	}
}

func TestDivideBy361(t *testing.T) {
	result := operations.DivideBy361(17000)
	
	if result != 47 {
		t.Errorf("Expected 47 but got %d", result)
	}
}

func TestDivideBy362(t *testing.T) {
	result := operations.DivideBy362(17000)
	
	if result != 46 {
		t.Errorf("Expected 46 but got %d", result)
	}
}

func TestDivideBy363(t *testing.T) {
	result := operations.DivideBy363(17000)
	
	if result != 46 {
		t.Errorf("Expected 46 but got %d", result)
	}
}

func TestDivideBy364(t *testing.T) {
	result := operations.DivideBy364(17000)
	
	if result != 46 {
		t.Errorf("Expected 46 but got %d", result)
	}
}

func TestDivideBy365(t *testing.T) {
	result := operations.DivideBy365(17000)
	
	if result != 46 {
		t.Errorf("Expected 46 but got %d", result)
	}
}

func TestDivideBy366(t *testing.T) {
	result := operations.DivideBy366(17000)
	
	if result != 46 {
		t.Errorf("Expected 46 but got %d", result)
	}
}

func TestDivideBy367(t *testing.T) {
	result := operations.DivideBy367(17000)
	
	if result != 46 {
		t.Errorf("Expected 46 but got %d", result)
	}
}

func TestDivideBy368(t *testing.T) {
	result := operations.DivideBy368(17000)
	
	if result != 46 {
		t.Errorf("Expected 46 but got %d", result)
	}
}

func TestDivideBy369(t *testing.T) {
	result := operations.DivideBy369(17000)
	
	if result != 46 {
		t.Errorf("Expected 46 but got %d", result)
	}
}

func TestDivideBy370(t *testing.T) {
	result := operations.DivideBy370(17000)
	
	if result != 45 {
		t.Errorf("Expected 45 but got %d", result)
	}
}

func TestDivideBy371(t *testing.T) {
	result := operations.DivideBy371(17000)
	
	if result != 45 {
		t.Errorf("Expected 45 but got %d", result)
	}
}

func TestDivideBy372(t *testing.T) {
	result := operations.DivideBy372(17000)
	
	if result != 45 {
		t.Errorf("Expected 45 but got %d", result)
	}
}

func TestDivideBy373(t *testing.T) {
	result := operations.DivideBy373(17000)
	
	if result != 45 {
		t.Errorf("Expected 45 but got %d", result)
	}
}

func TestDivideBy374(t *testing.T) {
	result := operations.DivideBy374(17000)
	
	if result != 45 {
		t.Errorf("Expected 45 but got %d", result)
	}
}

func TestDivideBy375(t *testing.T) {
	result := operations.DivideBy375(17000)
	
	if result != 45 {
		t.Errorf("Expected 45 but got %d", result)
	}
}

func TestDivideBy376(t *testing.T) {
	result := operations.DivideBy376(17000)
	
	if result != 45 {
		t.Errorf("Expected 45 but got %d", result)
	}
}

func TestDivideBy377(t *testing.T) {
	result := operations.DivideBy377(17000)
	
	if result != 45 {
		t.Errorf("Expected 45 but got %d", result)
	}
}

func TestDivideBy378(t *testing.T) {
	result := operations.DivideBy378(17000)
	
	if result != 44 {
		t.Errorf("Expected 44 but got %d", result)
	}
}

func TestDivideBy379(t *testing.T) {
	result := operations.DivideBy379(17000)
	
	if result != 44 {
		t.Errorf("Expected 44 but got %d", result)
	}
}

func TestDivideBy380(t *testing.T) {
	result := operations.DivideBy380(17000)
	
	if result != 44 {
		t.Errorf("Expected 44 but got %d", result)
	}
}

func TestDivideBy381(t *testing.T) {
	result := operations.DivideBy381(17000)
	
	if result != 44 {
		t.Errorf("Expected 44 but got %d", result)
	}
}

func TestDivideBy382(t *testing.T) {
	result := operations.DivideBy382(17000)
	
	if result != 44 {
		t.Errorf("Expected 44 but got %d", result)
	}
}

func TestDivideBy383(t *testing.T) {
	result := operations.DivideBy383(17000)
	
	if result != 44 {
		t.Errorf("Expected 44 but got %d", result)
	}
}

func TestDivideBy384(t *testing.T) {
	result := operations.DivideBy384(17000)
	
	if result != 44 {
		t.Errorf("Expected 44 but got %d", result)
	}
}

func TestDivideBy385(t *testing.T) {
	result := operations.DivideBy385(17000)
	
	if result != 44 {
		t.Errorf("Expected 44 but got %d", result)
	}
}

func TestDivideBy386(t *testing.T) {
	result := operations.DivideBy386(17000)
	
	if result != 44 {
		t.Errorf("Expected 44 but got %d", result)
	}
}

func TestDivideBy387(t *testing.T) {
	result := operations.DivideBy387(17000)
	
	if result != 43 {
		t.Errorf("Expected 43 but got %d", result)
	}
}

func TestDivideBy388(t *testing.T) {
	result := operations.DivideBy388(17000)
	
	if result != 43 {
		t.Errorf("Expected 43 but got %d", result)
	}
}

func TestDivideBy389(t *testing.T) {
	result := operations.DivideBy389(17000)
	
	if result != 43 {
		t.Errorf("Expected 43 but got %d", result)
	}
}

func TestDivideBy390(t *testing.T) {
	result := operations.DivideBy390(17000)
	
	if result != 43 {
		t.Errorf("Expected 43 but got %d", result)
	}
}

func TestDivideBy391(t *testing.T) {
	result := operations.DivideBy391(17000)
	
	if result != 43 {
		t.Errorf("Expected 43 but got %d", result)
	}
}

func TestDivideBy392(t *testing.T) {
	result := operations.DivideBy392(17000)
	
	if result != 43 {
		t.Errorf("Expected 43 but got %d", result)
	}
}

func TestDivideBy393(t *testing.T) {
	result := operations.DivideBy393(17000)
	
	if result != 43 {
		t.Errorf("Expected 43 but got %d", result)
	}
}

func TestDivideBy394(t *testing.T) {
	result := operations.DivideBy394(17000)
	
	if result != 43 {
		t.Errorf("Expected 43 but got %d", result)
	}
}

func TestDivideBy395(t *testing.T) {
	result := operations.DivideBy395(17000)
	
	if result != 43 {
		t.Errorf("Expected 43 but got %d", result)
	}
}

func TestDivideBy396(t *testing.T) {
	result := operations.DivideBy396(17000)
	
	if result != 42 {
		t.Errorf("Expected 42 but got %d", result)
	}
}

func TestDivideBy397(t *testing.T) {
	result := operations.DivideBy397(17000)
	
	if result != 42 {
		t.Errorf("Expected 42 but got %d", result)
	}
}

func TestDivideBy398(t *testing.T) {
	result := operations.DivideBy398(17000)
	
	if result != 42 {
		t.Errorf("Expected 42 but got %d", result)
	}
}

func TestDivideBy399(t *testing.T) {
	result := operations.DivideBy399(17000)
	
	if result != 42 {
		t.Errorf("Expected 42 but got %d", result)
	}
}

func TestDivideBy400(t *testing.T) {
	result := operations.DivideBy400(17000)
	
	if result != 42 {
		t.Errorf("Expected 42 but got %d", result)
	}
}

func TestDivideBy401(t *testing.T) {
	result := operations.DivideBy401(17000)
	
	if result != 42 {
		t.Errorf("Expected 42 but got %d", result)
	}
}

func TestDivideBy402(t *testing.T) {
	result := operations.DivideBy402(17000)
	
	if result != 42 {
		t.Errorf("Expected 42 but got %d", result)
	}
}

func TestDivideBy403(t *testing.T) {
	result := operations.DivideBy403(17000)
	
	if result != 42 {
		t.Errorf("Expected 42 but got %d", result)
	}
}

func TestDivideBy404(t *testing.T) {
	result := operations.DivideBy404(17000)
	
	if result != 42 {
		t.Errorf("Expected 42 but got %d", result)
	}
}

func TestDivideBy405(t *testing.T) {
	result := operations.DivideBy405(17000)
	
	if result != 41 {
		t.Errorf("Expected 41 but got %d", result)
	}
}

func TestDivideBy406(t *testing.T) {
	result := operations.DivideBy406(17000)
	
	if result != 41 {
		t.Errorf("Expected 41 but got %d", result)
	}
}

func TestDivideBy407(t *testing.T) {
	result := operations.DivideBy407(17000)
	
	if result != 41 {
		t.Errorf("Expected 41 but got %d", result)
	}
}

func TestDivideBy408(t *testing.T) {
	result := operations.DivideBy408(17000)
	
	if result != 41 {
		t.Errorf("Expected 41 but got %d", result)
	}
}

func TestDivideBy409(t *testing.T) {
	result := operations.DivideBy409(17000)
	
	if result != 41 {
		t.Errorf("Expected 41 but got %d", result)
	}
}

func TestDivideBy410(t *testing.T) {
	result := operations.DivideBy410(17000)
	
	if result != 41 {
		t.Errorf("Expected 41 but got %d", result)
	}
}

func TestDivideBy411(t *testing.T) {
	result := operations.DivideBy411(17000)
	
	if result != 41 {
		t.Errorf("Expected 41 but got %d", result)
	}
}

func TestDivideBy412(t *testing.T) {
	result := operations.DivideBy412(17000)
	
	if result != 41 {
		t.Errorf("Expected 41 but got %d", result)
	}
}

func TestDivideBy413(t *testing.T) {
	result := operations.DivideBy413(17000)
	
	if result != 41 {
		t.Errorf("Expected 41 but got %d", result)
	}
}

func TestDivideBy414(t *testing.T) {
	result := operations.DivideBy414(17000)
	
	if result != 41 {
		t.Errorf("Expected 41 but got %d", result)
	}
}

func TestDivideBy415(t *testing.T) {
	result := operations.DivideBy415(17000)
	
	if result != 40 {
		t.Errorf("Expected 40 but got %d", result)
	}
}

func TestDivideBy416(t *testing.T) {
	result := operations.DivideBy416(17000)
	
	if result != 40 {
		t.Errorf("Expected 40 but got %d", result)
	}
}

func TestDivideBy417(t *testing.T) {
	result := operations.DivideBy417(17000)
	
	if result != 40 {
		t.Errorf("Expected 40 but got %d", result)
	}
}

func TestDivideBy418(t *testing.T) {
	result := operations.DivideBy418(17000)
	
	if result != 40 {
		t.Errorf("Expected 40 but got %d", result)
	}
}

func TestDivideBy419(t *testing.T) {
	result := operations.DivideBy419(17000)
	
	if result != 40 {
		t.Errorf("Expected 40 but got %d", result)
	}
}

func TestDivideBy420(t *testing.T) {
	result := operations.DivideBy420(17000)
	
	if result != 40 {
		t.Errorf("Expected 40 but got %d", result)
	}
}

func TestDivideBy421(t *testing.T) {
	result := operations.DivideBy421(17000)
	
	if result != 40 {
		t.Errorf("Expected 40 but got %d", result)
	}
}

func TestDivideBy422(t *testing.T) {
	result := operations.DivideBy422(17000)
	
	if result != 40 {
		t.Errorf("Expected 40 but got %d", result)
	}
}

func TestDivideBy423(t *testing.T) {
	result := operations.DivideBy423(17000)
	
	if result != 40 {
		t.Errorf("Expected 40 but got %d", result)
	}
}

func TestDivideBy424(t *testing.T) {
	result := operations.DivideBy424(17000)
	
	if result != 40 {
		t.Errorf("Expected 40 but got %d", result)
	}
}

func TestDivideBy425(t *testing.T) {
	result := operations.DivideBy425(17000)
	
	if result != 40 {
		t.Errorf("Expected 40 but got %d", result)
	}
}

func TestDivideBy426(t *testing.T) {
	result := operations.DivideBy426(17000)
	
	if result != 39 {
		t.Errorf("Expected 39 but got %d", result)
	}
}

func TestDivideBy427(t *testing.T) {
	result := operations.DivideBy427(17000)
	
	if result != 39 {
		t.Errorf("Expected 39 but got %d", result)
	}
}

func TestDivideBy428(t *testing.T) {
	result := operations.DivideBy428(17000)
	
	if result != 39 {
		t.Errorf("Expected 39 but got %d", result)
	}
}

func TestDivideBy429(t *testing.T) {
	result := operations.DivideBy429(17000)
	
	if result != 39 {
		t.Errorf("Expected 39 but got %d", result)
	}
}

func TestDivideBy430(t *testing.T) {
	result := operations.DivideBy430(17000)
	
	if result != 39 {
		t.Errorf("Expected 39 but got %d", result)
	}
}

func TestDivideBy431(t *testing.T) {
	result := operations.DivideBy431(17000)
	
	if result != 39 {
		t.Errorf("Expected 39 but got %d", result)
	}
}

func TestDivideBy432(t *testing.T) {
	result := operations.DivideBy432(17000)
	
	if result != 39 {
		t.Errorf("Expected 39 but got %d", result)
	}
}

func TestDivideBy433(t *testing.T) {
	result := operations.DivideBy433(17000)
	
	if result != 39 {
		t.Errorf("Expected 39 but got %d", result)
	}
}

func TestDivideBy434(t *testing.T) {
	result := operations.DivideBy434(17000)
	
	if result != 39 {
		t.Errorf("Expected 39 but got %d", result)
	}
}

func TestDivideBy435(t *testing.T) {
	result := operations.DivideBy435(17000)
	
	if result != 39 {
		t.Errorf("Expected 39 but got %d", result)
	}
}

func TestDivideBy436(t *testing.T) {
	result := operations.DivideBy436(17000)
	
	if result != 38 {
		t.Errorf("Expected 38 but got %d", result)
	}
}

func TestDivideBy437(t *testing.T) {
	result := operations.DivideBy437(17000)
	
	if result != 38 {
		t.Errorf("Expected 38 but got %d", result)
	}
}

func TestDivideBy438(t *testing.T) {
	result := operations.DivideBy438(17000)
	
	if result != 38 {
		t.Errorf("Expected 38 but got %d", result)
	}
}

func TestDivideBy439(t *testing.T) {
	result := operations.DivideBy439(17000)
	
	if result != 38 {
		t.Errorf("Expected 38 but got %d", result)
	}
}

func TestDivideBy440(t *testing.T) {
	result := operations.DivideBy440(17000)
	
	if result != 38 {
		t.Errorf("Expected 38 but got %d", result)
	}
}

func TestDivideBy441(t *testing.T) {
	result := operations.DivideBy441(17000)
	
	if result != 38 {
		t.Errorf("Expected 38 but got %d", result)
	}
}

func TestDivideBy442(t *testing.T) {
	result := operations.DivideBy442(17000)
	
	if result != 38 {
		t.Errorf("Expected 38 but got %d", result)
	}
}

func TestDivideBy443(t *testing.T) {
	result := operations.DivideBy443(17000)
	
	if result != 38 {
		t.Errorf("Expected 38 but got %d", result)
	}
}

func TestDivideBy444(t *testing.T) {
	result := operations.DivideBy444(17000)
	
	if result != 38 {
		t.Errorf("Expected 38 but got %d", result)
	}
}

func TestDivideBy445(t *testing.T) {
	result := operations.DivideBy445(17000)
	
	if result != 38 {
		t.Errorf("Expected 38 but got %d", result)
	}
}

func TestDivideBy446(t *testing.T) {
	result := operations.DivideBy446(17000)
	
	if result != 38 {
		t.Errorf("Expected 38 but got %d", result)
	}
}

func TestDivideBy447(t *testing.T) {
	result := operations.DivideBy447(17000)
	
	if result != 38 {
		t.Errorf("Expected 38 but got %d", result)
	}
}

func TestDivideBy448(t *testing.T) {
	result := operations.DivideBy448(17000)
	
	if result != 37 {
		t.Errorf("Expected 37 but got %d", result)
	}
}

func TestDivideBy449(t *testing.T) {
	result := operations.DivideBy449(17000)
	
	if result != 37 {
		t.Errorf("Expected 37 but got %d", result)
	}
}

func TestDivideBy450(t *testing.T) {
	result := operations.DivideBy450(17000)
	
	if result != 37 {
		t.Errorf("Expected 37 but got %d", result)
	}
}

func TestDivideBy451(t *testing.T) {
	result := operations.DivideBy451(17000)
	
	if result != 37 {
		t.Errorf("Expected 37 but got %d", result)
	}
}

func TestDivideBy452(t *testing.T) {
	result := operations.DivideBy452(17000)
	
	if result != 37 {
		t.Errorf("Expected 37 but got %d", result)
	}
}

func TestDivideBy453(t *testing.T) {
	result := operations.DivideBy453(17000)
	
	if result != 37 {
		t.Errorf("Expected 37 but got %d", result)
	}
}

func TestDivideBy454(t *testing.T) {
	result := operations.DivideBy454(17000)
	
	if result != 37 {
		t.Errorf("Expected 37 but got %d", result)
	}
}

func TestDivideBy455(t *testing.T) {
	result := operations.DivideBy455(17000)
	
	if result != 37 {
		t.Errorf("Expected 37 but got %d", result)
	}
}

func TestDivideBy456(t *testing.T) {
	result := operations.DivideBy456(17000)
	
	if result != 37 {
		t.Errorf("Expected 37 but got %d", result)
	}
}

func TestDivideBy457(t *testing.T) {
	result := operations.DivideBy457(17000)
	
	if result != 37 {
		t.Errorf("Expected 37 but got %d", result)
	}
}

func TestDivideBy458(t *testing.T) {
	result := operations.DivideBy458(17000)
	
	if result != 37 {
		t.Errorf("Expected 37 but got %d", result)
	}
}

func TestDivideBy459(t *testing.T) {
	result := operations.DivideBy459(17000)
	
	if result != 37 {
		t.Errorf("Expected 37 but got %d", result)
	}
}

func TestDivideBy460(t *testing.T) {
	result := operations.DivideBy460(17000)
	
	if result != 36 {
		t.Errorf("Expected 36 but got %d", result)
	}
}

func TestDivideBy461(t *testing.T) {
	result := operations.DivideBy461(17000)
	
	if result != 36 {
		t.Errorf("Expected 36 but got %d", result)
	}
}

func TestDivideBy462(t *testing.T) {
	result := operations.DivideBy462(17000)
	
	if result != 36 {
		t.Errorf("Expected 36 but got %d", result)
	}
}

func TestDivideBy463(t *testing.T) {
	result := operations.DivideBy463(17000)
	
	if result != 36 {
		t.Errorf("Expected 36 but got %d", result)
	}
}

func TestDivideBy464(t *testing.T) {
	result := operations.DivideBy464(17000)
	
	if result != 36 {
		t.Errorf("Expected 36 but got %d", result)
	}
}

func TestDivideBy465(t *testing.T) {
	result := operations.DivideBy465(17000)
	
	if result != 36 {
		t.Errorf("Expected 36 but got %d", result)
	}
}

func TestDivideBy466(t *testing.T) {
	result := operations.DivideBy466(17000)
	
	if result != 36 {
		t.Errorf("Expected 36 but got %d", result)
	}
}

func TestDivideBy467(t *testing.T) {
	result := operations.DivideBy467(17000)
	
	if result != 36 {
		t.Errorf("Expected 36 but got %d", result)
	}
}

func TestDivideBy468(t *testing.T) {
	result := operations.DivideBy468(17000)
	
	if result != 36 {
		t.Errorf("Expected 36 but got %d", result)
	}
}

func TestDivideBy469(t *testing.T) {
	result := operations.DivideBy469(17000)
	
	if result != 36 {
		t.Errorf("Expected 36 but got %d", result)
	}
}

func TestDivideBy470(t *testing.T) {
	result := operations.DivideBy470(17000)
	
	if result != 36 {
		t.Errorf("Expected 36 but got %d", result)
	}
}

func TestDivideBy471(t *testing.T) {
	result := operations.DivideBy471(17000)
	
	if result != 36 {
		t.Errorf("Expected 36 but got %d", result)
	}
}

func TestDivideBy472(t *testing.T) {
	result := operations.DivideBy472(17000)
	
	if result != 36 {
		t.Errorf("Expected 36 but got %d", result)
	}
}

func TestDivideBy473(t *testing.T) {
	result := operations.DivideBy473(17000)
	
	if result != 35 {
		t.Errorf("Expected 35 but got %d", result)
	}
}

func TestDivideBy474(t *testing.T) {
	result := operations.DivideBy474(17000)
	
	if result != 35 {
		t.Errorf("Expected 35 but got %d", result)
	}
}

func TestDivideBy475(t *testing.T) {
	result := operations.DivideBy475(17000)
	
	if result != 35 {
		t.Errorf("Expected 35 but got %d", result)
	}
}

func TestDivideBy476(t *testing.T) {
	result := operations.DivideBy476(17000)
	
	if result != 35 {
		t.Errorf("Expected 35 but got %d", result)
	}
}

func TestDivideBy477(t *testing.T) {
	result := operations.DivideBy477(17000)
	
	if result != 35 {
		t.Errorf("Expected 35 but got %d", result)
	}
}

func TestDivideBy478(t *testing.T) {
	result := operations.DivideBy478(17000)
	
	if result != 35 {
		t.Errorf("Expected 35 but got %d", result)
	}
}

func TestDivideBy479(t *testing.T) {
	result := operations.DivideBy479(17000)
	
	if result != 35 {
		t.Errorf("Expected 35 but got %d", result)
	}
}

func TestDivideBy480(t *testing.T) {
	result := operations.DivideBy480(17000)
	
	if result != 35 {
		t.Errorf("Expected 35 but got %d", result)
	}
}

func TestDivideBy481(t *testing.T) {
	result := operations.DivideBy481(17000)
	
	if result != 35 {
		t.Errorf("Expected 35 but got %d", result)
	}
}

func TestDivideBy482(t *testing.T) {
	result := operations.DivideBy482(17000)
	
	if result != 35 {
		t.Errorf("Expected 35 but got %d", result)
	}
}

func TestDivideBy483(t *testing.T) {
	result := operations.DivideBy483(17000)
	
	if result != 35 {
		t.Errorf("Expected 35 but got %d", result)
	}
}

func TestDivideBy484(t *testing.T) {
	result := operations.DivideBy484(17000)
	
	if result != 35 {
		t.Errorf("Expected 35 but got %d", result)
	}
}

func TestDivideBy485(t *testing.T) {
	result := operations.DivideBy485(17000)
	
	if result != 35 {
		t.Errorf("Expected 35 but got %d", result)
	}
}

func TestDivideBy486(t *testing.T) {
	result := operations.DivideBy486(17000)
	
	if result != 34 {
		t.Errorf("Expected 34 but got %d", result)
	}
}

func TestDivideBy487(t *testing.T) {
	result := operations.DivideBy487(17000)
	
	if result != 34 {
		t.Errorf("Expected 34 but got %d", result)
	}
}

func TestDivideBy488(t *testing.T) {
	result := operations.DivideBy488(17000)
	
	if result != 34 {
		t.Errorf("Expected 34 but got %d", result)
	}
}

func TestDivideBy489(t *testing.T) {
	result := operations.DivideBy489(17000)
	
	if result != 34 {
		t.Errorf("Expected 34 but got %d", result)
	}
}

func TestDivideBy490(t *testing.T) {
	result := operations.DivideBy490(17000)
	
	if result != 34 {
		t.Errorf("Expected 34 but got %d", result)
	}
}

func TestDivideBy491(t *testing.T) {
	result := operations.DivideBy491(17000)
	
	if result != 34 {
		t.Errorf("Expected 34 but got %d", result)
	}
}

func TestDivideBy492(t *testing.T) {
	result := operations.DivideBy492(17000)
	
	if result != 34 {
		t.Errorf("Expected 34 but got %d", result)
	}
}

func TestDivideBy493(t *testing.T) {
	result := operations.DivideBy493(17000)
	
	if result != 34 {
		t.Errorf("Expected 34 but got %d", result)
	}
}

func TestDivideBy494(t *testing.T) {
	result := operations.DivideBy494(17000)
	
	if result != 34 {
		t.Errorf("Expected 34 but got %d", result)
	}
}

func TestDivideBy495(t *testing.T) {
	result := operations.DivideBy495(17000)
	
	if result != 34 {
		t.Errorf("Expected 34 but got %d", result)
	}
}

func TestDivideBy496(t *testing.T) {
	result := operations.DivideBy496(17000)
	
	if result != 34 {
		t.Errorf("Expected 34 but got %d", result)
	}
}

func TestDivideBy497(t *testing.T) {
	result := operations.DivideBy497(17000)
	
	if result != 34 {
		t.Errorf("Expected 34 but got %d", result)
	}
}

func TestDivideBy498(t *testing.T) {
	result := operations.DivideBy498(17000)
	
	if result != 34 {
		t.Errorf("Expected 34 but got %d", result)
	}
}

func TestDivideBy499(t *testing.T) {
	result := operations.DivideBy499(17000)
	
	if result != 34 {
		t.Errorf("Expected 34 but got %d", result)
	}
}

func TestDivideBy500(t *testing.T) {
	result := operations.DivideBy500(17000)
	
	if result != 34 {
		t.Errorf("Expected 34 but got %d", result)
	}
}

func TestDivideBy501(t *testing.T) {
	result := operations.DivideBy501(17000)
	
	if result != 33 {
		t.Errorf("Expected 33 but got %d", result)
	}
}

func TestDivideBy502(t *testing.T) {
	result := operations.DivideBy502(17000)
	
	if result != 33 {
		t.Errorf("Expected 33 but got %d", result)
	}
}

func TestDivideBy503(t *testing.T) {
	result := operations.DivideBy503(17000)
	
	if result != 33 {
		t.Errorf("Expected 33 but got %d", result)
	}
}

func TestDivideBy504(t *testing.T) {
	result := operations.DivideBy504(17000)
	
	if result != 33 {
		t.Errorf("Expected 33 but got %d", result)
	}
}

func TestDivideBy505(t *testing.T) {
	result := operations.DivideBy505(17000)
	
	if result != 33 {
		t.Errorf("Expected 33 but got %d", result)
	}
}

func TestDivideBy506(t *testing.T) {
	result := operations.DivideBy506(17000)
	
	if result != 33 {
		t.Errorf("Expected 33 but got %d", result)
	}
}

func TestDivideBy507(t *testing.T) {
	result := operations.DivideBy507(17000)
	
	if result != 33 {
		t.Errorf("Expected 33 but got %d", result)
	}
}

func TestDivideBy508(t *testing.T) {
	result := operations.DivideBy508(17000)
	
	if result != 33 {
		t.Errorf("Expected 33 but got %d", result)
	}
}

func TestDivideBy509(t *testing.T) {
	result := operations.DivideBy509(17000)
	
	if result != 33 {
		t.Errorf("Expected 33 but got %d", result)
	}
}

func TestDivideBy510(t *testing.T) {
	result := operations.DivideBy510(17000)
	
	if result != 33 {
		t.Errorf("Expected 33 but got %d", result)
	}
}

func TestDivideBy511(t *testing.T) {
	result := operations.DivideBy511(17000)
	
	if result != 33 {
		t.Errorf("Expected 33 but got %d", result)
	}
}

func TestDivideBy512(t *testing.T) {
	result := operations.DivideBy512(17000)
	
	if result != 33 {
		t.Errorf("Expected 33 but got %d", result)
	}
}

func TestDivideBy513(t *testing.T) {
	result := operations.DivideBy513(17000)
	
	if result != 33 {
		t.Errorf("Expected 33 but got %d", result)
	}
}

func TestDivideBy514(t *testing.T) {
	result := operations.DivideBy514(17000)
	
	if result != 33 {
		t.Errorf("Expected 33 but got %d", result)
	}
}

func TestDivideBy515(t *testing.T) {
	result := operations.DivideBy515(17000)
	
	if result != 33 {
		t.Errorf("Expected 33 but got %d", result)
	}
}

func TestDivideBy516(t *testing.T) {
	result := operations.DivideBy516(17000)
	
	if result != 32 {
		t.Errorf("Expected 32 but got %d", result)
	}
}

func TestDivideBy517(t *testing.T) {
	result := operations.DivideBy517(17000)
	
	if result != 32 {
		t.Errorf("Expected 32 but got %d", result)
	}
}

func TestDivideBy518(t *testing.T) {
	result := operations.DivideBy518(17000)
	
	if result != 32 {
		t.Errorf("Expected 32 but got %d", result)
	}
}

func TestDivideBy519(t *testing.T) {
	result := operations.DivideBy519(17000)
	
	if result != 32 {
		t.Errorf("Expected 32 but got %d", result)
	}
}

func TestDivideBy520(t *testing.T) {
	result := operations.DivideBy520(17000)
	
	if result != 32 {
		t.Errorf("Expected 32 but got %d", result)
	}
}

func TestDivideBy521(t *testing.T) {
	result := operations.DivideBy521(17000)
	
	if result != 32 {
		t.Errorf("Expected 32 but got %d", result)
	}
}

func TestDivideBy522(t *testing.T) {
	result := operations.DivideBy522(17000)
	
	if result != 32 {
		t.Errorf("Expected 32 but got %d", result)
	}
}

func TestDivideBy523(t *testing.T) {
	result := operations.DivideBy523(17000)
	
	if result != 32 {
		t.Errorf("Expected 32 but got %d", result)
	}
}

func TestDivideBy524(t *testing.T) {
	result := operations.DivideBy524(17000)
	
	if result != 32 {
		t.Errorf("Expected 32 but got %d", result)
	}
}

func TestDivideBy525(t *testing.T) {
	result := operations.DivideBy525(17000)
	
	if result != 32 {
		t.Errorf("Expected 32 but got %d", result)
	}
}

func TestDivideBy526(t *testing.T) {
	result := operations.DivideBy526(17000)
	
	if result != 32 {
		t.Errorf("Expected 32 but got %d", result)
	}
}

func TestDivideBy527(t *testing.T) {
	result := operations.DivideBy527(17000)
	
	if result != 32 {
		t.Errorf("Expected 32 but got %d", result)
	}
}

func TestDivideBy528(t *testing.T) {
	result := operations.DivideBy528(17000)
	
	if result != 32 {
		t.Errorf("Expected 32 but got %d", result)
	}
}

func TestDivideBy529(t *testing.T) {
	result := operations.DivideBy529(17000)
	
	if result != 32 {
		t.Errorf("Expected 32 but got %d", result)
	}
}

func TestDivideBy530(t *testing.T) {
	result := operations.DivideBy530(17000)
	
	if result != 32 {
		t.Errorf("Expected 32 but got %d", result)
	}
}

func TestDivideBy531(t *testing.T) {
	result := operations.DivideBy531(17000)
	
	if result != 32 {
		t.Errorf("Expected 32 but got %d", result)
	}
}

func TestDivideBy532(t *testing.T) {
	result := operations.DivideBy532(17000)
	
	if result != 31 {
		t.Errorf("Expected 31 but got %d", result)
	}
}

func TestDivideBy533(t *testing.T) {
	result := operations.DivideBy533(17000)
	
	if result != 31 {
		t.Errorf("Expected 31 but got %d", result)
	}
}

func TestDivideBy534(t *testing.T) {
	result := operations.DivideBy534(17000)
	
	if result != 31 {
		t.Errorf("Expected 31 but got %d", result)
	}
}

func TestDivideBy535(t *testing.T) {
	result := operations.DivideBy535(17000)
	
	if result != 31 {
		t.Errorf("Expected 31 but got %d", result)
	}
}

func TestDivideBy536(t *testing.T) {
	result := operations.DivideBy536(17000)
	
	if result != 31 {
		t.Errorf("Expected 31 but got %d", result)
	}
}

func TestDivideBy537(t *testing.T) {
	result := operations.DivideBy537(17000)
	
	if result != 31 {
		t.Errorf("Expected 31 but got %d", result)
	}
}

func TestDivideBy538(t *testing.T) {
	result := operations.DivideBy538(17000)
	
	if result != 31 {
		t.Errorf("Expected 31 but got %d", result)
	}
}

func TestDivideBy539(t *testing.T) {
	result := operations.DivideBy539(17000)
	
	if result != 31 {
		t.Errorf("Expected 31 but got %d", result)
	}
}

func TestDivideBy540(t *testing.T) {
	result := operations.DivideBy540(17000)
	
	if result != 31 {
		t.Errorf("Expected 31 but got %d", result)
	}
}

func TestDivideBy541(t *testing.T) {
	result := operations.DivideBy541(17000)
	
	if result != 31 {
		t.Errorf("Expected 31 but got %d", result)
	}
}

func TestDivideBy542(t *testing.T) {
	result := operations.DivideBy542(17000)
	
	if result != 31 {
		t.Errorf("Expected 31 but got %d", result)
	}
}

func TestDivideBy543(t *testing.T) {
	result := operations.DivideBy543(17000)
	
	if result != 31 {
		t.Errorf("Expected 31 but got %d", result)
	}
}

func TestDivideBy544(t *testing.T) {
	result := operations.DivideBy544(17000)
	
	if result != 31 {
		t.Errorf("Expected 31 but got %d", result)
	}
}

func TestDivideBy545(t *testing.T) {
	result := operations.DivideBy545(17000)
	
	if result != 31 {
		t.Errorf("Expected 31 but got %d", result)
	}
}

func TestDivideBy546(t *testing.T) {
	result := operations.DivideBy546(17000)
	
	if result != 31 {
		t.Errorf("Expected 31 but got %d", result)
	}
}

func TestDivideBy547(t *testing.T) {
	result := operations.DivideBy547(17000)
	
	if result != 31 {
		t.Errorf("Expected 31 but got %d", result)
	}
}

func TestDivideBy548(t *testing.T) {
	result := operations.DivideBy548(17000)
	
	if result != 31 {
		t.Errorf("Expected 31 but got %d", result)
	}
}

func TestDivideBy549(t *testing.T) {
	result := operations.DivideBy549(17000)
	
	if result != 30 {
		t.Errorf("Expected 30 but got %d", result)
	}
}

func TestDivideBy550(t *testing.T) {
	result := operations.DivideBy550(17000)
	
	if result != 30 {
		t.Errorf("Expected 30 but got %d", result)
	}
}

func TestDivideBy551(t *testing.T) {
	result := operations.DivideBy551(17000)
	
	if result != 30 {
		t.Errorf("Expected 30 but got %d", result)
	}
}

func TestDivideBy552(t *testing.T) {
	result := operations.DivideBy552(17000)
	
	if result != 30 {
		t.Errorf("Expected 30 but got %d", result)
	}
}

func TestDivideBy553(t *testing.T) {
	result := operations.DivideBy553(17000)
	
	if result != 30 {
		t.Errorf("Expected 30 but got %d", result)
	}
}

func TestDivideBy554(t *testing.T) {
	result := operations.DivideBy554(17000)
	
	if result != 30 {
		t.Errorf("Expected 30 but got %d", result)
	}
}

func TestDivideBy555(t *testing.T) {
	result := operations.DivideBy555(17000)
	
	if result != 30 {
		t.Errorf("Expected 30 but got %d", result)
	}
}

func TestDivideBy556(t *testing.T) {
	result := operations.DivideBy556(17000)
	
	if result != 30 {
		t.Errorf("Expected 30 but got %d", result)
	}
}

func TestDivideBy557(t *testing.T) {
	result := operations.DivideBy557(17000)
	
	if result != 30 {
		t.Errorf("Expected 30 but got %d", result)
	}
}

func TestDivideBy558(t *testing.T) {
	result := operations.DivideBy558(17000)
	
	if result != 30 {
		t.Errorf("Expected 30 but got %d", result)
	}
}

func TestDivideBy559(t *testing.T) {
	result := operations.DivideBy559(17000)
	
	if result != 30 {
		t.Errorf("Expected 30 but got %d", result)
	}
}

func TestDivideBy560(t *testing.T) {
	result := operations.DivideBy560(17000)
	
	if result != 30 {
		t.Errorf("Expected 30 but got %d", result)
	}
}

func TestDivideBy561(t *testing.T) {
	result := operations.DivideBy561(17000)
	
	if result != 30 {
		t.Errorf("Expected 30 but got %d", result)
	}
}

func TestDivideBy562(t *testing.T) {
	result := operations.DivideBy562(17000)
	
	if result != 30 {
		t.Errorf("Expected 30 but got %d", result)
	}
}

func TestDivideBy563(t *testing.T) {
	result := operations.DivideBy563(17000)
	
	if result != 30 {
		t.Errorf("Expected 30 but got %d", result)
	}
}

func TestDivideBy564(t *testing.T) {
	result := operations.DivideBy564(17000)
	
	if result != 30 {
		t.Errorf("Expected 30 but got %d", result)
	}
}

func TestDivideBy565(t *testing.T) {
	result := operations.DivideBy565(17000)
	
	if result != 30 {
		t.Errorf("Expected 30 but got %d", result)
	}
}

func TestDivideBy566(t *testing.T) {
	result := operations.DivideBy566(17000)
	
	if result != 30 {
		t.Errorf("Expected 30 but got %d", result)
	}
}

func TestDivideBy567(t *testing.T) {
	result := operations.DivideBy567(17000)
	
	if result != 29 {
		t.Errorf("Expected 29 but got %d", result)
	}
}

func TestDivideBy568(t *testing.T) {
	result := operations.DivideBy568(17000)
	
	if result != 29 {
		t.Errorf("Expected 29 but got %d", result)
	}
}

func TestDivideBy569(t *testing.T) {
	result := operations.DivideBy569(17000)
	
	if result != 29 {
		t.Errorf("Expected 29 but got %d", result)
	}
}

func TestDivideBy570(t *testing.T) {
	result := operations.DivideBy570(17000)
	
	if result != 29 {
		t.Errorf("Expected 29 but got %d", result)
	}
}

func TestDivideBy571(t *testing.T) {
	result := operations.DivideBy571(17000)
	
	if result != 29 {
		t.Errorf("Expected 29 but got %d", result)
	}
}

func TestDivideBy572(t *testing.T) {
	result := operations.DivideBy572(17000)
	
	if result != 29 {
		t.Errorf("Expected 29 but got %d", result)
	}
}

func TestDivideBy573(t *testing.T) {
	result := operations.DivideBy573(17000)
	
	if result != 29 {
		t.Errorf("Expected 29 but got %d", result)
	}
}

func TestDivideBy574(t *testing.T) {
	result := operations.DivideBy574(17000)
	
	if result != 29 {
		t.Errorf("Expected 29 but got %d", result)
	}
}

func TestDivideBy575(t *testing.T) {
	result := operations.DivideBy575(17000)
	
	if result != 29 {
		t.Errorf("Expected 29 but got %d", result)
	}
}

func TestDivideBy576(t *testing.T) {
	result := operations.DivideBy576(17000)
	
	if result != 29 {
		t.Errorf("Expected 29 but got %d", result)
	}
}

func TestDivideBy577(t *testing.T) {
	result := operations.DivideBy577(17000)
	
	if result != 29 {
		t.Errorf("Expected 29 but got %d", result)
	}
}

func TestDivideBy578(t *testing.T) {
	result := operations.DivideBy578(17000)
	
	if result != 29 {
		t.Errorf("Expected 29 but got %d", result)
	}
}

func TestDivideBy579(t *testing.T) {
	result := operations.DivideBy579(17000)
	
	if result != 29 {
		t.Errorf("Expected 29 but got %d", result)
	}
}

func TestDivideBy580(t *testing.T) {
	result := operations.DivideBy580(17000)
	
	if result != 29 {
		t.Errorf("Expected 29 but got %d", result)
	}
}

func TestDivideBy581(t *testing.T) {
	result := operations.DivideBy581(17000)
	
	if result != 29 {
		t.Errorf("Expected 29 but got %d", result)
	}
}

func TestDivideBy582(t *testing.T) {
	result := operations.DivideBy582(17000)
	
	if result != 29 {
		t.Errorf("Expected 29 but got %d", result)
	}
}

func TestDivideBy583(t *testing.T) {
	result := operations.DivideBy583(17000)
	
	if result != 29 {
		t.Errorf("Expected 29 but got %d", result)
	}
}

func TestDivideBy584(t *testing.T) {
	result := operations.DivideBy584(17000)
	
	if result != 29 {
		t.Errorf("Expected 29 but got %d", result)
	}
}

func TestDivideBy585(t *testing.T) {
	result := operations.DivideBy585(17000)
	
	if result != 29 {
		t.Errorf("Expected 29 but got %d", result)
	}
}

func TestDivideBy586(t *testing.T) {
	result := operations.DivideBy586(17000)
	
	if result != 29 {
		t.Errorf("Expected 29 but got %d", result)
	}
}

func TestDivideBy587(t *testing.T) {
	result := operations.DivideBy587(17000)
	
	if result != 28 {
		t.Errorf("Expected 28 but got %d", result)
	}
}

func TestDivideBy588(t *testing.T) {
	result := operations.DivideBy588(17000)
	
	if result != 28 {
		t.Errorf("Expected 28 but got %d", result)
	}
}

func TestDivideBy589(t *testing.T) {
	result := operations.DivideBy589(17000)
	
	if result != 28 {
		t.Errorf("Expected 28 but got %d", result)
	}
}

func TestDivideBy590(t *testing.T) {
	result := operations.DivideBy590(17000)
	
	if result != 28 {
		t.Errorf("Expected 28 but got %d", result)
	}
}

func TestDivideBy591(t *testing.T) {
	result := operations.DivideBy591(17000)
	
	if result != 28 {
		t.Errorf("Expected 28 but got %d", result)
	}
}

func TestDivideBy592(t *testing.T) {
	result := operations.DivideBy592(17000)
	
	if result != 28 {
		t.Errorf("Expected 28 but got %d", result)
	}
}

func TestDivideBy593(t *testing.T) {
	result := operations.DivideBy593(17000)
	
	if result != 28 {
		t.Errorf("Expected 28 but got %d", result)
	}
}

func TestDivideBy594(t *testing.T) {
	result := operations.DivideBy594(17000)
	
	if result != 28 {
		t.Errorf("Expected 28 but got %d", result)
	}
}

func TestDivideBy595(t *testing.T) {
	result := operations.DivideBy595(17000)
	
	if result != 28 {
		t.Errorf("Expected 28 but got %d", result)
	}
}

func TestDivideBy596(t *testing.T) {
	result := operations.DivideBy596(17000)
	
	if result != 28 {
		t.Errorf("Expected 28 but got %d", result)
	}
}

func TestDivideBy597(t *testing.T) {
	result := operations.DivideBy597(17000)
	
	if result != 28 {
		t.Errorf("Expected 28 but got %d", result)
	}
}

func TestDivideBy598(t *testing.T) {
	result := operations.DivideBy598(17000)
	
	if result != 28 {
		t.Errorf("Expected 28 but got %d", result)
	}
}

func TestDivideBy599(t *testing.T) {
	result := operations.DivideBy599(17000)
	
	if result != 28 {
		t.Errorf("Expected 28 but got %d", result)
	}
}

func TestDivideBy600(t *testing.T) {
	result := operations.DivideBy600(17000)
	
	if result != 28 {
		t.Errorf("Expected 28 but got %d", result)
	}
}

func TestDivideBy601(t *testing.T) {
	result := operations.DivideBy601(17000)
	
	if result != 28 {
		t.Errorf("Expected 28 but got %d", result)
	}
}

func TestDivideBy602(t *testing.T) {
	result := operations.DivideBy602(17000)
	
	if result != 28 {
		t.Errorf("Expected 28 but got %d", result)
	}
}

func TestDivideBy603(t *testing.T) {
	result := operations.DivideBy603(17000)
	
	if result != 28 {
		t.Errorf("Expected 28 but got %d", result)
	}
}

func TestDivideBy604(t *testing.T) {
	result := operations.DivideBy604(17000)
	
	if result != 28 {
		t.Errorf("Expected 28 but got %d", result)
	}
}

func TestDivideBy605(t *testing.T) {
	result := operations.DivideBy605(17000)
	
	if result != 28 {
		t.Errorf("Expected 28 but got %d", result)
	}
}

func TestDivideBy606(t *testing.T) {
	result := operations.DivideBy606(17000)
	
	if result != 28 {
		t.Errorf("Expected 28 but got %d", result)
	}
}

func TestDivideBy607(t *testing.T) {
	result := operations.DivideBy607(17000)
	
	if result != 28 {
		t.Errorf("Expected 28 but got %d", result)
	}
}

func TestDivideBy608(t *testing.T) {
	result := operations.DivideBy608(17000)
	
	if result != 27 {
		t.Errorf("Expected 27 but got %d", result)
	}
}

func TestDivideBy609(t *testing.T) {
	result := operations.DivideBy609(17000)
	
	if result != 27 {
		t.Errorf("Expected 27 but got %d", result)
	}
}

func TestDivideBy610(t *testing.T) {
	result := operations.DivideBy610(17000)
	
	if result != 27 {
		t.Errorf("Expected 27 but got %d", result)
	}
}

func TestDivideBy611(t *testing.T) {
	result := operations.DivideBy611(17000)
	
	if result != 27 {
		t.Errorf("Expected 27 but got %d", result)
	}
}

func TestDivideBy612(t *testing.T) {
	result := operations.DivideBy612(17000)
	
	if result != 27 {
		t.Errorf("Expected 27 but got %d", result)
	}
}

func TestDivideBy613(t *testing.T) {
	result := operations.DivideBy613(17000)
	
	if result != 27 {
		t.Errorf("Expected 27 but got %d", result)
	}
}

func TestDivideBy614(t *testing.T) {
	result := operations.DivideBy614(17000)
	
	if result != 27 {
		t.Errorf("Expected 27 but got %d", result)
	}
}

func TestDivideBy615(t *testing.T) {
	result := operations.DivideBy615(17000)
	
	if result != 27 {
		t.Errorf("Expected 27 but got %d", result)
	}
}

func TestDivideBy616(t *testing.T) {
	result := operations.DivideBy616(17000)
	
	if result != 27 {
		t.Errorf("Expected 27 but got %d", result)
	}
}

func TestDivideBy617(t *testing.T) {
	result := operations.DivideBy617(17000)
	
	if result != 27 {
		t.Errorf("Expected 27 but got %d", result)
	}
}

func TestDivideBy618(t *testing.T) {
	result := operations.DivideBy618(17000)
	
	if result != 27 {
		t.Errorf("Expected 27 but got %d", result)
	}
}

func TestDivideBy619(t *testing.T) {
	result := operations.DivideBy619(17000)
	
	if result != 27 {
		t.Errorf("Expected 27 but got %d", result)
	}
}

func TestDivideBy620(t *testing.T) {
	result := operations.DivideBy620(17000)
	
	if result != 27 {
		t.Errorf("Expected 27 but got %d", result)
	}
}

func TestDivideBy621(t *testing.T) {
	result := operations.DivideBy621(17000)
	
	if result != 27 {
		t.Errorf("Expected 27 but got %d", result)
	}
}

func TestDivideBy622(t *testing.T) {
	result := operations.DivideBy622(17000)
	
	if result != 27 {
		t.Errorf("Expected 27 but got %d", result)
	}
}

func TestDivideBy623(t *testing.T) {
	result := operations.DivideBy623(17000)
	
	if result != 27 {
		t.Errorf("Expected 27 but got %d", result)
	}
}

func TestDivideBy624(t *testing.T) {
	result := operations.DivideBy624(17000)
	
	if result != 27 {
		t.Errorf("Expected 27 but got %d", result)
	}
}

func TestDivideBy625(t *testing.T) {
	result := operations.DivideBy625(17000)
	
	if result != 27 {
		t.Errorf("Expected 27 but got %d", result)
	}
}

func TestDivideBy626(t *testing.T) {
	result := operations.DivideBy626(17000)
	
	if result != 27 {
		t.Errorf("Expected 27 but got %d", result)
	}
}

func TestDivideBy627(t *testing.T) {
	result := operations.DivideBy627(17000)
	
	if result != 27 {
		t.Errorf("Expected 27 but got %d", result)
	}
}

func TestDivideBy628(t *testing.T) {
	result := operations.DivideBy628(17000)
	
	if result != 27 {
		t.Errorf("Expected 27 but got %d", result)
	}
}

func TestDivideBy629(t *testing.T) {
	result := operations.DivideBy629(17000)
	
	if result != 27 {
		t.Errorf("Expected 27 but got %d", result)
	}
}

func TestDivideBy630(t *testing.T) {
	result := operations.DivideBy630(17000)
	
	if result != 26 {
		t.Errorf("Expected 26 but got %d", result)
	}
}

func TestDivideBy631(t *testing.T) {
	result := operations.DivideBy631(17000)
	
	if result != 26 {
		t.Errorf("Expected 26 but got %d", result)
	}
}

func TestDivideBy632(t *testing.T) {
	result := operations.DivideBy632(17000)
	
	if result != 26 {
		t.Errorf("Expected 26 but got %d", result)
	}
}

func TestDivideBy633(t *testing.T) {
	result := operations.DivideBy633(17000)
	
	if result != 26 {
		t.Errorf("Expected 26 but got %d", result)
	}
}

func TestDivideBy634(t *testing.T) {
	result := operations.DivideBy634(17000)
	
	if result != 26 {
		t.Errorf("Expected 26 but got %d", result)
	}
}

func TestDivideBy635(t *testing.T) {
	result := operations.DivideBy635(17000)
	
	if result != 26 {
		t.Errorf("Expected 26 but got %d", result)
	}
}

func TestDivideBy636(t *testing.T) {
	result := operations.DivideBy636(17000)
	
	if result != 26 {
		t.Errorf("Expected 26 but got %d", result)
	}
}

func TestDivideBy637(t *testing.T) {
	result := operations.DivideBy637(17000)
	
	if result != 26 {
		t.Errorf("Expected 26 but got %d", result)
	}
}

func TestDivideBy638(t *testing.T) {
	result := operations.DivideBy638(17000)
	
	if result != 26 {
		t.Errorf("Expected 26 but got %d", result)
	}
}

func TestDivideBy639(t *testing.T) {
	result := operations.DivideBy639(17000)
	
	if result != 26 {
		t.Errorf("Expected 26 but got %d", result)
	}
}

func TestDivideBy640(t *testing.T) {
	result := operations.DivideBy640(17000)
	
	if result != 26 {
		t.Errorf("Expected 26 but got %d", result)
	}
}

func TestDivideBy641(t *testing.T) {
	result := operations.DivideBy641(17000)
	
	if result != 26 {
		t.Errorf("Expected 26 but got %d", result)
	}
}

func TestDivideBy642(t *testing.T) {
	result := operations.DivideBy642(17000)
	
	if result != 26 {
		t.Errorf("Expected 26 but got %d", result)
	}
}

func TestDivideBy643(t *testing.T) {
	result := operations.DivideBy643(17000)
	
	if result != 26 {
		t.Errorf("Expected 26 but got %d", result)
	}
}

func TestDivideBy644(t *testing.T) {
	result := operations.DivideBy644(17000)
	
	if result != 26 {
		t.Errorf("Expected 26 but got %d", result)
	}
}

func TestDivideBy645(t *testing.T) {
	result := operations.DivideBy645(17000)
	
	if result != 26 {
		t.Errorf("Expected 26 but got %d", result)
	}
}

func TestDivideBy646(t *testing.T) {
	result := operations.DivideBy646(17000)
	
	if result != 26 {
		t.Errorf("Expected 26 but got %d", result)
	}
}

func TestDivideBy647(t *testing.T) {
	result := operations.DivideBy647(17000)
	
	if result != 26 {
		t.Errorf("Expected 26 but got %d", result)
	}
}

func TestDivideBy648(t *testing.T) {
	result := operations.DivideBy648(17000)
	
	if result != 26 {
		t.Errorf("Expected 26 but got %d", result)
	}
}

func TestDivideBy649(t *testing.T) {
	result := operations.DivideBy649(17000)
	
	if result != 26 {
		t.Errorf("Expected 26 but got %d", result)
	}
}

func TestDivideBy650(t *testing.T) {
	result := operations.DivideBy650(17000)
	
	if result != 26 {
		t.Errorf("Expected 26 but got %d", result)
	}
}

func TestDivideBy651(t *testing.T) {
	result := operations.DivideBy651(17000)
	
	if result != 26 {
		t.Errorf("Expected 26 but got %d", result)
	}
}

func TestDivideBy652(t *testing.T) {
	result := operations.DivideBy652(17000)
	
	if result != 26 {
		t.Errorf("Expected 26 but got %d", result)
	}
}

func TestDivideBy653(t *testing.T) {
	result := operations.DivideBy653(17000)
	
	if result != 26 {
		t.Errorf("Expected 26 but got %d", result)
	}
}

func TestDivideBy654(t *testing.T) {
	result := operations.DivideBy654(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy655(t *testing.T) {
	result := operations.DivideBy655(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy656(t *testing.T) {
	result := operations.DivideBy656(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy657(t *testing.T) {
	result := operations.DivideBy657(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy658(t *testing.T) {
	result := operations.DivideBy658(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy659(t *testing.T) {
	result := operations.DivideBy659(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy660(t *testing.T) {
	result := operations.DivideBy660(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy661(t *testing.T) {
	result := operations.DivideBy661(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy662(t *testing.T) {
	result := operations.DivideBy662(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy663(t *testing.T) {
	result := operations.DivideBy663(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy664(t *testing.T) {
	result := operations.DivideBy664(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy665(t *testing.T) {
	result := operations.DivideBy665(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy666(t *testing.T) {
	result := operations.DivideBy666(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy667(t *testing.T) {
	result := operations.DivideBy667(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy668(t *testing.T) {
	result := operations.DivideBy668(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy669(t *testing.T) {
	result := operations.DivideBy669(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy670(t *testing.T) {
	result := operations.DivideBy670(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy671(t *testing.T) {
	result := operations.DivideBy671(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy672(t *testing.T) {
	result := operations.DivideBy672(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy673(t *testing.T) {
	result := operations.DivideBy673(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy674(t *testing.T) {
	result := operations.DivideBy674(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy675(t *testing.T) {
	result := operations.DivideBy675(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy676(t *testing.T) {
	result := operations.DivideBy676(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy677(t *testing.T) {
	result := operations.DivideBy677(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy678(t *testing.T) {
	result := operations.DivideBy678(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy679(t *testing.T) {
	result := operations.DivideBy679(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy680(t *testing.T) {
	result := operations.DivideBy680(17000)
	
	if result != 25 {
		t.Errorf("Expected 25 but got %d", result)
	}
}

func TestDivideBy681(t *testing.T) {
	result := operations.DivideBy681(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy682(t *testing.T) {
	result := operations.DivideBy682(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy683(t *testing.T) {
	result := operations.DivideBy683(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy684(t *testing.T) {
	result := operations.DivideBy684(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy685(t *testing.T) {
	result := operations.DivideBy685(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy686(t *testing.T) {
	result := operations.DivideBy686(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy687(t *testing.T) {
	result := operations.DivideBy687(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy688(t *testing.T) {
	result := operations.DivideBy688(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy689(t *testing.T) {
	result := operations.DivideBy689(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy690(t *testing.T) {
	result := operations.DivideBy690(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy691(t *testing.T) {
	result := operations.DivideBy691(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy692(t *testing.T) {
	result := operations.DivideBy692(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy693(t *testing.T) {
	result := operations.DivideBy693(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy694(t *testing.T) {
	result := operations.DivideBy694(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy695(t *testing.T) {
	result := operations.DivideBy695(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy696(t *testing.T) {
	result := operations.DivideBy696(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy697(t *testing.T) {
	result := operations.DivideBy697(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy698(t *testing.T) {
	result := operations.DivideBy698(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy699(t *testing.T) {
	result := operations.DivideBy699(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy700(t *testing.T) {
	result := operations.DivideBy700(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy701(t *testing.T) {
	result := operations.DivideBy701(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy702(t *testing.T) {
	result := operations.DivideBy702(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy703(t *testing.T) {
	result := operations.DivideBy703(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy704(t *testing.T) {
	result := operations.DivideBy704(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy705(t *testing.T) {
	result := operations.DivideBy705(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy706(t *testing.T) {
	result := operations.DivideBy706(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy707(t *testing.T) {
	result := operations.DivideBy707(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy708(t *testing.T) {
	result := operations.DivideBy708(17000)
	
	if result != 24 {
		t.Errorf("Expected 24 but got %d", result)
	}
}

func TestDivideBy709(t *testing.T) {
	result := operations.DivideBy709(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy710(t *testing.T) {
	result := operations.DivideBy710(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy711(t *testing.T) {
	result := operations.DivideBy711(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy712(t *testing.T) {
	result := operations.DivideBy712(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy713(t *testing.T) {
	result := operations.DivideBy713(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy714(t *testing.T) {
	result := operations.DivideBy714(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy715(t *testing.T) {
	result := operations.DivideBy715(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy716(t *testing.T) {
	result := operations.DivideBy716(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy717(t *testing.T) {
	result := operations.DivideBy717(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy718(t *testing.T) {
	result := operations.DivideBy718(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy719(t *testing.T) {
	result := operations.DivideBy719(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy720(t *testing.T) {
	result := operations.DivideBy720(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy721(t *testing.T) {
	result := operations.DivideBy721(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy722(t *testing.T) {
	result := operations.DivideBy722(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy723(t *testing.T) {
	result := operations.DivideBy723(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy724(t *testing.T) {
	result := operations.DivideBy724(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy725(t *testing.T) {
	result := operations.DivideBy725(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy726(t *testing.T) {
	result := operations.DivideBy726(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy727(t *testing.T) {
	result := operations.DivideBy727(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy728(t *testing.T) {
	result := operations.DivideBy728(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy729(t *testing.T) {
	result := operations.DivideBy729(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy730(t *testing.T) {
	result := operations.DivideBy730(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy731(t *testing.T) {
	result := operations.DivideBy731(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy732(t *testing.T) {
	result := operations.DivideBy732(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy733(t *testing.T) {
	result := operations.DivideBy733(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy734(t *testing.T) {
	result := operations.DivideBy734(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy735(t *testing.T) {
	result := operations.DivideBy735(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy736(t *testing.T) {
	result := operations.DivideBy736(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy737(t *testing.T) {
	result := operations.DivideBy737(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy738(t *testing.T) {
	result := operations.DivideBy738(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy739(t *testing.T) {
	result := operations.DivideBy739(17000)
	
	if result != 23 {
		t.Errorf("Expected 23 but got %d", result)
	}
}

func TestDivideBy740(t *testing.T) {
	result := operations.DivideBy740(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy741(t *testing.T) {
	result := operations.DivideBy741(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy742(t *testing.T) {
	result := operations.DivideBy742(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy743(t *testing.T) {
	result := operations.DivideBy743(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy744(t *testing.T) {
	result := operations.DivideBy744(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy745(t *testing.T) {
	result := operations.DivideBy745(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy746(t *testing.T) {
	result := operations.DivideBy746(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy747(t *testing.T) {
	result := operations.DivideBy747(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy748(t *testing.T) {
	result := operations.DivideBy748(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy749(t *testing.T) {
	result := operations.DivideBy749(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy750(t *testing.T) {
	result := operations.DivideBy750(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy751(t *testing.T) {
	result := operations.DivideBy751(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy752(t *testing.T) {
	result := operations.DivideBy752(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy753(t *testing.T) {
	result := operations.DivideBy753(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy754(t *testing.T) {
	result := operations.DivideBy754(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy755(t *testing.T) {
	result := operations.DivideBy755(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy756(t *testing.T) {
	result := operations.DivideBy756(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy757(t *testing.T) {
	result := operations.DivideBy757(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy758(t *testing.T) {
	result := operations.DivideBy758(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy759(t *testing.T) {
	result := operations.DivideBy759(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy760(t *testing.T) {
	result := operations.DivideBy760(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy761(t *testing.T) {
	result := operations.DivideBy761(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy762(t *testing.T) {
	result := operations.DivideBy762(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy763(t *testing.T) {
	result := operations.DivideBy763(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy764(t *testing.T) {
	result := operations.DivideBy764(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy765(t *testing.T) {
	result := operations.DivideBy765(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy766(t *testing.T) {
	result := operations.DivideBy766(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy767(t *testing.T) {
	result := operations.DivideBy767(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy768(t *testing.T) {
	result := operations.DivideBy768(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy769(t *testing.T) {
	result := operations.DivideBy769(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy770(t *testing.T) {
	result := operations.DivideBy770(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy771(t *testing.T) {
	result := operations.DivideBy771(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy772(t *testing.T) {
	result := operations.DivideBy772(17000)
	
	if result != 22 {
		t.Errorf("Expected 22 but got %d", result)
	}
}

func TestDivideBy773(t *testing.T) {
	result := operations.DivideBy773(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy774(t *testing.T) {
	result := operations.DivideBy774(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy775(t *testing.T) {
	result := operations.DivideBy775(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy776(t *testing.T) {
	result := operations.DivideBy776(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy777(t *testing.T) {
	result := operations.DivideBy777(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy778(t *testing.T) {
	result := operations.DivideBy778(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy779(t *testing.T) {
	result := operations.DivideBy779(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy780(t *testing.T) {
	result := operations.DivideBy780(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy781(t *testing.T) {
	result := operations.DivideBy781(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy782(t *testing.T) {
	result := operations.DivideBy782(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy783(t *testing.T) {
	result := operations.DivideBy783(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy784(t *testing.T) {
	result := operations.DivideBy784(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy785(t *testing.T) {
	result := operations.DivideBy785(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy786(t *testing.T) {
	result := operations.DivideBy786(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy787(t *testing.T) {
	result := operations.DivideBy787(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy788(t *testing.T) {
	result := operations.DivideBy788(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy789(t *testing.T) {
	result := operations.DivideBy789(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy790(t *testing.T) {
	result := operations.DivideBy790(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy791(t *testing.T) {
	result := operations.DivideBy791(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy792(t *testing.T) {
	result := operations.DivideBy792(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy793(t *testing.T) {
	result := operations.DivideBy793(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy794(t *testing.T) {
	result := operations.DivideBy794(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy795(t *testing.T) {
	result := operations.DivideBy795(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy796(t *testing.T) {
	result := operations.DivideBy796(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy797(t *testing.T) {
	result := operations.DivideBy797(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy798(t *testing.T) {
	result := operations.DivideBy798(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy799(t *testing.T) {
	result := operations.DivideBy799(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy800(t *testing.T) {
	result := operations.DivideBy800(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy801(t *testing.T) {
	result := operations.DivideBy801(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy802(t *testing.T) {
	result := operations.DivideBy802(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy803(t *testing.T) {
	result := operations.DivideBy803(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy804(t *testing.T) {
	result := operations.DivideBy804(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy805(t *testing.T) {
	result := operations.DivideBy805(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy806(t *testing.T) {
	result := operations.DivideBy806(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy807(t *testing.T) {
	result := operations.DivideBy807(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy808(t *testing.T) {
	result := operations.DivideBy808(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy809(t *testing.T) {
	result := operations.DivideBy809(17000)
	
	if result != 21 {
		t.Errorf("Expected 21 but got %d", result)
	}
}

func TestDivideBy810(t *testing.T) {
	result := operations.DivideBy810(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy811(t *testing.T) {
	result := operations.DivideBy811(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy812(t *testing.T) {
	result := operations.DivideBy812(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy813(t *testing.T) {
	result := operations.DivideBy813(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy814(t *testing.T) {
	result := operations.DivideBy814(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy815(t *testing.T) {
	result := operations.DivideBy815(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy816(t *testing.T) {
	result := operations.DivideBy816(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy817(t *testing.T) {
	result := operations.DivideBy817(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy818(t *testing.T) {
	result := operations.DivideBy818(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy819(t *testing.T) {
	result := operations.DivideBy819(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy820(t *testing.T) {
	result := operations.DivideBy820(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy821(t *testing.T) {
	result := operations.DivideBy821(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy822(t *testing.T) {
	result := operations.DivideBy822(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy823(t *testing.T) {
	result := operations.DivideBy823(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy824(t *testing.T) {
	result := operations.DivideBy824(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy825(t *testing.T) {
	result := operations.DivideBy825(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy826(t *testing.T) {
	result := operations.DivideBy826(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy827(t *testing.T) {
	result := operations.DivideBy827(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy828(t *testing.T) {
	result := operations.DivideBy828(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy829(t *testing.T) {
	result := operations.DivideBy829(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy830(t *testing.T) {
	result := operations.DivideBy830(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy831(t *testing.T) {
	result := operations.DivideBy831(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy832(t *testing.T) {
	result := operations.DivideBy832(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy833(t *testing.T) {
	result := operations.DivideBy833(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy834(t *testing.T) {
	result := operations.DivideBy834(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy835(t *testing.T) {
	result := operations.DivideBy835(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy836(t *testing.T) {
	result := operations.DivideBy836(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy837(t *testing.T) {
	result := operations.DivideBy837(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy838(t *testing.T) {
	result := operations.DivideBy838(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy839(t *testing.T) {
	result := operations.DivideBy839(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy840(t *testing.T) {
	result := operations.DivideBy840(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy841(t *testing.T) {
	result := operations.DivideBy841(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy842(t *testing.T) {
	result := operations.DivideBy842(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy843(t *testing.T) {
	result := operations.DivideBy843(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy844(t *testing.T) {
	result := operations.DivideBy844(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy845(t *testing.T) {
	result := operations.DivideBy845(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy846(t *testing.T) {
	result := operations.DivideBy846(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy847(t *testing.T) {
	result := operations.DivideBy847(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy848(t *testing.T) {
	result := operations.DivideBy848(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy849(t *testing.T) {
	result := operations.DivideBy849(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy850(t *testing.T) {
	result := operations.DivideBy850(17000)
	
	if result != 20 {
		t.Errorf("Expected 20 but got %d", result)
	}
}

func TestDivideBy851(t *testing.T) {
	result := operations.DivideBy851(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy852(t *testing.T) {
	result := operations.DivideBy852(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy853(t *testing.T) {
	result := operations.DivideBy853(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy854(t *testing.T) {
	result := operations.DivideBy854(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy855(t *testing.T) {
	result := operations.DivideBy855(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy856(t *testing.T) {
	result := operations.DivideBy856(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy857(t *testing.T) {
	result := operations.DivideBy857(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy858(t *testing.T) {
	result := operations.DivideBy858(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy859(t *testing.T) {
	result := operations.DivideBy859(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy860(t *testing.T) {
	result := operations.DivideBy860(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy861(t *testing.T) {
	result := operations.DivideBy861(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy862(t *testing.T) {
	result := operations.DivideBy862(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy863(t *testing.T) {
	result := operations.DivideBy863(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy864(t *testing.T) {
	result := operations.DivideBy864(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy865(t *testing.T) {
	result := operations.DivideBy865(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy866(t *testing.T) {
	result := operations.DivideBy866(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy867(t *testing.T) {
	result := operations.DivideBy867(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy868(t *testing.T) {
	result := operations.DivideBy868(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy869(t *testing.T) {
	result := operations.DivideBy869(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy870(t *testing.T) {
	result := operations.DivideBy870(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy871(t *testing.T) {
	result := operations.DivideBy871(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy872(t *testing.T) {
	result := operations.DivideBy872(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy873(t *testing.T) {
	result := operations.DivideBy873(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy874(t *testing.T) {
	result := operations.DivideBy874(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy875(t *testing.T) {
	result := operations.DivideBy875(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy876(t *testing.T) {
	result := operations.DivideBy876(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy877(t *testing.T) {
	result := operations.DivideBy877(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy878(t *testing.T) {
	result := operations.DivideBy878(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy879(t *testing.T) {
	result := operations.DivideBy879(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy880(t *testing.T) {
	result := operations.DivideBy880(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy881(t *testing.T) {
	result := operations.DivideBy881(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy882(t *testing.T) {
	result := operations.DivideBy882(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy883(t *testing.T) {
	result := operations.DivideBy883(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy884(t *testing.T) {
	result := operations.DivideBy884(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy885(t *testing.T) {
	result := operations.DivideBy885(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy886(t *testing.T) {
	result := operations.DivideBy886(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy887(t *testing.T) {
	result := operations.DivideBy887(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy888(t *testing.T) {
	result := operations.DivideBy888(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy889(t *testing.T) {
	result := operations.DivideBy889(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy890(t *testing.T) {
	result := operations.DivideBy890(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy891(t *testing.T) {
	result := operations.DivideBy891(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy892(t *testing.T) {
	result := operations.DivideBy892(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy893(t *testing.T) {
	result := operations.DivideBy893(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy894(t *testing.T) {
	result := operations.DivideBy894(17000)
	
	if result != 19 {
		t.Errorf("Expected 19 but got %d", result)
	}
}

func TestDivideBy895(t *testing.T) {
	result := operations.DivideBy895(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy896(t *testing.T) {
	result := operations.DivideBy896(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy897(t *testing.T) {
	result := operations.DivideBy897(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy898(t *testing.T) {
	result := operations.DivideBy898(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy899(t *testing.T) {
	result := operations.DivideBy899(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy900(t *testing.T) {
	result := operations.DivideBy900(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy901(t *testing.T) {
	result := operations.DivideBy901(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy902(t *testing.T) {
	result := operations.DivideBy902(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy903(t *testing.T) {
	result := operations.DivideBy903(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy904(t *testing.T) {
	result := operations.DivideBy904(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy905(t *testing.T) {
	result := operations.DivideBy905(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy906(t *testing.T) {
	result := operations.DivideBy906(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy907(t *testing.T) {
	result := operations.DivideBy907(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy908(t *testing.T) {
	result := operations.DivideBy908(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy909(t *testing.T) {
	result := operations.DivideBy909(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy910(t *testing.T) {
	result := operations.DivideBy910(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy911(t *testing.T) {
	result := operations.DivideBy911(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy912(t *testing.T) {
	result := operations.DivideBy912(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy913(t *testing.T) {
	result := operations.DivideBy913(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy914(t *testing.T) {
	result := operations.DivideBy914(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy915(t *testing.T) {
	result := operations.DivideBy915(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy916(t *testing.T) {
	result := operations.DivideBy916(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy917(t *testing.T) {
	result := operations.DivideBy917(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy918(t *testing.T) {
	result := operations.DivideBy918(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy919(t *testing.T) {
	result := operations.DivideBy919(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy920(t *testing.T) {
	result := operations.DivideBy920(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy921(t *testing.T) {
	result := operations.DivideBy921(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy922(t *testing.T) {
	result := operations.DivideBy922(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy923(t *testing.T) {
	result := operations.DivideBy923(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy924(t *testing.T) {
	result := operations.DivideBy924(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy925(t *testing.T) {
	result := operations.DivideBy925(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy926(t *testing.T) {
	result := operations.DivideBy926(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy927(t *testing.T) {
	result := operations.DivideBy927(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy928(t *testing.T) {
	result := operations.DivideBy928(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy929(t *testing.T) {
	result := operations.DivideBy929(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy930(t *testing.T) {
	result := operations.DivideBy930(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy931(t *testing.T) {
	result := operations.DivideBy931(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy932(t *testing.T) {
	result := operations.DivideBy932(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy933(t *testing.T) {
	result := operations.DivideBy933(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy934(t *testing.T) {
	result := operations.DivideBy934(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy935(t *testing.T) {
	result := operations.DivideBy935(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy936(t *testing.T) {
	result := operations.DivideBy936(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy937(t *testing.T) {
	result := operations.DivideBy937(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy938(t *testing.T) {
	result := operations.DivideBy938(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy939(t *testing.T) {
	result := operations.DivideBy939(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy940(t *testing.T) {
	result := operations.DivideBy940(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy941(t *testing.T) {
	result := operations.DivideBy941(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy942(t *testing.T) {
	result := operations.DivideBy942(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy943(t *testing.T) {
	result := operations.DivideBy943(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy944(t *testing.T) {
	result := operations.DivideBy944(17000)
	
	if result != 18 {
		t.Errorf("Expected 18 but got %d", result)
	}
}

func TestDivideBy945(t *testing.T) {
	result := operations.DivideBy945(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy946(t *testing.T) {
	result := operations.DivideBy946(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy947(t *testing.T) {
	result := operations.DivideBy947(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy948(t *testing.T) {
	result := operations.DivideBy948(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy949(t *testing.T) {
	result := operations.DivideBy949(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy950(t *testing.T) {
	result := operations.DivideBy950(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy951(t *testing.T) {
	result := operations.DivideBy951(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy952(t *testing.T) {
	result := operations.DivideBy952(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy953(t *testing.T) {
	result := operations.DivideBy953(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy954(t *testing.T) {
	result := operations.DivideBy954(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy955(t *testing.T) {
	result := operations.DivideBy955(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy956(t *testing.T) {
	result := operations.DivideBy956(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy957(t *testing.T) {
	result := operations.DivideBy957(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy958(t *testing.T) {
	result := operations.DivideBy958(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy959(t *testing.T) {
	result := operations.DivideBy959(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy960(t *testing.T) {
	result := operations.DivideBy960(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy961(t *testing.T) {
	result := operations.DivideBy961(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy962(t *testing.T) {
	result := operations.DivideBy962(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy963(t *testing.T) {
	result := operations.DivideBy963(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy964(t *testing.T) {
	result := operations.DivideBy964(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy965(t *testing.T) {
	result := operations.DivideBy965(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy966(t *testing.T) {
	result := operations.DivideBy966(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy967(t *testing.T) {
	result := operations.DivideBy967(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy968(t *testing.T) {
	result := operations.DivideBy968(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy969(t *testing.T) {
	result := operations.DivideBy969(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy970(t *testing.T) {
	result := operations.DivideBy970(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy971(t *testing.T) {
	result := operations.DivideBy971(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy972(t *testing.T) {
	result := operations.DivideBy972(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy973(t *testing.T) {
	result := operations.DivideBy973(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy974(t *testing.T) {
	result := operations.DivideBy974(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy975(t *testing.T) {
	result := operations.DivideBy975(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy976(t *testing.T) {
	result := operations.DivideBy976(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy977(t *testing.T) {
	result := operations.DivideBy977(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy978(t *testing.T) {
	result := operations.DivideBy978(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy979(t *testing.T) {
	result := operations.DivideBy979(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy980(t *testing.T) {
	result := operations.DivideBy980(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy981(t *testing.T) {
	result := operations.DivideBy981(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy982(t *testing.T) {
	result := operations.DivideBy982(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy983(t *testing.T) {
	result := operations.DivideBy983(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy984(t *testing.T) {
	result := operations.DivideBy984(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy985(t *testing.T) {
	result := operations.DivideBy985(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy986(t *testing.T) {
	result := operations.DivideBy986(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy987(t *testing.T) {
	result := operations.DivideBy987(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy988(t *testing.T) {
	result := operations.DivideBy988(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy989(t *testing.T) {
	result := operations.DivideBy989(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy990(t *testing.T) {
	result := operations.DivideBy990(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy991(t *testing.T) {
	result := operations.DivideBy991(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy992(t *testing.T) {
	result := operations.DivideBy992(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy993(t *testing.T) {
	result := operations.DivideBy993(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy994(t *testing.T) {
	result := operations.DivideBy994(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy995(t *testing.T) {
	result := operations.DivideBy995(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy996(t *testing.T) {
	result := operations.DivideBy996(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy997(t *testing.T) {
	result := operations.DivideBy997(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy998(t *testing.T) {
	result := operations.DivideBy998(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy999(t *testing.T) {
	result := operations.DivideBy999(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy1000(t *testing.T) {
	result := operations.DivideBy1000(17000)
	
	if result != 17 {
		t.Errorf("Expected 17 but got %d", result)
	}
}

func TestDivideBy1001(t *testing.T) {
	result := operations.DivideBy1001(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1002(t *testing.T) {
	result := operations.DivideBy1002(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1003(t *testing.T) {
	result := operations.DivideBy1003(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1004(t *testing.T) {
	result := operations.DivideBy1004(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1005(t *testing.T) {
	result := operations.DivideBy1005(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1006(t *testing.T) {
	result := operations.DivideBy1006(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1007(t *testing.T) {
	result := operations.DivideBy1007(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1008(t *testing.T) {
	result := operations.DivideBy1008(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1009(t *testing.T) {
	result := operations.DivideBy1009(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1010(t *testing.T) {
	result := operations.DivideBy1010(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1011(t *testing.T) {
	result := operations.DivideBy1011(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1012(t *testing.T) {
	result := operations.DivideBy1012(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1013(t *testing.T) {
	result := operations.DivideBy1013(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1014(t *testing.T) {
	result := operations.DivideBy1014(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1015(t *testing.T) {
	result := operations.DivideBy1015(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1016(t *testing.T) {
	result := operations.DivideBy1016(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1017(t *testing.T) {
	result := operations.DivideBy1017(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1018(t *testing.T) {
	result := operations.DivideBy1018(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1019(t *testing.T) {
	result := operations.DivideBy1019(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1020(t *testing.T) {
	result := operations.DivideBy1020(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1021(t *testing.T) {
	result := operations.DivideBy1021(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1022(t *testing.T) {
	result := operations.DivideBy1022(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1023(t *testing.T) {
	result := operations.DivideBy1023(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1024(t *testing.T) {
	result := operations.DivideBy1024(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1025(t *testing.T) {
	result := operations.DivideBy1025(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1026(t *testing.T) {
	result := operations.DivideBy1026(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1027(t *testing.T) {
	result := operations.DivideBy1027(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1028(t *testing.T) {
	result := operations.DivideBy1028(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1029(t *testing.T) {
	result := operations.DivideBy1029(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1030(t *testing.T) {
	result := operations.DivideBy1030(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1031(t *testing.T) {
	result := operations.DivideBy1031(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1032(t *testing.T) {
	result := operations.DivideBy1032(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1033(t *testing.T) {
	result := operations.DivideBy1033(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1034(t *testing.T) {
	result := operations.DivideBy1034(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1035(t *testing.T) {
	result := operations.DivideBy1035(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1036(t *testing.T) {
	result := operations.DivideBy1036(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1037(t *testing.T) {
	result := operations.DivideBy1037(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1038(t *testing.T) {
	result := operations.DivideBy1038(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1039(t *testing.T) {
	result := operations.DivideBy1039(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1040(t *testing.T) {
	result := operations.DivideBy1040(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1041(t *testing.T) {
	result := operations.DivideBy1041(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1042(t *testing.T) {
	result := operations.DivideBy1042(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1043(t *testing.T) {
	result := operations.DivideBy1043(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1044(t *testing.T) {
	result := operations.DivideBy1044(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1045(t *testing.T) {
	result := operations.DivideBy1045(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1046(t *testing.T) {
	result := operations.DivideBy1046(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1047(t *testing.T) {
	result := operations.DivideBy1047(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1048(t *testing.T) {
	result := operations.DivideBy1048(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1049(t *testing.T) {
	result := operations.DivideBy1049(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1050(t *testing.T) {
	result := operations.DivideBy1050(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1051(t *testing.T) {
	result := operations.DivideBy1051(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1052(t *testing.T) {
	result := operations.DivideBy1052(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1053(t *testing.T) {
	result := operations.DivideBy1053(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1054(t *testing.T) {
	result := operations.DivideBy1054(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1055(t *testing.T) {
	result := operations.DivideBy1055(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1056(t *testing.T) {
	result := operations.DivideBy1056(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1057(t *testing.T) {
	result := operations.DivideBy1057(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1058(t *testing.T) {
	result := operations.DivideBy1058(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1059(t *testing.T) {
	result := operations.DivideBy1059(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1060(t *testing.T) {
	result := operations.DivideBy1060(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1061(t *testing.T) {
	result := operations.DivideBy1061(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1062(t *testing.T) {
	result := operations.DivideBy1062(17000)
	
	if result != 16 {
		t.Errorf("Expected 16 but got %d", result)
	}
}

func TestDivideBy1063(t *testing.T) {
	result := operations.DivideBy1063(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1064(t *testing.T) {
	result := operations.DivideBy1064(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1065(t *testing.T) {
	result := operations.DivideBy1065(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1066(t *testing.T) {
	result := operations.DivideBy1066(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1067(t *testing.T) {
	result := operations.DivideBy1067(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1068(t *testing.T) {
	result := operations.DivideBy1068(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1069(t *testing.T) {
	result := operations.DivideBy1069(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1070(t *testing.T) {
	result := operations.DivideBy1070(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1071(t *testing.T) {
	result := operations.DivideBy1071(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1072(t *testing.T) {
	result := operations.DivideBy1072(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1073(t *testing.T) {
	result := operations.DivideBy1073(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1074(t *testing.T) {
	result := operations.DivideBy1074(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1075(t *testing.T) {
	result := operations.DivideBy1075(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1076(t *testing.T) {
	result := operations.DivideBy1076(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1077(t *testing.T) {
	result := operations.DivideBy1077(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1078(t *testing.T) {
	result := operations.DivideBy1078(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1079(t *testing.T) {
	result := operations.DivideBy1079(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1080(t *testing.T) {
	result := operations.DivideBy1080(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1081(t *testing.T) {
	result := operations.DivideBy1081(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1082(t *testing.T) {
	result := operations.DivideBy1082(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1083(t *testing.T) {
	result := operations.DivideBy1083(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1084(t *testing.T) {
	result := operations.DivideBy1084(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1085(t *testing.T) {
	result := operations.DivideBy1085(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1086(t *testing.T) {
	result := operations.DivideBy1086(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1087(t *testing.T) {
	result := operations.DivideBy1087(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1088(t *testing.T) {
	result := operations.DivideBy1088(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1089(t *testing.T) {
	result := operations.DivideBy1089(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1090(t *testing.T) {
	result := operations.DivideBy1090(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1091(t *testing.T) {
	result := operations.DivideBy1091(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1092(t *testing.T) {
	result := operations.DivideBy1092(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1093(t *testing.T) {
	result := operations.DivideBy1093(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1094(t *testing.T) {
	result := operations.DivideBy1094(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1095(t *testing.T) {
	result := operations.DivideBy1095(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1096(t *testing.T) {
	result := operations.DivideBy1096(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1097(t *testing.T) {
	result := operations.DivideBy1097(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1098(t *testing.T) {
	result := operations.DivideBy1098(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1099(t *testing.T) {
	result := operations.DivideBy1099(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1100(t *testing.T) {
	result := operations.DivideBy1100(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1101(t *testing.T) {
	result := operations.DivideBy1101(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1102(t *testing.T) {
	result := operations.DivideBy1102(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1103(t *testing.T) {
	result := operations.DivideBy1103(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1104(t *testing.T) {
	result := operations.DivideBy1104(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1105(t *testing.T) {
	result := operations.DivideBy1105(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1106(t *testing.T) {
	result := operations.DivideBy1106(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1107(t *testing.T) {
	result := operations.DivideBy1107(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1108(t *testing.T) {
	result := operations.DivideBy1108(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1109(t *testing.T) {
	result := operations.DivideBy1109(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1110(t *testing.T) {
	result := operations.DivideBy1110(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1111(t *testing.T) {
	result := operations.DivideBy1111(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1112(t *testing.T) {
	result := operations.DivideBy1112(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1113(t *testing.T) {
	result := operations.DivideBy1113(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1114(t *testing.T) {
	result := operations.DivideBy1114(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1115(t *testing.T) {
	result := operations.DivideBy1115(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1116(t *testing.T) {
	result := operations.DivideBy1116(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1117(t *testing.T) {
	result := operations.DivideBy1117(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1118(t *testing.T) {
	result := operations.DivideBy1118(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1119(t *testing.T) {
	result := operations.DivideBy1119(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1120(t *testing.T) {
	result := operations.DivideBy1120(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1121(t *testing.T) {
	result := operations.DivideBy1121(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1122(t *testing.T) {
	result := operations.DivideBy1122(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1123(t *testing.T) {
	result := operations.DivideBy1123(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1124(t *testing.T) {
	result := operations.DivideBy1124(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1125(t *testing.T) {
	result := operations.DivideBy1125(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1126(t *testing.T) {
	result := operations.DivideBy1126(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1127(t *testing.T) {
	result := operations.DivideBy1127(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1128(t *testing.T) {
	result := operations.DivideBy1128(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1129(t *testing.T) {
	result := operations.DivideBy1129(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1130(t *testing.T) {
	result := operations.DivideBy1130(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1131(t *testing.T) {
	result := operations.DivideBy1131(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1132(t *testing.T) {
	result := operations.DivideBy1132(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1133(t *testing.T) {
	result := operations.DivideBy1133(17000)
	
	if result != 15 {
		t.Errorf("Expected 15 but got %d", result)
	}
}

func TestDivideBy1134(t *testing.T) {
	result := operations.DivideBy1134(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1135(t *testing.T) {
	result := operations.DivideBy1135(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1136(t *testing.T) {
	result := operations.DivideBy1136(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1137(t *testing.T) {
	result := operations.DivideBy1137(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1138(t *testing.T) {
	result := operations.DivideBy1138(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1139(t *testing.T) {
	result := operations.DivideBy1139(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1140(t *testing.T) {
	result := operations.DivideBy1140(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1141(t *testing.T) {
	result := operations.DivideBy1141(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1142(t *testing.T) {
	result := operations.DivideBy1142(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1143(t *testing.T) {
	result := operations.DivideBy1143(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1144(t *testing.T) {
	result := operations.DivideBy1144(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1145(t *testing.T) {
	result := operations.DivideBy1145(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1146(t *testing.T) {
	result := operations.DivideBy1146(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1147(t *testing.T) {
	result := operations.DivideBy1147(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1148(t *testing.T) {
	result := operations.DivideBy1148(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1149(t *testing.T) {
	result := operations.DivideBy1149(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1150(t *testing.T) {
	result := operations.DivideBy1150(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1151(t *testing.T) {
	result := operations.DivideBy1151(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1152(t *testing.T) {
	result := operations.DivideBy1152(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1153(t *testing.T) {
	result := operations.DivideBy1153(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1154(t *testing.T) {
	result := operations.DivideBy1154(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1155(t *testing.T) {
	result := operations.DivideBy1155(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1156(t *testing.T) {
	result := operations.DivideBy1156(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1157(t *testing.T) {
	result := operations.DivideBy1157(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1158(t *testing.T) {
	result := operations.DivideBy1158(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1159(t *testing.T) {
	result := operations.DivideBy1159(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1160(t *testing.T) {
	result := operations.DivideBy1160(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1161(t *testing.T) {
	result := operations.DivideBy1161(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1162(t *testing.T) {
	result := operations.DivideBy1162(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1163(t *testing.T) {
	result := operations.DivideBy1163(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1164(t *testing.T) {
	result := operations.DivideBy1164(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1165(t *testing.T) {
	result := operations.DivideBy1165(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1166(t *testing.T) {
	result := operations.DivideBy1166(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1167(t *testing.T) {
	result := operations.DivideBy1167(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1168(t *testing.T) {
	result := operations.DivideBy1168(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1169(t *testing.T) {
	result := operations.DivideBy1169(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1170(t *testing.T) {
	result := operations.DivideBy1170(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1171(t *testing.T) {
	result := operations.DivideBy1171(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1172(t *testing.T) {
	result := operations.DivideBy1172(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1173(t *testing.T) {
	result := operations.DivideBy1173(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1174(t *testing.T) {
	result := operations.DivideBy1174(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1175(t *testing.T) {
	result := operations.DivideBy1175(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1176(t *testing.T) {
	result := operations.DivideBy1176(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1177(t *testing.T) {
	result := operations.DivideBy1177(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1178(t *testing.T) {
	result := operations.DivideBy1178(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1179(t *testing.T) {
	result := operations.DivideBy1179(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1180(t *testing.T) {
	result := operations.DivideBy1180(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1181(t *testing.T) {
	result := operations.DivideBy1181(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1182(t *testing.T) {
	result := operations.DivideBy1182(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1183(t *testing.T) {
	result := operations.DivideBy1183(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1184(t *testing.T) {
	result := operations.DivideBy1184(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1185(t *testing.T) {
	result := operations.DivideBy1185(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1186(t *testing.T) {
	result := operations.DivideBy1186(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1187(t *testing.T) {
	result := operations.DivideBy1187(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1188(t *testing.T) {
	result := operations.DivideBy1188(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1189(t *testing.T) {
	result := operations.DivideBy1189(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1190(t *testing.T) {
	result := operations.DivideBy1190(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1191(t *testing.T) {
	result := operations.DivideBy1191(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1192(t *testing.T) {
	result := operations.DivideBy1192(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1193(t *testing.T) {
	result := operations.DivideBy1193(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1194(t *testing.T) {
	result := operations.DivideBy1194(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1195(t *testing.T) {
	result := operations.DivideBy1195(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1196(t *testing.T) {
	result := operations.DivideBy1196(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1197(t *testing.T) {
	result := operations.DivideBy1197(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1198(t *testing.T) {
	result := operations.DivideBy1198(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1199(t *testing.T) {
	result := operations.DivideBy1199(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1200(t *testing.T) {
	result := operations.DivideBy1200(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1201(t *testing.T) {
	result := operations.DivideBy1201(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1202(t *testing.T) {
	result := operations.DivideBy1202(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1203(t *testing.T) {
	result := operations.DivideBy1203(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1204(t *testing.T) {
	result := operations.DivideBy1204(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1205(t *testing.T) {
	result := operations.DivideBy1205(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1206(t *testing.T) {
	result := operations.DivideBy1206(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1207(t *testing.T) {
	result := operations.DivideBy1207(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1208(t *testing.T) {
	result := operations.DivideBy1208(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1209(t *testing.T) {
	result := operations.DivideBy1209(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1210(t *testing.T) {
	result := operations.DivideBy1210(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1211(t *testing.T) {
	result := operations.DivideBy1211(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1212(t *testing.T) {
	result := operations.DivideBy1212(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1213(t *testing.T) {
	result := operations.DivideBy1213(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1214(t *testing.T) {
	result := operations.DivideBy1214(17000)
	
	if result != 14 {
		t.Errorf("Expected 14 but got %d", result)
	}
}

func TestDivideBy1215(t *testing.T) {
	result := operations.DivideBy1215(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1216(t *testing.T) {
	result := operations.DivideBy1216(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1217(t *testing.T) {
	result := operations.DivideBy1217(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1218(t *testing.T) {
	result := operations.DivideBy1218(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1219(t *testing.T) {
	result := operations.DivideBy1219(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1220(t *testing.T) {
	result := operations.DivideBy1220(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1221(t *testing.T) {
	result := operations.DivideBy1221(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1222(t *testing.T) {
	result := operations.DivideBy1222(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1223(t *testing.T) {
	result := operations.DivideBy1223(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1224(t *testing.T) {
	result := operations.DivideBy1224(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1225(t *testing.T) {
	result := operations.DivideBy1225(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1226(t *testing.T) {
	result := operations.DivideBy1226(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1227(t *testing.T) {
	result := operations.DivideBy1227(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1228(t *testing.T) {
	result := operations.DivideBy1228(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1229(t *testing.T) {
	result := operations.DivideBy1229(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1230(t *testing.T) {
	result := operations.DivideBy1230(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1231(t *testing.T) {
	result := operations.DivideBy1231(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1232(t *testing.T) {
	result := operations.DivideBy1232(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1233(t *testing.T) {
	result := operations.DivideBy1233(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1234(t *testing.T) {
	result := operations.DivideBy1234(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1235(t *testing.T) {
	result := operations.DivideBy1235(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1236(t *testing.T) {
	result := operations.DivideBy1236(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1237(t *testing.T) {
	result := operations.DivideBy1237(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1238(t *testing.T) {
	result := operations.DivideBy1238(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1239(t *testing.T) {
	result := operations.DivideBy1239(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1240(t *testing.T) {
	result := operations.DivideBy1240(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1241(t *testing.T) {
	result := operations.DivideBy1241(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1242(t *testing.T) {
	result := operations.DivideBy1242(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1243(t *testing.T) {
	result := operations.DivideBy1243(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1244(t *testing.T) {
	result := operations.DivideBy1244(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1245(t *testing.T) {
	result := operations.DivideBy1245(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1246(t *testing.T) {
	result := operations.DivideBy1246(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1247(t *testing.T) {
	result := operations.DivideBy1247(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1248(t *testing.T) {
	result := operations.DivideBy1248(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1249(t *testing.T) {
	result := operations.DivideBy1249(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1250(t *testing.T) {
	result := operations.DivideBy1250(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1251(t *testing.T) {
	result := operations.DivideBy1251(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1252(t *testing.T) {
	result := operations.DivideBy1252(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1253(t *testing.T) {
	result := operations.DivideBy1253(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1254(t *testing.T) {
	result := operations.DivideBy1254(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1255(t *testing.T) {
	result := operations.DivideBy1255(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1256(t *testing.T) {
	result := operations.DivideBy1256(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1257(t *testing.T) {
	result := operations.DivideBy1257(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1258(t *testing.T) {
	result := operations.DivideBy1258(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1259(t *testing.T) {
	result := operations.DivideBy1259(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1260(t *testing.T) {
	result := operations.DivideBy1260(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1261(t *testing.T) {
	result := operations.DivideBy1261(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1262(t *testing.T) {
	result := operations.DivideBy1262(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1263(t *testing.T) {
	result := operations.DivideBy1263(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1264(t *testing.T) {
	result := operations.DivideBy1264(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1265(t *testing.T) {
	result := operations.DivideBy1265(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1266(t *testing.T) {
	result := operations.DivideBy1266(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1267(t *testing.T) {
	result := operations.DivideBy1267(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1268(t *testing.T) {
	result := operations.DivideBy1268(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1269(t *testing.T) {
	result := operations.DivideBy1269(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1270(t *testing.T) {
	result := operations.DivideBy1270(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1271(t *testing.T) {
	result := operations.DivideBy1271(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1272(t *testing.T) {
	result := operations.DivideBy1272(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1273(t *testing.T) {
	result := operations.DivideBy1273(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1274(t *testing.T) {
	result := operations.DivideBy1274(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1275(t *testing.T) {
	result := operations.DivideBy1275(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1276(t *testing.T) {
	result := operations.DivideBy1276(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1277(t *testing.T) {
	result := operations.DivideBy1277(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1278(t *testing.T) {
	result := operations.DivideBy1278(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1279(t *testing.T) {
	result := operations.DivideBy1279(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1280(t *testing.T) {
	result := operations.DivideBy1280(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1281(t *testing.T) {
	result := operations.DivideBy1281(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1282(t *testing.T) {
	result := operations.DivideBy1282(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1283(t *testing.T) {
	result := operations.DivideBy1283(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1284(t *testing.T) {
	result := operations.DivideBy1284(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1285(t *testing.T) {
	result := operations.DivideBy1285(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1286(t *testing.T) {
	result := operations.DivideBy1286(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1287(t *testing.T) {
	result := operations.DivideBy1287(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1288(t *testing.T) {
	result := operations.DivideBy1288(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1289(t *testing.T) {
	result := operations.DivideBy1289(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1290(t *testing.T) {
	result := operations.DivideBy1290(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1291(t *testing.T) {
	result := operations.DivideBy1291(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1292(t *testing.T) {
	result := operations.DivideBy1292(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1293(t *testing.T) {
	result := operations.DivideBy1293(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1294(t *testing.T) {
	result := operations.DivideBy1294(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1295(t *testing.T) {
	result := operations.DivideBy1295(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1296(t *testing.T) {
	result := operations.DivideBy1296(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1297(t *testing.T) {
	result := operations.DivideBy1297(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1298(t *testing.T) {
	result := operations.DivideBy1298(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1299(t *testing.T) {
	result := operations.DivideBy1299(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1300(t *testing.T) {
	result := operations.DivideBy1300(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1301(t *testing.T) {
	result := operations.DivideBy1301(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1302(t *testing.T) {
	result := operations.DivideBy1302(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1303(t *testing.T) {
	result := operations.DivideBy1303(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1304(t *testing.T) {
	result := operations.DivideBy1304(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1305(t *testing.T) {
	result := operations.DivideBy1305(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1306(t *testing.T) {
	result := operations.DivideBy1306(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1307(t *testing.T) {
	result := operations.DivideBy1307(17000)
	
	if result != 13 {
		t.Errorf("Expected 13 but got %d", result)
	}
}

func TestDivideBy1308(t *testing.T) {
	result := operations.DivideBy1308(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1309(t *testing.T) {
	result := operations.DivideBy1309(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1310(t *testing.T) {
	result := operations.DivideBy1310(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1311(t *testing.T) {
	result := operations.DivideBy1311(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1312(t *testing.T) {
	result := operations.DivideBy1312(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1313(t *testing.T) {
	result := operations.DivideBy1313(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1314(t *testing.T) {
	result := operations.DivideBy1314(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1315(t *testing.T) {
	result := operations.DivideBy1315(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1316(t *testing.T) {
	result := operations.DivideBy1316(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1317(t *testing.T) {
	result := operations.DivideBy1317(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1318(t *testing.T) {
	result := operations.DivideBy1318(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1319(t *testing.T) {
	result := operations.DivideBy1319(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1320(t *testing.T) {
	result := operations.DivideBy1320(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1321(t *testing.T) {
	result := operations.DivideBy1321(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1322(t *testing.T) {
	result := operations.DivideBy1322(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1323(t *testing.T) {
	result := operations.DivideBy1323(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1324(t *testing.T) {
	result := operations.DivideBy1324(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1325(t *testing.T) {
	result := operations.DivideBy1325(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1326(t *testing.T) {
	result := operations.DivideBy1326(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1327(t *testing.T) {
	result := operations.DivideBy1327(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1328(t *testing.T) {
	result := operations.DivideBy1328(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1329(t *testing.T) {
	result := operations.DivideBy1329(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1330(t *testing.T) {
	result := operations.DivideBy1330(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1331(t *testing.T) {
	result := operations.DivideBy1331(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1332(t *testing.T) {
	result := operations.DivideBy1332(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1333(t *testing.T) {
	result := operations.DivideBy1333(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1334(t *testing.T) {
	result := operations.DivideBy1334(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1335(t *testing.T) {
	result := operations.DivideBy1335(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1336(t *testing.T) {
	result := operations.DivideBy1336(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1337(t *testing.T) {
	result := operations.DivideBy1337(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1338(t *testing.T) {
	result := operations.DivideBy1338(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1339(t *testing.T) {
	result := operations.DivideBy1339(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1340(t *testing.T) {
	result := operations.DivideBy1340(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1341(t *testing.T) {
	result := operations.DivideBy1341(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1342(t *testing.T) {
	result := operations.DivideBy1342(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1343(t *testing.T) {
	result := operations.DivideBy1343(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1344(t *testing.T) {
	result := operations.DivideBy1344(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1345(t *testing.T) {
	result := operations.DivideBy1345(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1346(t *testing.T) {
	result := operations.DivideBy1346(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1347(t *testing.T) {
	result := operations.DivideBy1347(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1348(t *testing.T) {
	result := operations.DivideBy1348(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1349(t *testing.T) {
	result := operations.DivideBy1349(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1350(t *testing.T) {
	result := operations.DivideBy1350(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1351(t *testing.T) {
	result := operations.DivideBy1351(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1352(t *testing.T) {
	result := operations.DivideBy1352(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1353(t *testing.T) {
	result := operations.DivideBy1353(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1354(t *testing.T) {
	result := operations.DivideBy1354(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1355(t *testing.T) {
	result := operations.DivideBy1355(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1356(t *testing.T) {
	result := operations.DivideBy1356(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1357(t *testing.T) {
	result := operations.DivideBy1357(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1358(t *testing.T) {
	result := operations.DivideBy1358(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1359(t *testing.T) {
	result := operations.DivideBy1359(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1360(t *testing.T) {
	result := operations.DivideBy1360(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1361(t *testing.T) {
	result := operations.DivideBy1361(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1362(t *testing.T) {
	result := operations.DivideBy1362(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1363(t *testing.T) {
	result := operations.DivideBy1363(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1364(t *testing.T) {
	result := operations.DivideBy1364(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1365(t *testing.T) {
	result := operations.DivideBy1365(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1366(t *testing.T) {
	result := operations.DivideBy1366(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1367(t *testing.T) {
	result := operations.DivideBy1367(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1368(t *testing.T) {
	result := operations.DivideBy1368(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1369(t *testing.T) {
	result := operations.DivideBy1369(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1370(t *testing.T) {
	result := operations.DivideBy1370(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1371(t *testing.T) {
	result := operations.DivideBy1371(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1372(t *testing.T) {
	result := operations.DivideBy1372(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1373(t *testing.T) {
	result := operations.DivideBy1373(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1374(t *testing.T) {
	result := operations.DivideBy1374(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1375(t *testing.T) {
	result := operations.DivideBy1375(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1376(t *testing.T) {
	result := operations.DivideBy1376(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1377(t *testing.T) {
	result := operations.DivideBy1377(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1378(t *testing.T) {
	result := operations.DivideBy1378(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1379(t *testing.T) {
	result := operations.DivideBy1379(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1380(t *testing.T) {
	result := operations.DivideBy1380(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1381(t *testing.T) {
	result := operations.DivideBy1381(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1382(t *testing.T) {
	result := operations.DivideBy1382(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1383(t *testing.T) {
	result := operations.DivideBy1383(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1384(t *testing.T) {
	result := operations.DivideBy1384(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1385(t *testing.T) {
	result := operations.DivideBy1385(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1386(t *testing.T) {
	result := operations.DivideBy1386(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1387(t *testing.T) {
	result := operations.DivideBy1387(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1388(t *testing.T) {
	result := operations.DivideBy1388(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1389(t *testing.T) {
	result := operations.DivideBy1389(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1390(t *testing.T) {
	result := operations.DivideBy1390(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1391(t *testing.T) {
	result := operations.DivideBy1391(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1392(t *testing.T) {
	result := operations.DivideBy1392(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1393(t *testing.T) {
	result := operations.DivideBy1393(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1394(t *testing.T) {
	result := operations.DivideBy1394(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1395(t *testing.T) {
	result := operations.DivideBy1395(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1396(t *testing.T) {
	result := operations.DivideBy1396(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1397(t *testing.T) {
	result := operations.DivideBy1397(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1398(t *testing.T) {
	result := operations.DivideBy1398(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1399(t *testing.T) {
	result := operations.DivideBy1399(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1400(t *testing.T) {
	result := operations.DivideBy1400(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1401(t *testing.T) {
	result := operations.DivideBy1401(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1402(t *testing.T) {
	result := operations.DivideBy1402(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1403(t *testing.T) {
	result := operations.DivideBy1403(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1404(t *testing.T) {
	result := operations.DivideBy1404(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1405(t *testing.T) {
	result := operations.DivideBy1405(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1406(t *testing.T) {
	result := operations.DivideBy1406(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1407(t *testing.T) {
	result := operations.DivideBy1407(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1408(t *testing.T) {
	result := operations.DivideBy1408(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1409(t *testing.T) {
	result := operations.DivideBy1409(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1410(t *testing.T) {
	result := operations.DivideBy1410(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1411(t *testing.T) {
	result := operations.DivideBy1411(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1412(t *testing.T) {
	result := operations.DivideBy1412(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1413(t *testing.T) {
	result := operations.DivideBy1413(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1414(t *testing.T) {
	result := operations.DivideBy1414(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1415(t *testing.T) {
	result := operations.DivideBy1415(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1416(t *testing.T) {
	result := operations.DivideBy1416(17000)
	
	if result != 12 {
		t.Errorf("Expected 12 but got %d", result)
	}
}

func TestDivideBy1417(t *testing.T) {
	result := operations.DivideBy1417(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1418(t *testing.T) {
	result := operations.DivideBy1418(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1419(t *testing.T) {
	result := operations.DivideBy1419(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1420(t *testing.T) {
	result := operations.DivideBy1420(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1421(t *testing.T) {
	result := operations.DivideBy1421(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1422(t *testing.T) {
	result := operations.DivideBy1422(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1423(t *testing.T) {
	result := operations.DivideBy1423(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1424(t *testing.T) {
	result := operations.DivideBy1424(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1425(t *testing.T) {
	result := operations.DivideBy1425(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1426(t *testing.T) {
	result := operations.DivideBy1426(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1427(t *testing.T) {
	result := operations.DivideBy1427(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1428(t *testing.T) {
	result := operations.DivideBy1428(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1429(t *testing.T) {
	result := operations.DivideBy1429(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1430(t *testing.T) {
	result := operations.DivideBy1430(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1431(t *testing.T) {
	result := operations.DivideBy1431(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1432(t *testing.T) {
	result := operations.DivideBy1432(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1433(t *testing.T) {
	result := operations.DivideBy1433(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1434(t *testing.T) {
	result := operations.DivideBy1434(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1435(t *testing.T) {
	result := operations.DivideBy1435(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1436(t *testing.T) {
	result := operations.DivideBy1436(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1437(t *testing.T) {
	result := operations.DivideBy1437(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1438(t *testing.T) {
	result := operations.DivideBy1438(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1439(t *testing.T) {
	result := operations.DivideBy1439(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1440(t *testing.T) {
	result := operations.DivideBy1440(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1441(t *testing.T) {
	result := operations.DivideBy1441(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1442(t *testing.T) {
	result := operations.DivideBy1442(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1443(t *testing.T) {
	result := operations.DivideBy1443(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1444(t *testing.T) {
	result := operations.DivideBy1444(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1445(t *testing.T) {
	result := operations.DivideBy1445(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1446(t *testing.T) {
	result := operations.DivideBy1446(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1447(t *testing.T) {
	result := operations.DivideBy1447(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1448(t *testing.T) {
	result := operations.DivideBy1448(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1449(t *testing.T) {
	result := operations.DivideBy1449(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1450(t *testing.T) {
	result := operations.DivideBy1450(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1451(t *testing.T) {
	result := operations.DivideBy1451(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1452(t *testing.T) {
	result := operations.DivideBy1452(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1453(t *testing.T) {
	result := operations.DivideBy1453(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1454(t *testing.T) {
	result := operations.DivideBy1454(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1455(t *testing.T) {
	result := operations.DivideBy1455(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1456(t *testing.T) {
	result := operations.DivideBy1456(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1457(t *testing.T) {
	result := operations.DivideBy1457(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1458(t *testing.T) {
	result := operations.DivideBy1458(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1459(t *testing.T) {
	result := operations.DivideBy1459(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1460(t *testing.T) {
	result := operations.DivideBy1460(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1461(t *testing.T) {
	result := operations.DivideBy1461(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1462(t *testing.T) {
	result := operations.DivideBy1462(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1463(t *testing.T) {
	result := operations.DivideBy1463(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1464(t *testing.T) {
	result := operations.DivideBy1464(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1465(t *testing.T) {
	result := operations.DivideBy1465(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1466(t *testing.T) {
	result := operations.DivideBy1466(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1467(t *testing.T) {
	result := operations.DivideBy1467(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1468(t *testing.T) {
	result := operations.DivideBy1468(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1469(t *testing.T) {
	result := operations.DivideBy1469(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1470(t *testing.T) {
	result := operations.DivideBy1470(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1471(t *testing.T) {
	result := operations.DivideBy1471(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1472(t *testing.T) {
	result := operations.DivideBy1472(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1473(t *testing.T) {
	result := operations.DivideBy1473(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1474(t *testing.T) {
	result := operations.DivideBy1474(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1475(t *testing.T) {
	result := operations.DivideBy1475(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1476(t *testing.T) {
	result := operations.DivideBy1476(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1477(t *testing.T) {
	result := operations.DivideBy1477(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1478(t *testing.T) {
	result := operations.DivideBy1478(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1479(t *testing.T) {
	result := operations.DivideBy1479(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1480(t *testing.T) {
	result := operations.DivideBy1480(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1481(t *testing.T) {
	result := operations.DivideBy1481(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1482(t *testing.T) {
	result := operations.DivideBy1482(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1483(t *testing.T) {
	result := operations.DivideBy1483(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1484(t *testing.T) {
	result := operations.DivideBy1484(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1485(t *testing.T) {
	result := operations.DivideBy1485(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1486(t *testing.T) {
	result := operations.DivideBy1486(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1487(t *testing.T) {
	result := operations.DivideBy1487(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1488(t *testing.T) {
	result := operations.DivideBy1488(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1489(t *testing.T) {
	result := operations.DivideBy1489(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1490(t *testing.T) {
	result := operations.DivideBy1490(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1491(t *testing.T) {
	result := operations.DivideBy1491(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1492(t *testing.T) {
	result := operations.DivideBy1492(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1493(t *testing.T) {
	result := operations.DivideBy1493(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1494(t *testing.T) {
	result := operations.DivideBy1494(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1495(t *testing.T) {
	result := operations.DivideBy1495(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1496(t *testing.T) {
	result := operations.DivideBy1496(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1497(t *testing.T) {
	result := operations.DivideBy1497(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1498(t *testing.T) {
	result := operations.DivideBy1498(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1499(t *testing.T) {
	result := operations.DivideBy1499(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1500(t *testing.T) {
	result := operations.DivideBy1500(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1501(t *testing.T) {
	result := operations.DivideBy1501(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1502(t *testing.T) {
	result := operations.DivideBy1502(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1503(t *testing.T) {
	result := operations.DivideBy1503(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1504(t *testing.T) {
	result := operations.DivideBy1504(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1505(t *testing.T) {
	result := operations.DivideBy1505(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1506(t *testing.T) {
	result := operations.DivideBy1506(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1507(t *testing.T) {
	result := operations.DivideBy1507(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1508(t *testing.T) {
	result := operations.DivideBy1508(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1509(t *testing.T) {
	result := operations.DivideBy1509(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1510(t *testing.T) {
	result := operations.DivideBy1510(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1511(t *testing.T) {
	result := operations.DivideBy1511(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1512(t *testing.T) {
	result := operations.DivideBy1512(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1513(t *testing.T) {
	result := operations.DivideBy1513(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1514(t *testing.T) {
	result := operations.DivideBy1514(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1515(t *testing.T) {
	result := operations.DivideBy1515(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1516(t *testing.T) {
	result := operations.DivideBy1516(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1517(t *testing.T) {
	result := operations.DivideBy1517(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1518(t *testing.T) {
	result := operations.DivideBy1518(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1519(t *testing.T) {
	result := operations.DivideBy1519(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1520(t *testing.T) {
	result := operations.DivideBy1520(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1521(t *testing.T) {
	result := operations.DivideBy1521(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1522(t *testing.T) {
	result := operations.DivideBy1522(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1523(t *testing.T) {
	result := operations.DivideBy1523(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1524(t *testing.T) {
	result := operations.DivideBy1524(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1525(t *testing.T) {
	result := operations.DivideBy1525(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1526(t *testing.T) {
	result := operations.DivideBy1526(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1527(t *testing.T) {
	result := operations.DivideBy1527(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1528(t *testing.T) {
	result := operations.DivideBy1528(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1529(t *testing.T) {
	result := operations.DivideBy1529(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1530(t *testing.T) {
	result := operations.DivideBy1530(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1531(t *testing.T) {
	result := operations.DivideBy1531(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1532(t *testing.T) {
	result := operations.DivideBy1532(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1533(t *testing.T) {
	result := operations.DivideBy1533(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1534(t *testing.T) {
	result := operations.DivideBy1534(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1535(t *testing.T) {
	result := operations.DivideBy1535(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1536(t *testing.T) {
	result := operations.DivideBy1536(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1537(t *testing.T) {
	result := operations.DivideBy1537(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1538(t *testing.T) {
	result := operations.DivideBy1538(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1539(t *testing.T) {
	result := operations.DivideBy1539(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1540(t *testing.T) {
	result := operations.DivideBy1540(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1541(t *testing.T) {
	result := operations.DivideBy1541(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1542(t *testing.T) {
	result := operations.DivideBy1542(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1543(t *testing.T) {
	result := operations.DivideBy1543(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1544(t *testing.T) {
	result := operations.DivideBy1544(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1545(t *testing.T) {
	result := operations.DivideBy1545(17000)
	
	if result != 11 {
		t.Errorf("Expected 11 but got %d", result)
	}
}

func TestDivideBy1546(t *testing.T) {
	result := operations.DivideBy1546(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1547(t *testing.T) {
	result := operations.DivideBy1547(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1548(t *testing.T) {
	result := operations.DivideBy1548(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1549(t *testing.T) {
	result := operations.DivideBy1549(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1550(t *testing.T) {
	result := operations.DivideBy1550(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1551(t *testing.T) {
	result := operations.DivideBy1551(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1552(t *testing.T) {
	result := operations.DivideBy1552(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1553(t *testing.T) {
	result := operations.DivideBy1553(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1554(t *testing.T) {
	result := operations.DivideBy1554(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1555(t *testing.T) {
	result := operations.DivideBy1555(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1556(t *testing.T) {
	result := operations.DivideBy1556(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1557(t *testing.T) {
	result := operations.DivideBy1557(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1558(t *testing.T) {
	result := operations.DivideBy1558(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1559(t *testing.T) {
	result := operations.DivideBy1559(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1560(t *testing.T) {
	result := operations.DivideBy1560(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1561(t *testing.T) {
	result := operations.DivideBy1561(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1562(t *testing.T) {
	result := operations.DivideBy1562(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1563(t *testing.T) {
	result := operations.DivideBy1563(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1564(t *testing.T) {
	result := operations.DivideBy1564(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1565(t *testing.T) {
	result := operations.DivideBy1565(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1566(t *testing.T) {
	result := operations.DivideBy1566(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1567(t *testing.T) {
	result := operations.DivideBy1567(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1568(t *testing.T) {
	result := operations.DivideBy1568(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1569(t *testing.T) {
	result := operations.DivideBy1569(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1570(t *testing.T) {
	result := operations.DivideBy1570(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1571(t *testing.T) {
	result := operations.DivideBy1571(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1572(t *testing.T) {
	result := operations.DivideBy1572(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1573(t *testing.T) {
	result := operations.DivideBy1573(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1574(t *testing.T) {
	result := operations.DivideBy1574(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1575(t *testing.T) {
	result := operations.DivideBy1575(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1576(t *testing.T) {
	result := operations.DivideBy1576(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1577(t *testing.T) {
	result := operations.DivideBy1577(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1578(t *testing.T) {
	result := operations.DivideBy1578(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1579(t *testing.T) {
	result := operations.DivideBy1579(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1580(t *testing.T) {
	result := operations.DivideBy1580(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1581(t *testing.T) {
	result := operations.DivideBy1581(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1582(t *testing.T) {
	result := operations.DivideBy1582(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1583(t *testing.T) {
	result := operations.DivideBy1583(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1584(t *testing.T) {
	result := operations.DivideBy1584(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1585(t *testing.T) {
	result := operations.DivideBy1585(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1586(t *testing.T) {
	result := operations.DivideBy1586(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1587(t *testing.T) {
	result := operations.DivideBy1587(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1588(t *testing.T) {
	result := operations.DivideBy1588(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1589(t *testing.T) {
	result := operations.DivideBy1589(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1590(t *testing.T) {
	result := operations.DivideBy1590(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1591(t *testing.T) {
	result := operations.DivideBy1591(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1592(t *testing.T) {
	result := operations.DivideBy1592(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1593(t *testing.T) {
	result := operations.DivideBy1593(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1594(t *testing.T) {
	result := operations.DivideBy1594(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1595(t *testing.T) {
	result := operations.DivideBy1595(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1596(t *testing.T) {
	result := operations.DivideBy1596(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1597(t *testing.T) {
	result := operations.DivideBy1597(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1598(t *testing.T) {
	result := operations.DivideBy1598(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1599(t *testing.T) {
	result := operations.DivideBy1599(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1600(t *testing.T) {
	result := operations.DivideBy1600(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1601(t *testing.T) {
	result := operations.DivideBy1601(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1602(t *testing.T) {
	result := operations.DivideBy1602(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1603(t *testing.T) {
	result := operations.DivideBy1603(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1604(t *testing.T) {
	result := operations.DivideBy1604(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1605(t *testing.T) {
	result := operations.DivideBy1605(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1606(t *testing.T) {
	result := operations.DivideBy1606(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1607(t *testing.T) {
	result := operations.DivideBy1607(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1608(t *testing.T) {
	result := operations.DivideBy1608(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1609(t *testing.T) {
	result := operations.DivideBy1609(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1610(t *testing.T) {
	result := operations.DivideBy1610(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1611(t *testing.T) {
	result := operations.DivideBy1611(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1612(t *testing.T) {
	result := operations.DivideBy1612(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1613(t *testing.T) {
	result := operations.DivideBy1613(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1614(t *testing.T) {
	result := operations.DivideBy1614(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1615(t *testing.T) {
	result := operations.DivideBy1615(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1616(t *testing.T) {
	result := operations.DivideBy1616(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1617(t *testing.T) {
	result := operations.DivideBy1617(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1618(t *testing.T) {
	result := operations.DivideBy1618(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1619(t *testing.T) {
	result := operations.DivideBy1619(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1620(t *testing.T) {
	result := operations.DivideBy1620(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1621(t *testing.T) {
	result := operations.DivideBy1621(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1622(t *testing.T) {
	result := operations.DivideBy1622(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1623(t *testing.T) {
	result := operations.DivideBy1623(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1624(t *testing.T) {
	result := operations.DivideBy1624(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1625(t *testing.T) {
	result := operations.DivideBy1625(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1626(t *testing.T) {
	result := operations.DivideBy1626(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1627(t *testing.T) {
	result := operations.DivideBy1627(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1628(t *testing.T) {
	result := operations.DivideBy1628(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1629(t *testing.T) {
	result := operations.DivideBy1629(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1630(t *testing.T) {
	result := operations.DivideBy1630(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1631(t *testing.T) {
	result := operations.DivideBy1631(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1632(t *testing.T) {
	result := operations.DivideBy1632(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1633(t *testing.T) {
	result := operations.DivideBy1633(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1634(t *testing.T) {
	result := operations.DivideBy1634(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1635(t *testing.T) {
	result := operations.DivideBy1635(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1636(t *testing.T) {
	result := operations.DivideBy1636(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1637(t *testing.T) {
	result := operations.DivideBy1637(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1638(t *testing.T) {
	result := operations.DivideBy1638(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1639(t *testing.T) {
	result := operations.DivideBy1639(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1640(t *testing.T) {
	result := operations.DivideBy1640(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1641(t *testing.T) {
	result := operations.DivideBy1641(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1642(t *testing.T) {
	result := operations.DivideBy1642(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1643(t *testing.T) {
	result := operations.DivideBy1643(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1644(t *testing.T) {
	result := operations.DivideBy1644(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1645(t *testing.T) {
	result := operations.DivideBy1645(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1646(t *testing.T) {
	result := operations.DivideBy1646(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1647(t *testing.T) {
	result := operations.DivideBy1647(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1648(t *testing.T) {
	result := operations.DivideBy1648(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1649(t *testing.T) {
	result := operations.DivideBy1649(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1650(t *testing.T) {
	result := operations.DivideBy1650(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1651(t *testing.T) {
	result := operations.DivideBy1651(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1652(t *testing.T) {
	result := operations.DivideBy1652(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1653(t *testing.T) {
	result := operations.DivideBy1653(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1654(t *testing.T) {
	result := operations.DivideBy1654(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1655(t *testing.T) {
	result := operations.DivideBy1655(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1656(t *testing.T) {
	result := operations.DivideBy1656(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1657(t *testing.T) {
	result := operations.DivideBy1657(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1658(t *testing.T) {
	result := operations.DivideBy1658(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1659(t *testing.T) {
	result := operations.DivideBy1659(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1660(t *testing.T) {
	result := operations.DivideBy1660(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1661(t *testing.T) {
	result := operations.DivideBy1661(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1662(t *testing.T) {
	result := operations.DivideBy1662(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1663(t *testing.T) {
	result := operations.DivideBy1663(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1664(t *testing.T) {
	result := operations.DivideBy1664(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1665(t *testing.T) {
	result := operations.DivideBy1665(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1666(t *testing.T) {
	result := operations.DivideBy1666(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1667(t *testing.T) {
	result := operations.DivideBy1667(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1668(t *testing.T) {
	result := operations.DivideBy1668(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1669(t *testing.T) {
	result := operations.DivideBy1669(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1670(t *testing.T) {
	result := operations.DivideBy1670(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1671(t *testing.T) {
	result := operations.DivideBy1671(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1672(t *testing.T) {
	result := operations.DivideBy1672(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1673(t *testing.T) {
	result := operations.DivideBy1673(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1674(t *testing.T) {
	result := operations.DivideBy1674(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1675(t *testing.T) {
	result := operations.DivideBy1675(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1676(t *testing.T) {
	result := operations.DivideBy1676(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1677(t *testing.T) {
	result := operations.DivideBy1677(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1678(t *testing.T) {
	result := operations.DivideBy1678(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1679(t *testing.T) {
	result := operations.DivideBy1679(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1680(t *testing.T) {
	result := operations.DivideBy1680(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1681(t *testing.T) {
	result := operations.DivideBy1681(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1682(t *testing.T) {
	result := operations.DivideBy1682(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1683(t *testing.T) {
	result := operations.DivideBy1683(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1684(t *testing.T) {
	result := operations.DivideBy1684(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1685(t *testing.T) {
	result := operations.DivideBy1685(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1686(t *testing.T) {
	result := operations.DivideBy1686(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1687(t *testing.T) {
	result := operations.DivideBy1687(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1688(t *testing.T) {
	result := operations.DivideBy1688(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1689(t *testing.T) {
	result := operations.DivideBy1689(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1690(t *testing.T) {
	result := operations.DivideBy1690(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1691(t *testing.T) {
	result := operations.DivideBy1691(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1692(t *testing.T) {
	result := operations.DivideBy1692(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1693(t *testing.T) {
	result := operations.DivideBy1693(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1694(t *testing.T) {
	result := operations.DivideBy1694(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1695(t *testing.T) {
	result := operations.DivideBy1695(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1696(t *testing.T) {
	result := operations.DivideBy1696(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1697(t *testing.T) {
	result := operations.DivideBy1697(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1698(t *testing.T) {
	result := operations.DivideBy1698(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1699(t *testing.T) {
	result := operations.DivideBy1699(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1700(t *testing.T) {
	result := operations.DivideBy1700(17000)
	
	if result != 10 {
		t.Errorf("Expected 10 but got %d", result)
	}
}

func TestDivideBy1701(t *testing.T) {
	result := operations.DivideBy1701(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1702(t *testing.T) {
	result := operations.DivideBy1702(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1703(t *testing.T) {
	result := operations.DivideBy1703(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1704(t *testing.T) {
	result := operations.DivideBy1704(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1705(t *testing.T) {
	result := operations.DivideBy1705(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1706(t *testing.T) {
	result := operations.DivideBy1706(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1707(t *testing.T) {
	result := operations.DivideBy1707(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1708(t *testing.T) {
	result := operations.DivideBy1708(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1709(t *testing.T) {
	result := operations.DivideBy1709(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1710(t *testing.T) {
	result := operations.DivideBy1710(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1711(t *testing.T) {
	result := operations.DivideBy1711(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1712(t *testing.T) {
	result := operations.DivideBy1712(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1713(t *testing.T) {
	result := operations.DivideBy1713(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1714(t *testing.T) {
	result := operations.DivideBy1714(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1715(t *testing.T) {
	result := operations.DivideBy1715(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1716(t *testing.T) {
	result := operations.DivideBy1716(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1717(t *testing.T) {
	result := operations.DivideBy1717(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1718(t *testing.T) {
	result := operations.DivideBy1718(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1719(t *testing.T) {
	result := operations.DivideBy1719(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1720(t *testing.T) {
	result := operations.DivideBy1720(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1721(t *testing.T) {
	result := operations.DivideBy1721(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1722(t *testing.T) {
	result := operations.DivideBy1722(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1723(t *testing.T) {
	result := operations.DivideBy1723(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1724(t *testing.T) {
	result := operations.DivideBy1724(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1725(t *testing.T) {
	result := operations.DivideBy1725(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1726(t *testing.T) {
	result := operations.DivideBy1726(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1727(t *testing.T) {
	result := operations.DivideBy1727(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1728(t *testing.T) {
	result := operations.DivideBy1728(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1729(t *testing.T) {
	result := operations.DivideBy1729(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1730(t *testing.T) {
	result := operations.DivideBy1730(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1731(t *testing.T) {
	result := operations.DivideBy1731(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1732(t *testing.T) {
	result := operations.DivideBy1732(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1733(t *testing.T) {
	result := operations.DivideBy1733(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1734(t *testing.T) {
	result := operations.DivideBy1734(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1735(t *testing.T) {
	result := operations.DivideBy1735(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1736(t *testing.T) {
	result := operations.DivideBy1736(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1737(t *testing.T) {
	result := operations.DivideBy1737(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1738(t *testing.T) {
	result := operations.DivideBy1738(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1739(t *testing.T) {
	result := operations.DivideBy1739(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1740(t *testing.T) {
	result := operations.DivideBy1740(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1741(t *testing.T) {
	result := operations.DivideBy1741(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1742(t *testing.T) {
	result := operations.DivideBy1742(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1743(t *testing.T) {
	result := operations.DivideBy1743(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1744(t *testing.T) {
	result := operations.DivideBy1744(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1745(t *testing.T) {
	result := operations.DivideBy1745(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1746(t *testing.T) {
	result := operations.DivideBy1746(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1747(t *testing.T) {
	result := operations.DivideBy1747(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1748(t *testing.T) {
	result := operations.DivideBy1748(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1749(t *testing.T) {
	result := operations.DivideBy1749(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1750(t *testing.T) {
	result := operations.DivideBy1750(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1751(t *testing.T) {
	result := operations.DivideBy1751(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1752(t *testing.T) {
	result := operations.DivideBy1752(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1753(t *testing.T) {
	result := operations.DivideBy1753(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1754(t *testing.T) {
	result := operations.DivideBy1754(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1755(t *testing.T) {
	result := operations.DivideBy1755(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1756(t *testing.T) {
	result := operations.DivideBy1756(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1757(t *testing.T) {
	result := operations.DivideBy1757(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1758(t *testing.T) {
	result := operations.DivideBy1758(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1759(t *testing.T) {
	result := operations.DivideBy1759(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1760(t *testing.T) {
	result := operations.DivideBy1760(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1761(t *testing.T) {
	result := operations.DivideBy1761(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1762(t *testing.T) {
	result := operations.DivideBy1762(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1763(t *testing.T) {
	result := operations.DivideBy1763(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1764(t *testing.T) {
	result := operations.DivideBy1764(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1765(t *testing.T) {
	result := operations.DivideBy1765(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1766(t *testing.T) {
	result := operations.DivideBy1766(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1767(t *testing.T) {
	result := operations.DivideBy1767(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1768(t *testing.T) {
	result := operations.DivideBy1768(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1769(t *testing.T) {
	result := operations.DivideBy1769(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1770(t *testing.T) {
	result := operations.DivideBy1770(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1771(t *testing.T) {
	result := operations.DivideBy1771(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1772(t *testing.T) {
	result := operations.DivideBy1772(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1773(t *testing.T) {
	result := operations.DivideBy1773(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1774(t *testing.T) {
	result := operations.DivideBy1774(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1775(t *testing.T) {
	result := operations.DivideBy1775(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1776(t *testing.T) {
	result := operations.DivideBy1776(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1777(t *testing.T) {
	result := operations.DivideBy1777(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1778(t *testing.T) {
	result := operations.DivideBy1778(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1779(t *testing.T) {
	result := operations.DivideBy1779(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1780(t *testing.T) {
	result := operations.DivideBy1780(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1781(t *testing.T) {
	result := operations.DivideBy1781(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1782(t *testing.T) {
	result := operations.DivideBy1782(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1783(t *testing.T) {
	result := operations.DivideBy1783(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1784(t *testing.T) {
	result := operations.DivideBy1784(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1785(t *testing.T) {
	result := operations.DivideBy1785(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1786(t *testing.T) {
	result := operations.DivideBy1786(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1787(t *testing.T) {
	result := operations.DivideBy1787(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1788(t *testing.T) {
	result := operations.DivideBy1788(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1789(t *testing.T) {
	result := operations.DivideBy1789(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1790(t *testing.T) {
	result := operations.DivideBy1790(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1791(t *testing.T) {
	result := operations.DivideBy1791(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1792(t *testing.T) {
	result := operations.DivideBy1792(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1793(t *testing.T) {
	result := operations.DivideBy1793(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1794(t *testing.T) {
	result := operations.DivideBy1794(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1795(t *testing.T) {
	result := operations.DivideBy1795(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1796(t *testing.T) {
	result := operations.DivideBy1796(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1797(t *testing.T) {
	result := operations.DivideBy1797(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1798(t *testing.T) {
	result := operations.DivideBy1798(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1799(t *testing.T) {
	result := operations.DivideBy1799(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1800(t *testing.T) {
	result := operations.DivideBy1800(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1801(t *testing.T) {
	result := operations.DivideBy1801(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1802(t *testing.T) {
	result := operations.DivideBy1802(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1803(t *testing.T) {
	result := operations.DivideBy1803(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1804(t *testing.T) {
	result := operations.DivideBy1804(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1805(t *testing.T) {
	result := operations.DivideBy1805(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1806(t *testing.T) {
	result := operations.DivideBy1806(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1807(t *testing.T) {
	result := operations.DivideBy1807(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1808(t *testing.T) {
	result := operations.DivideBy1808(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1809(t *testing.T) {
	result := operations.DivideBy1809(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1810(t *testing.T) {
	result := operations.DivideBy1810(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1811(t *testing.T) {
	result := operations.DivideBy1811(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1812(t *testing.T) {
	result := operations.DivideBy1812(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1813(t *testing.T) {
	result := operations.DivideBy1813(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1814(t *testing.T) {
	result := operations.DivideBy1814(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1815(t *testing.T) {
	result := operations.DivideBy1815(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1816(t *testing.T) {
	result := operations.DivideBy1816(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1817(t *testing.T) {
	result := operations.DivideBy1817(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1818(t *testing.T) {
	result := operations.DivideBy1818(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1819(t *testing.T) {
	result := operations.DivideBy1819(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1820(t *testing.T) {
	result := operations.DivideBy1820(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1821(t *testing.T) {
	result := operations.DivideBy1821(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1822(t *testing.T) {
	result := operations.DivideBy1822(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1823(t *testing.T) {
	result := operations.DivideBy1823(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1824(t *testing.T) {
	result := operations.DivideBy1824(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1825(t *testing.T) {
	result := operations.DivideBy1825(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1826(t *testing.T) {
	result := operations.DivideBy1826(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1827(t *testing.T) {
	result := operations.DivideBy1827(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1828(t *testing.T) {
	result := operations.DivideBy1828(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1829(t *testing.T) {
	result := operations.DivideBy1829(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1830(t *testing.T) {
	result := operations.DivideBy1830(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1831(t *testing.T) {
	result := operations.DivideBy1831(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1832(t *testing.T) {
	result := operations.DivideBy1832(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1833(t *testing.T) {
	result := operations.DivideBy1833(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1834(t *testing.T) {
	result := operations.DivideBy1834(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1835(t *testing.T) {
	result := operations.DivideBy1835(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1836(t *testing.T) {
	result := operations.DivideBy1836(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1837(t *testing.T) {
	result := operations.DivideBy1837(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1838(t *testing.T) {
	result := operations.DivideBy1838(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1839(t *testing.T) {
	result := operations.DivideBy1839(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1840(t *testing.T) {
	result := operations.DivideBy1840(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1841(t *testing.T) {
	result := operations.DivideBy1841(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1842(t *testing.T) {
	result := operations.DivideBy1842(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1843(t *testing.T) {
	result := operations.DivideBy1843(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1844(t *testing.T) {
	result := operations.DivideBy1844(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1845(t *testing.T) {
	result := operations.DivideBy1845(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1846(t *testing.T) {
	result := operations.DivideBy1846(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1847(t *testing.T) {
	result := operations.DivideBy1847(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1848(t *testing.T) {
	result := operations.DivideBy1848(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1849(t *testing.T) {
	result := operations.DivideBy1849(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1850(t *testing.T) {
	result := operations.DivideBy1850(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1851(t *testing.T) {
	result := operations.DivideBy1851(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1852(t *testing.T) {
	result := operations.DivideBy1852(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1853(t *testing.T) {
	result := operations.DivideBy1853(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1854(t *testing.T) {
	result := operations.DivideBy1854(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1855(t *testing.T) {
	result := operations.DivideBy1855(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1856(t *testing.T) {
	result := operations.DivideBy1856(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1857(t *testing.T) {
	result := operations.DivideBy1857(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1858(t *testing.T) {
	result := operations.DivideBy1858(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1859(t *testing.T) {
	result := operations.DivideBy1859(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1860(t *testing.T) {
	result := operations.DivideBy1860(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1861(t *testing.T) {
	result := operations.DivideBy1861(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1862(t *testing.T) {
	result := operations.DivideBy1862(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1863(t *testing.T) {
	result := operations.DivideBy1863(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1864(t *testing.T) {
	result := operations.DivideBy1864(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1865(t *testing.T) {
	result := operations.DivideBy1865(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1866(t *testing.T) {
	result := operations.DivideBy1866(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1867(t *testing.T) {
	result := operations.DivideBy1867(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1868(t *testing.T) {
	result := operations.DivideBy1868(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1869(t *testing.T) {
	result := operations.DivideBy1869(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1870(t *testing.T) {
	result := operations.DivideBy1870(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1871(t *testing.T) {
	result := operations.DivideBy1871(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1872(t *testing.T) {
	result := operations.DivideBy1872(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1873(t *testing.T) {
	result := operations.DivideBy1873(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1874(t *testing.T) {
	result := operations.DivideBy1874(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1875(t *testing.T) {
	result := operations.DivideBy1875(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1876(t *testing.T) {
	result := operations.DivideBy1876(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1877(t *testing.T) {
	result := operations.DivideBy1877(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1878(t *testing.T) {
	result := operations.DivideBy1878(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1879(t *testing.T) {
	result := operations.DivideBy1879(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1880(t *testing.T) {
	result := operations.DivideBy1880(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1881(t *testing.T) {
	result := operations.DivideBy1881(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1882(t *testing.T) {
	result := operations.DivideBy1882(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1883(t *testing.T) {
	result := operations.DivideBy1883(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1884(t *testing.T) {
	result := operations.DivideBy1884(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1885(t *testing.T) {
	result := operations.DivideBy1885(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1886(t *testing.T) {
	result := operations.DivideBy1886(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1887(t *testing.T) {
	result := operations.DivideBy1887(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1888(t *testing.T) {
	result := operations.DivideBy1888(17000)
	
	if result != 9 {
		t.Errorf("Expected 9 but got %d", result)
	}
}

func TestDivideBy1889(t *testing.T) {
	result := operations.DivideBy1889(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1890(t *testing.T) {
	result := operations.DivideBy1890(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1891(t *testing.T) {
	result := operations.DivideBy1891(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1892(t *testing.T) {
	result := operations.DivideBy1892(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1893(t *testing.T) {
	result := operations.DivideBy1893(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1894(t *testing.T) {
	result := operations.DivideBy1894(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1895(t *testing.T) {
	result := operations.DivideBy1895(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1896(t *testing.T) {
	result := operations.DivideBy1896(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1897(t *testing.T) {
	result := operations.DivideBy1897(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1898(t *testing.T) {
	result := operations.DivideBy1898(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1899(t *testing.T) {
	result := operations.DivideBy1899(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1900(t *testing.T) {
	result := operations.DivideBy1900(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1901(t *testing.T) {
	result := operations.DivideBy1901(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1902(t *testing.T) {
	result := operations.DivideBy1902(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1903(t *testing.T) {
	result := operations.DivideBy1903(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1904(t *testing.T) {
	result := operations.DivideBy1904(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1905(t *testing.T) {
	result := operations.DivideBy1905(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1906(t *testing.T) {
	result := operations.DivideBy1906(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1907(t *testing.T) {
	result := operations.DivideBy1907(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1908(t *testing.T) {
	result := operations.DivideBy1908(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1909(t *testing.T) {
	result := operations.DivideBy1909(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1910(t *testing.T) {
	result := operations.DivideBy1910(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1911(t *testing.T) {
	result := operations.DivideBy1911(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1912(t *testing.T) {
	result := operations.DivideBy1912(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1913(t *testing.T) {
	result := operations.DivideBy1913(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1914(t *testing.T) {
	result := operations.DivideBy1914(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1915(t *testing.T) {
	result := operations.DivideBy1915(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1916(t *testing.T) {
	result := operations.DivideBy1916(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1917(t *testing.T) {
	result := operations.DivideBy1917(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1918(t *testing.T) {
	result := operations.DivideBy1918(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1919(t *testing.T) {
	result := operations.DivideBy1919(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1920(t *testing.T) {
	result := operations.DivideBy1920(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1921(t *testing.T) {
	result := operations.DivideBy1921(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1922(t *testing.T) {
	result := operations.DivideBy1922(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1923(t *testing.T) {
	result := operations.DivideBy1923(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1924(t *testing.T) {
	result := operations.DivideBy1924(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1925(t *testing.T) {
	result := operations.DivideBy1925(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1926(t *testing.T) {
	result := operations.DivideBy1926(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1927(t *testing.T) {
	result := operations.DivideBy1927(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1928(t *testing.T) {
	result := operations.DivideBy1928(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1929(t *testing.T) {
	result := operations.DivideBy1929(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1930(t *testing.T) {
	result := operations.DivideBy1930(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1931(t *testing.T) {
	result := operations.DivideBy1931(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1932(t *testing.T) {
	result := operations.DivideBy1932(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1933(t *testing.T) {
	result := operations.DivideBy1933(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1934(t *testing.T) {
	result := operations.DivideBy1934(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1935(t *testing.T) {
	result := operations.DivideBy1935(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1936(t *testing.T) {
	result := operations.DivideBy1936(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1937(t *testing.T) {
	result := operations.DivideBy1937(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1938(t *testing.T) {
	result := operations.DivideBy1938(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1939(t *testing.T) {
	result := operations.DivideBy1939(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1940(t *testing.T) {
	result := operations.DivideBy1940(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1941(t *testing.T) {
	result := operations.DivideBy1941(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1942(t *testing.T) {
	result := operations.DivideBy1942(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1943(t *testing.T) {
	result := operations.DivideBy1943(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1944(t *testing.T) {
	result := operations.DivideBy1944(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1945(t *testing.T) {
	result := operations.DivideBy1945(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1946(t *testing.T) {
	result := operations.DivideBy1946(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1947(t *testing.T) {
	result := operations.DivideBy1947(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1948(t *testing.T) {
	result := operations.DivideBy1948(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1949(t *testing.T) {
	result := operations.DivideBy1949(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1950(t *testing.T) {
	result := operations.DivideBy1950(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1951(t *testing.T) {
	result := operations.DivideBy1951(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1952(t *testing.T) {
	result := operations.DivideBy1952(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1953(t *testing.T) {
	result := operations.DivideBy1953(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1954(t *testing.T) {
	result := operations.DivideBy1954(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1955(t *testing.T) {
	result := operations.DivideBy1955(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1956(t *testing.T) {
	result := operations.DivideBy1956(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1957(t *testing.T) {
	result := operations.DivideBy1957(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1958(t *testing.T) {
	result := operations.DivideBy1958(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1959(t *testing.T) {
	result := operations.DivideBy1959(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1960(t *testing.T) {
	result := operations.DivideBy1960(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1961(t *testing.T) {
	result := operations.DivideBy1961(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1962(t *testing.T) {
	result := operations.DivideBy1962(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1963(t *testing.T) {
	result := operations.DivideBy1963(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1964(t *testing.T) {
	result := operations.DivideBy1964(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1965(t *testing.T) {
	result := operations.DivideBy1965(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1966(t *testing.T) {
	result := operations.DivideBy1966(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1967(t *testing.T) {
	result := operations.DivideBy1967(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1968(t *testing.T) {
	result := operations.DivideBy1968(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1969(t *testing.T) {
	result := operations.DivideBy1969(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1970(t *testing.T) {
	result := operations.DivideBy1970(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1971(t *testing.T) {
	result := operations.DivideBy1971(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1972(t *testing.T) {
	result := operations.DivideBy1972(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1973(t *testing.T) {
	result := operations.DivideBy1973(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1974(t *testing.T) {
	result := operations.DivideBy1974(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1975(t *testing.T) {
	result := operations.DivideBy1975(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1976(t *testing.T) {
	result := operations.DivideBy1976(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1977(t *testing.T) {
	result := operations.DivideBy1977(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1978(t *testing.T) {
	result := operations.DivideBy1978(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1979(t *testing.T) {
	result := operations.DivideBy1979(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1980(t *testing.T) {
	result := operations.DivideBy1980(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1981(t *testing.T) {
	result := operations.DivideBy1981(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1982(t *testing.T) {
	result := operations.DivideBy1982(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1983(t *testing.T) {
	result := operations.DivideBy1983(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1984(t *testing.T) {
	result := operations.DivideBy1984(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1985(t *testing.T) {
	result := operations.DivideBy1985(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1986(t *testing.T) {
	result := operations.DivideBy1986(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1987(t *testing.T) {
	result := operations.DivideBy1987(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1988(t *testing.T) {
	result := operations.DivideBy1988(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1989(t *testing.T) {
	result := operations.DivideBy1989(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1990(t *testing.T) {
	result := operations.DivideBy1990(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1991(t *testing.T) {
	result := operations.DivideBy1991(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1992(t *testing.T) {
	result := operations.DivideBy1992(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1993(t *testing.T) {
	result := operations.DivideBy1993(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1994(t *testing.T) {
	result := operations.DivideBy1994(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1995(t *testing.T) {
	result := operations.DivideBy1995(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1996(t *testing.T) {
	result := operations.DivideBy1996(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1997(t *testing.T) {
	result := operations.DivideBy1997(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1998(t *testing.T) {
	result := operations.DivideBy1998(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy1999(t *testing.T) {
	result := operations.DivideBy1999(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2000(t *testing.T) {
	result := operations.DivideBy2000(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2001(t *testing.T) {
	result := operations.DivideBy2001(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2002(t *testing.T) {
	result := operations.DivideBy2002(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2003(t *testing.T) {
	result := operations.DivideBy2003(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2004(t *testing.T) {
	result := operations.DivideBy2004(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2005(t *testing.T) {
	result := operations.DivideBy2005(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2006(t *testing.T) {
	result := operations.DivideBy2006(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2007(t *testing.T) {
	result := operations.DivideBy2007(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2008(t *testing.T) {
	result := operations.DivideBy2008(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2009(t *testing.T) {
	result := operations.DivideBy2009(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2010(t *testing.T) {
	result := operations.DivideBy2010(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2011(t *testing.T) {
	result := operations.DivideBy2011(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2012(t *testing.T) {
	result := operations.DivideBy2012(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2013(t *testing.T) {
	result := operations.DivideBy2013(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2014(t *testing.T) {
	result := operations.DivideBy2014(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2015(t *testing.T) {
	result := operations.DivideBy2015(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2016(t *testing.T) {
	result := operations.DivideBy2016(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2017(t *testing.T) {
	result := operations.DivideBy2017(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2018(t *testing.T) {
	result := operations.DivideBy2018(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2019(t *testing.T) {
	result := operations.DivideBy2019(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2020(t *testing.T) {
	result := operations.DivideBy2020(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2021(t *testing.T) {
	result := operations.DivideBy2021(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2022(t *testing.T) {
	result := operations.DivideBy2022(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2023(t *testing.T) {
	result := operations.DivideBy2023(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2024(t *testing.T) {
	result := operations.DivideBy2024(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2025(t *testing.T) {
	result := operations.DivideBy2025(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2026(t *testing.T) {
	result := operations.DivideBy2026(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2027(t *testing.T) {
	result := operations.DivideBy2027(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2028(t *testing.T) {
	result := operations.DivideBy2028(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2029(t *testing.T) {
	result := operations.DivideBy2029(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2030(t *testing.T) {
	result := operations.DivideBy2030(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2031(t *testing.T) {
	result := operations.DivideBy2031(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2032(t *testing.T) {
	result := operations.DivideBy2032(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2033(t *testing.T) {
	result := operations.DivideBy2033(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2034(t *testing.T) {
	result := operations.DivideBy2034(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2035(t *testing.T) {
	result := operations.DivideBy2035(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2036(t *testing.T) {
	result := operations.DivideBy2036(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2037(t *testing.T) {
	result := operations.DivideBy2037(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2038(t *testing.T) {
	result := operations.DivideBy2038(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2039(t *testing.T) {
	result := operations.DivideBy2039(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2040(t *testing.T) {
	result := operations.DivideBy2040(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2041(t *testing.T) {
	result := operations.DivideBy2041(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2042(t *testing.T) {
	result := operations.DivideBy2042(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2043(t *testing.T) {
	result := operations.DivideBy2043(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2044(t *testing.T) {
	result := operations.DivideBy2044(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2045(t *testing.T) {
	result := operations.DivideBy2045(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2046(t *testing.T) {
	result := operations.DivideBy2046(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2047(t *testing.T) {
	result := operations.DivideBy2047(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2048(t *testing.T) {
	result := operations.DivideBy2048(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2049(t *testing.T) {
	result := operations.DivideBy2049(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2050(t *testing.T) {
	result := operations.DivideBy2050(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2051(t *testing.T) {
	result := operations.DivideBy2051(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2052(t *testing.T) {
	result := operations.DivideBy2052(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2053(t *testing.T) {
	result := operations.DivideBy2053(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2054(t *testing.T) {
	result := operations.DivideBy2054(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2055(t *testing.T) {
	result := operations.DivideBy2055(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2056(t *testing.T) {
	result := operations.DivideBy2056(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2057(t *testing.T) {
	result := operations.DivideBy2057(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2058(t *testing.T) {
	result := operations.DivideBy2058(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2059(t *testing.T) {
	result := operations.DivideBy2059(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2060(t *testing.T) {
	result := operations.DivideBy2060(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2061(t *testing.T) {
	result := operations.DivideBy2061(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2062(t *testing.T) {
	result := operations.DivideBy2062(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2063(t *testing.T) {
	result := operations.DivideBy2063(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2064(t *testing.T) {
	result := operations.DivideBy2064(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2065(t *testing.T) {
	result := operations.DivideBy2065(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2066(t *testing.T) {
	result := operations.DivideBy2066(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2067(t *testing.T) {
	result := operations.DivideBy2067(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2068(t *testing.T) {
	result := operations.DivideBy2068(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2069(t *testing.T) {
	result := operations.DivideBy2069(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2070(t *testing.T) {
	result := operations.DivideBy2070(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2071(t *testing.T) {
	result := operations.DivideBy2071(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2072(t *testing.T) {
	result := operations.DivideBy2072(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2073(t *testing.T) {
	result := operations.DivideBy2073(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2074(t *testing.T) {
	result := operations.DivideBy2074(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2075(t *testing.T) {
	result := operations.DivideBy2075(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2076(t *testing.T) {
	result := operations.DivideBy2076(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2077(t *testing.T) {
	result := operations.DivideBy2077(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2078(t *testing.T) {
	result := operations.DivideBy2078(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2079(t *testing.T) {
	result := operations.DivideBy2079(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2080(t *testing.T) {
	result := operations.DivideBy2080(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2081(t *testing.T) {
	result := operations.DivideBy2081(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2082(t *testing.T) {
	result := operations.DivideBy2082(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2083(t *testing.T) {
	result := operations.DivideBy2083(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2084(t *testing.T) {
	result := operations.DivideBy2084(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2085(t *testing.T) {
	result := operations.DivideBy2085(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2086(t *testing.T) {
	result := operations.DivideBy2086(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2087(t *testing.T) {
	result := operations.DivideBy2087(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2088(t *testing.T) {
	result := operations.DivideBy2088(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2089(t *testing.T) {
	result := operations.DivideBy2089(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2090(t *testing.T) {
	result := operations.DivideBy2090(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2091(t *testing.T) {
	result := operations.DivideBy2091(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2092(t *testing.T) {
	result := operations.DivideBy2092(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2093(t *testing.T) {
	result := operations.DivideBy2093(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2094(t *testing.T) {
	result := operations.DivideBy2094(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2095(t *testing.T) {
	result := operations.DivideBy2095(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2096(t *testing.T) {
	result := operations.DivideBy2096(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2097(t *testing.T) {
	result := operations.DivideBy2097(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2098(t *testing.T) {
	result := operations.DivideBy2098(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2099(t *testing.T) {
	result := operations.DivideBy2099(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2100(t *testing.T) {
	result := operations.DivideBy2100(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2101(t *testing.T) {
	result := operations.DivideBy2101(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2102(t *testing.T) {
	result := operations.DivideBy2102(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2103(t *testing.T) {
	result := operations.DivideBy2103(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2104(t *testing.T) {
	result := operations.DivideBy2104(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2105(t *testing.T) {
	result := operations.DivideBy2105(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2106(t *testing.T) {
	result := operations.DivideBy2106(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2107(t *testing.T) {
	result := operations.DivideBy2107(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2108(t *testing.T) {
	result := operations.DivideBy2108(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2109(t *testing.T) {
	result := operations.DivideBy2109(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2110(t *testing.T) {
	result := operations.DivideBy2110(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2111(t *testing.T) {
	result := operations.DivideBy2111(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2112(t *testing.T) {
	result := operations.DivideBy2112(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2113(t *testing.T) {
	result := operations.DivideBy2113(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2114(t *testing.T) {
	result := operations.DivideBy2114(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2115(t *testing.T) {
	result := operations.DivideBy2115(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2116(t *testing.T) {
	result := operations.DivideBy2116(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2117(t *testing.T) {
	result := operations.DivideBy2117(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2118(t *testing.T) {
	result := operations.DivideBy2118(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2119(t *testing.T) {
	result := operations.DivideBy2119(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2120(t *testing.T) {
	result := operations.DivideBy2120(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2121(t *testing.T) {
	result := operations.DivideBy2121(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2122(t *testing.T) {
	result := operations.DivideBy2122(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2123(t *testing.T) {
	result := operations.DivideBy2123(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2124(t *testing.T) {
	result := operations.DivideBy2124(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2125(t *testing.T) {
	result := operations.DivideBy2125(17000)
	
	if result != 8 {
		t.Errorf("Expected 8 but got %d", result)
	}
}

func TestDivideBy2126(t *testing.T) {
	result := operations.DivideBy2126(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2127(t *testing.T) {
	result := operations.DivideBy2127(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2128(t *testing.T) {
	result := operations.DivideBy2128(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2129(t *testing.T) {
	result := operations.DivideBy2129(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2130(t *testing.T) {
	result := operations.DivideBy2130(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2131(t *testing.T) {
	result := operations.DivideBy2131(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2132(t *testing.T) {
	result := operations.DivideBy2132(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2133(t *testing.T) {
	result := operations.DivideBy2133(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2134(t *testing.T) {
	result := operations.DivideBy2134(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2135(t *testing.T) {
	result := operations.DivideBy2135(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2136(t *testing.T) {
	result := operations.DivideBy2136(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2137(t *testing.T) {
	result := operations.DivideBy2137(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2138(t *testing.T) {
	result := operations.DivideBy2138(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2139(t *testing.T) {
	result := operations.DivideBy2139(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2140(t *testing.T) {
	result := operations.DivideBy2140(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2141(t *testing.T) {
	result := operations.DivideBy2141(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2142(t *testing.T) {
	result := operations.DivideBy2142(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2143(t *testing.T) {
	result := operations.DivideBy2143(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2144(t *testing.T) {
	result := operations.DivideBy2144(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2145(t *testing.T) {
	result := operations.DivideBy2145(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2146(t *testing.T) {
	result := operations.DivideBy2146(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2147(t *testing.T) {
	result := operations.DivideBy2147(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2148(t *testing.T) {
	result := operations.DivideBy2148(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2149(t *testing.T) {
	result := operations.DivideBy2149(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2150(t *testing.T) {
	result := operations.DivideBy2150(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2151(t *testing.T) {
	result := operations.DivideBy2151(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2152(t *testing.T) {
	result := operations.DivideBy2152(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2153(t *testing.T) {
	result := operations.DivideBy2153(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2154(t *testing.T) {
	result := operations.DivideBy2154(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2155(t *testing.T) {
	result := operations.DivideBy2155(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2156(t *testing.T) {
	result := operations.DivideBy2156(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2157(t *testing.T) {
	result := operations.DivideBy2157(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2158(t *testing.T) {
	result := operations.DivideBy2158(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2159(t *testing.T) {
	result := operations.DivideBy2159(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2160(t *testing.T) {
	result := operations.DivideBy2160(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2161(t *testing.T) {
	result := operations.DivideBy2161(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2162(t *testing.T) {
	result := operations.DivideBy2162(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2163(t *testing.T) {
	result := operations.DivideBy2163(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2164(t *testing.T) {
	result := operations.DivideBy2164(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2165(t *testing.T) {
	result := operations.DivideBy2165(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2166(t *testing.T) {
	result := operations.DivideBy2166(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2167(t *testing.T) {
	result := operations.DivideBy2167(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2168(t *testing.T) {
	result := operations.DivideBy2168(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2169(t *testing.T) {
	result := operations.DivideBy2169(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2170(t *testing.T) {
	result := operations.DivideBy2170(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2171(t *testing.T) {
	result := operations.DivideBy2171(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2172(t *testing.T) {
	result := operations.DivideBy2172(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2173(t *testing.T) {
	result := operations.DivideBy2173(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2174(t *testing.T) {
	result := operations.DivideBy2174(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2175(t *testing.T) {
	result := operations.DivideBy2175(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2176(t *testing.T) {
	result := operations.DivideBy2176(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2177(t *testing.T) {
	result := operations.DivideBy2177(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2178(t *testing.T) {
	result := operations.DivideBy2178(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2179(t *testing.T) {
	result := operations.DivideBy2179(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2180(t *testing.T) {
	result := operations.DivideBy2180(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2181(t *testing.T) {
	result := operations.DivideBy2181(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2182(t *testing.T) {
	result := operations.DivideBy2182(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2183(t *testing.T) {
	result := operations.DivideBy2183(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2184(t *testing.T) {
	result := operations.DivideBy2184(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2185(t *testing.T) {
	result := operations.DivideBy2185(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2186(t *testing.T) {
	result := operations.DivideBy2186(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2187(t *testing.T) {
	result := operations.DivideBy2187(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2188(t *testing.T) {
	result := operations.DivideBy2188(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2189(t *testing.T) {
	result := operations.DivideBy2189(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2190(t *testing.T) {
	result := operations.DivideBy2190(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2191(t *testing.T) {
	result := operations.DivideBy2191(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2192(t *testing.T) {
	result := operations.DivideBy2192(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2193(t *testing.T) {
	result := operations.DivideBy2193(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2194(t *testing.T) {
	result := operations.DivideBy2194(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2195(t *testing.T) {
	result := operations.DivideBy2195(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2196(t *testing.T) {
	result := operations.DivideBy2196(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2197(t *testing.T) {
	result := operations.DivideBy2197(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2198(t *testing.T) {
	result := operations.DivideBy2198(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2199(t *testing.T) {
	result := operations.DivideBy2199(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2200(t *testing.T) {
	result := operations.DivideBy2200(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2201(t *testing.T) {
	result := operations.DivideBy2201(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2202(t *testing.T) {
	result := operations.DivideBy2202(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2203(t *testing.T) {
	result := operations.DivideBy2203(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2204(t *testing.T) {
	result := operations.DivideBy2204(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2205(t *testing.T) {
	result := operations.DivideBy2205(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2206(t *testing.T) {
	result := operations.DivideBy2206(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2207(t *testing.T) {
	result := operations.DivideBy2207(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2208(t *testing.T) {
	result := operations.DivideBy2208(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2209(t *testing.T) {
	result := operations.DivideBy2209(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2210(t *testing.T) {
	result := operations.DivideBy2210(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2211(t *testing.T) {
	result := operations.DivideBy2211(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2212(t *testing.T) {
	result := operations.DivideBy2212(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2213(t *testing.T) {
	result := operations.DivideBy2213(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2214(t *testing.T) {
	result := operations.DivideBy2214(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2215(t *testing.T) {
	result := operations.DivideBy2215(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2216(t *testing.T) {
	result := operations.DivideBy2216(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2217(t *testing.T) {
	result := operations.DivideBy2217(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2218(t *testing.T) {
	result := operations.DivideBy2218(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2219(t *testing.T) {
	result := operations.DivideBy2219(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2220(t *testing.T) {
	result := operations.DivideBy2220(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2221(t *testing.T) {
	result := operations.DivideBy2221(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2222(t *testing.T) {
	result := operations.DivideBy2222(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2223(t *testing.T) {
	result := operations.DivideBy2223(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2224(t *testing.T) {
	result := operations.DivideBy2224(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2225(t *testing.T) {
	result := operations.DivideBy2225(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2226(t *testing.T) {
	result := operations.DivideBy2226(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2227(t *testing.T) {
	result := operations.DivideBy2227(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2228(t *testing.T) {
	result := operations.DivideBy2228(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2229(t *testing.T) {
	result := operations.DivideBy2229(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2230(t *testing.T) {
	result := operations.DivideBy2230(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2231(t *testing.T) {
	result := operations.DivideBy2231(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2232(t *testing.T) {
	result := operations.DivideBy2232(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2233(t *testing.T) {
	result := operations.DivideBy2233(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2234(t *testing.T) {
	result := operations.DivideBy2234(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2235(t *testing.T) {
	result := operations.DivideBy2235(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2236(t *testing.T) {
	result := operations.DivideBy2236(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2237(t *testing.T) {
	result := operations.DivideBy2237(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2238(t *testing.T) {
	result := operations.DivideBy2238(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2239(t *testing.T) {
	result := operations.DivideBy2239(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2240(t *testing.T) {
	result := operations.DivideBy2240(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2241(t *testing.T) {
	result := operations.DivideBy2241(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2242(t *testing.T) {
	result := operations.DivideBy2242(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2243(t *testing.T) {
	result := operations.DivideBy2243(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2244(t *testing.T) {
	result := operations.DivideBy2244(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2245(t *testing.T) {
	result := operations.DivideBy2245(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2246(t *testing.T) {
	result := operations.DivideBy2246(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2247(t *testing.T) {
	result := operations.DivideBy2247(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2248(t *testing.T) {
	result := operations.DivideBy2248(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2249(t *testing.T) {
	result := operations.DivideBy2249(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2250(t *testing.T) {
	result := operations.DivideBy2250(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2251(t *testing.T) {
	result := operations.DivideBy2251(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2252(t *testing.T) {
	result := operations.DivideBy2252(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2253(t *testing.T) {
	result := operations.DivideBy2253(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2254(t *testing.T) {
	result := operations.DivideBy2254(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2255(t *testing.T) {
	result := operations.DivideBy2255(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2256(t *testing.T) {
	result := operations.DivideBy2256(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2257(t *testing.T) {
	result := operations.DivideBy2257(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2258(t *testing.T) {
	result := operations.DivideBy2258(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2259(t *testing.T) {
	result := operations.DivideBy2259(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2260(t *testing.T) {
	result := operations.DivideBy2260(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2261(t *testing.T) {
	result := operations.DivideBy2261(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2262(t *testing.T) {
	result := operations.DivideBy2262(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2263(t *testing.T) {
	result := operations.DivideBy2263(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2264(t *testing.T) {
	result := operations.DivideBy2264(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2265(t *testing.T) {
	result := operations.DivideBy2265(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2266(t *testing.T) {
	result := operations.DivideBy2266(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2267(t *testing.T) {
	result := operations.DivideBy2267(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2268(t *testing.T) {
	result := operations.DivideBy2268(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2269(t *testing.T) {
	result := operations.DivideBy2269(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2270(t *testing.T) {
	result := operations.DivideBy2270(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2271(t *testing.T) {
	result := operations.DivideBy2271(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2272(t *testing.T) {
	result := operations.DivideBy2272(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2273(t *testing.T) {
	result := operations.DivideBy2273(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2274(t *testing.T) {
	result := operations.DivideBy2274(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2275(t *testing.T) {
	result := operations.DivideBy2275(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2276(t *testing.T) {
	result := operations.DivideBy2276(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2277(t *testing.T) {
	result := operations.DivideBy2277(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2278(t *testing.T) {
	result := operations.DivideBy2278(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2279(t *testing.T) {
	result := operations.DivideBy2279(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2280(t *testing.T) {
	result := operations.DivideBy2280(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2281(t *testing.T) {
	result := operations.DivideBy2281(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2282(t *testing.T) {
	result := operations.DivideBy2282(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2283(t *testing.T) {
	result := operations.DivideBy2283(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2284(t *testing.T) {
	result := operations.DivideBy2284(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2285(t *testing.T) {
	result := operations.DivideBy2285(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2286(t *testing.T) {
	result := operations.DivideBy2286(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2287(t *testing.T) {
	result := operations.DivideBy2287(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2288(t *testing.T) {
	result := operations.DivideBy2288(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2289(t *testing.T) {
	result := operations.DivideBy2289(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2290(t *testing.T) {
	result := operations.DivideBy2290(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2291(t *testing.T) {
	result := operations.DivideBy2291(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2292(t *testing.T) {
	result := operations.DivideBy2292(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2293(t *testing.T) {
	result := operations.DivideBy2293(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2294(t *testing.T) {
	result := operations.DivideBy2294(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2295(t *testing.T) {
	result := operations.DivideBy2295(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2296(t *testing.T) {
	result := operations.DivideBy2296(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2297(t *testing.T) {
	result := operations.DivideBy2297(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2298(t *testing.T) {
	result := operations.DivideBy2298(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2299(t *testing.T) {
	result := operations.DivideBy2299(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2300(t *testing.T) {
	result := operations.DivideBy2300(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2301(t *testing.T) {
	result := operations.DivideBy2301(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2302(t *testing.T) {
	result := operations.DivideBy2302(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2303(t *testing.T) {
	result := operations.DivideBy2303(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2304(t *testing.T) {
	result := operations.DivideBy2304(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2305(t *testing.T) {
	result := operations.DivideBy2305(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2306(t *testing.T) {
	result := operations.DivideBy2306(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2307(t *testing.T) {
	result := operations.DivideBy2307(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2308(t *testing.T) {
	result := operations.DivideBy2308(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2309(t *testing.T) {
	result := operations.DivideBy2309(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2310(t *testing.T) {
	result := operations.DivideBy2310(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2311(t *testing.T) {
	result := operations.DivideBy2311(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2312(t *testing.T) {
	result := operations.DivideBy2312(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2313(t *testing.T) {
	result := operations.DivideBy2313(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2314(t *testing.T) {
	result := operations.DivideBy2314(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2315(t *testing.T) {
	result := operations.DivideBy2315(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2316(t *testing.T) {
	result := operations.DivideBy2316(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2317(t *testing.T) {
	result := operations.DivideBy2317(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2318(t *testing.T) {
	result := operations.DivideBy2318(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2319(t *testing.T) {
	result := operations.DivideBy2319(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2320(t *testing.T) {
	result := operations.DivideBy2320(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2321(t *testing.T) {
	result := operations.DivideBy2321(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2322(t *testing.T) {
	result := operations.DivideBy2322(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2323(t *testing.T) {
	result := operations.DivideBy2323(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2324(t *testing.T) {
	result := operations.DivideBy2324(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2325(t *testing.T) {
	result := operations.DivideBy2325(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2326(t *testing.T) {
	result := operations.DivideBy2326(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2327(t *testing.T) {
	result := operations.DivideBy2327(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2328(t *testing.T) {
	result := operations.DivideBy2328(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2329(t *testing.T) {
	result := operations.DivideBy2329(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2330(t *testing.T) {
	result := operations.DivideBy2330(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2331(t *testing.T) {
	result := operations.DivideBy2331(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2332(t *testing.T) {
	result := operations.DivideBy2332(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2333(t *testing.T) {
	result := operations.DivideBy2333(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2334(t *testing.T) {
	result := operations.DivideBy2334(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2335(t *testing.T) {
	result := operations.DivideBy2335(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2336(t *testing.T) {
	result := operations.DivideBy2336(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2337(t *testing.T) {
	result := operations.DivideBy2337(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2338(t *testing.T) {
	result := operations.DivideBy2338(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2339(t *testing.T) {
	result := operations.DivideBy2339(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2340(t *testing.T) {
	result := operations.DivideBy2340(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2341(t *testing.T) {
	result := operations.DivideBy2341(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2342(t *testing.T) {
	result := operations.DivideBy2342(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2343(t *testing.T) {
	result := operations.DivideBy2343(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2344(t *testing.T) {
	result := operations.DivideBy2344(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2345(t *testing.T) {
	result := operations.DivideBy2345(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2346(t *testing.T) {
	result := operations.DivideBy2346(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2347(t *testing.T) {
	result := operations.DivideBy2347(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2348(t *testing.T) {
	result := operations.DivideBy2348(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2349(t *testing.T) {
	result := operations.DivideBy2349(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2350(t *testing.T) {
	result := operations.DivideBy2350(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2351(t *testing.T) {
	result := operations.DivideBy2351(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2352(t *testing.T) {
	result := operations.DivideBy2352(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2353(t *testing.T) {
	result := operations.DivideBy2353(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2354(t *testing.T) {
	result := operations.DivideBy2354(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2355(t *testing.T) {
	result := operations.DivideBy2355(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2356(t *testing.T) {
	result := operations.DivideBy2356(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2357(t *testing.T) {
	result := operations.DivideBy2357(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2358(t *testing.T) {
	result := operations.DivideBy2358(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2359(t *testing.T) {
	result := operations.DivideBy2359(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2360(t *testing.T) {
	result := operations.DivideBy2360(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2361(t *testing.T) {
	result := operations.DivideBy2361(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2362(t *testing.T) {
	result := operations.DivideBy2362(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2363(t *testing.T) {
	result := operations.DivideBy2363(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2364(t *testing.T) {
	result := operations.DivideBy2364(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2365(t *testing.T) {
	result := operations.DivideBy2365(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2366(t *testing.T) {
	result := operations.DivideBy2366(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2367(t *testing.T) {
	result := operations.DivideBy2367(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2368(t *testing.T) {
	result := operations.DivideBy2368(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2369(t *testing.T) {
	result := operations.DivideBy2369(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2370(t *testing.T) {
	result := operations.DivideBy2370(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2371(t *testing.T) {
	result := operations.DivideBy2371(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2372(t *testing.T) {
	result := operations.DivideBy2372(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2373(t *testing.T) {
	result := operations.DivideBy2373(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2374(t *testing.T) {
	result := operations.DivideBy2374(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2375(t *testing.T) {
	result := operations.DivideBy2375(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2376(t *testing.T) {
	result := operations.DivideBy2376(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2377(t *testing.T) {
	result := operations.DivideBy2377(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2378(t *testing.T) {
	result := operations.DivideBy2378(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2379(t *testing.T) {
	result := operations.DivideBy2379(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2380(t *testing.T) {
	result := operations.DivideBy2380(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2381(t *testing.T) {
	result := operations.DivideBy2381(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2382(t *testing.T) {
	result := operations.DivideBy2382(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2383(t *testing.T) {
	result := operations.DivideBy2383(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2384(t *testing.T) {
	result := operations.DivideBy2384(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2385(t *testing.T) {
	result := operations.DivideBy2385(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2386(t *testing.T) {
	result := operations.DivideBy2386(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2387(t *testing.T) {
	result := operations.DivideBy2387(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2388(t *testing.T) {
	result := operations.DivideBy2388(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2389(t *testing.T) {
	result := operations.DivideBy2389(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2390(t *testing.T) {
	result := operations.DivideBy2390(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2391(t *testing.T) {
	result := operations.DivideBy2391(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2392(t *testing.T) {
	result := operations.DivideBy2392(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2393(t *testing.T) {
	result := operations.DivideBy2393(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2394(t *testing.T) {
	result := operations.DivideBy2394(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2395(t *testing.T) {
	result := operations.DivideBy2395(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2396(t *testing.T) {
	result := operations.DivideBy2396(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2397(t *testing.T) {
	result := operations.DivideBy2397(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2398(t *testing.T) {
	result := operations.DivideBy2398(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2399(t *testing.T) {
	result := operations.DivideBy2399(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2400(t *testing.T) {
	result := operations.DivideBy2400(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2401(t *testing.T) {
	result := operations.DivideBy2401(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2402(t *testing.T) {
	result := operations.DivideBy2402(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2403(t *testing.T) {
	result := operations.DivideBy2403(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2404(t *testing.T) {
	result := operations.DivideBy2404(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2405(t *testing.T) {
	result := operations.DivideBy2405(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2406(t *testing.T) {
	result := operations.DivideBy2406(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2407(t *testing.T) {
	result := operations.DivideBy2407(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2408(t *testing.T) {
	result := operations.DivideBy2408(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2409(t *testing.T) {
	result := operations.DivideBy2409(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2410(t *testing.T) {
	result := operations.DivideBy2410(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2411(t *testing.T) {
	result := operations.DivideBy2411(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2412(t *testing.T) {
	result := operations.DivideBy2412(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2413(t *testing.T) {
	result := operations.DivideBy2413(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2414(t *testing.T) {
	result := operations.DivideBy2414(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2415(t *testing.T) {
	result := operations.DivideBy2415(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2416(t *testing.T) {
	result := operations.DivideBy2416(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2417(t *testing.T) {
	result := operations.DivideBy2417(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2418(t *testing.T) {
	result := operations.DivideBy2418(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2419(t *testing.T) {
	result := operations.DivideBy2419(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2420(t *testing.T) {
	result := operations.DivideBy2420(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2421(t *testing.T) {
	result := operations.DivideBy2421(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2422(t *testing.T) {
	result := operations.DivideBy2422(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2423(t *testing.T) {
	result := operations.DivideBy2423(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2424(t *testing.T) {
	result := operations.DivideBy2424(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2425(t *testing.T) {
	result := operations.DivideBy2425(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2426(t *testing.T) {
	result := operations.DivideBy2426(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2427(t *testing.T) {
	result := operations.DivideBy2427(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2428(t *testing.T) {
	result := operations.DivideBy2428(17000)
	
	if result != 7 {
		t.Errorf("Expected 7 but got %d", result)
	}
}

func TestDivideBy2429(t *testing.T) {
	result := operations.DivideBy2429(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2430(t *testing.T) {
	result := operations.DivideBy2430(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2431(t *testing.T) {
	result := operations.DivideBy2431(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2432(t *testing.T) {
	result := operations.DivideBy2432(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2433(t *testing.T) {
	result := operations.DivideBy2433(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2434(t *testing.T) {
	result := operations.DivideBy2434(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2435(t *testing.T) {
	result := operations.DivideBy2435(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2436(t *testing.T) {
	result := operations.DivideBy2436(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2437(t *testing.T) {
	result := operations.DivideBy2437(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2438(t *testing.T) {
	result := operations.DivideBy2438(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2439(t *testing.T) {
	result := operations.DivideBy2439(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2440(t *testing.T) {
	result := operations.DivideBy2440(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2441(t *testing.T) {
	result := operations.DivideBy2441(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2442(t *testing.T) {
	result := operations.DivideBy2442(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2443(t *testing.T) {
	result := operations.DivideBy2443(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2444(t *testing.T) {
	result := operations.DivideBy2444(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2445(t *testing.T) {
	result := operations.DivideBy2445(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2446(t *testing.T) {
	result := operations.DivideBy2446(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2447(t *testing.T) {
	result := operations.DivideBy2447(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2448(t *testing.T) {
	result := operations.DivideBy2448(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2449(t *testing.T) {
	result := operations.DivideBy2449(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2450(t *testing.T) {
	result := operations.DivideBy2450(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2451(t *testing.T) {
	result := operations.DivideBy2451(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2452(t *testing.T) {
	result := operations.DivideBy2452(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2453(t *testing.T) {
	result := operations.DivideBy2453(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2454(t *testing.T) {
	result := operations.DivideBy2454(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2455(t *testing.T) {
	result := operations.DivideBy2455(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2456(t *testing.T) {
	result := operations.DivideBy2456(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2457(t *testing.T) {
	result := operations.DivideBy2457(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2458(t *testing.T) {
	result := operations.DivideBy2458(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2459(t *testing.T) {
	result := operations.DivideBy2459(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2460(t *testing.T) {
	result := operations.DivideBy2460(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2461(t *testing.T) {
	result := operations.DivideBy2461(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2462(t *testing.T) {
	result := operations.DivideBy2462(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2463(t *testing.T) {
	result := operations.DivideBy2463(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2464(t *testing.T) {
	result := operations.DivideBy2464(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2465(t *testing.T) {
	result := operations.DivideBy2465(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2466(t *testing.T) {
	result := operations.DivideBy2466(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2467(t *testing.T) {
	result := operations.DivideBy2467(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2468(t *testing.T) {
	result := operations.DivideBy2468(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2469(t *testing.T) {
	result := operations.DivideBy2469(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2470(t *testing.T) {
	result := operations.DivideBy2470(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2471(t *testing.T) {
	result := operations.DivideBy2471(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2472(t *testing.T) {
	result := operations.DivideBy2472(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2473(t *testing.T) {
	result := operations.DivideBy2473(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2474(t *testing.T) {
	result := operations.DivideBy2474(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2475(t *testing.T) {
	result := operations.DivideBy2475(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2476(t *testing.T) {
	result := operations.DivideBy2476(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2477(t *testing.T) {
	result := operations.DivideBy2477(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2478(t *testing.T) {
	result := operations.DivideBy2478(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2479(t *testing.T) {
	result := operations.DivideBy2479(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2480(t *testing.T) {
	result := operations.DivideBy2480(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2481(t *testing.T) {
	result := operations.DivideBy2481(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2482(t *testing.T) {
	result := operations.DivideBy2482(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2483(t *testing.T) {
	result := operations.DivideBy2483(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2484(t *testing.T) {
	result := operations.DivideBy2484(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2485(t *testing.T) {
	result := operations.DivideBy2485(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2486(t *testing.T) {
	result := operations.DivideBy2486(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2487(t *testing.T) {
	result := operations.DivideBy2487(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2488(t *testing.T) {
	result := operations.DivideBy2488(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2489(t *testing.T) {
	result := operations.DivideBy2489(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2490(t *testing.T) {
	result := operations.DivideBy2490(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2491(t *testing.T) {
	result := operations.DivideBy2491(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2492(t *testing.T) {
	result := operations.DivideBy2492(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2493(t *testing.T) {
	result := operations.DivideBy2493(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2494(t *testing.T) {
	result := operations.DivideBy2494(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2495(t *testing.T) {
	result := operations.DivideBy2495(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2496(t *testing.T) {
	result := operations.DivideBy2496(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2497(t *testing.T) {
	result := operations.DivideBy2497(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2498(t *testing.T) {
	result := operations.DivideBy2498(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2499(t *testing.T) {
	result := operations.DivideBy2499(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2500(t *testing.T) {
	result := operations.DivideBy2500(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2501(t *testing.T) {
	result := operations.DivideBy2501(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2502(t *testing.T) {
	result := operations.DivideBy2502(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2503(t *testing.T) {
	result := operations.DivideBy2503(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2504(t *testing.T) {
	result := operations.DivideBy2504(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2505(t *testing.T) {
	result := operations.DivideBy2505(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2506(t *testing.T) {
	result := operations.DivideBy2506(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2507(t *testing.T) {
	result := operations.DivideBy2507(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2508(t *testing.T) {
	result := operations.DivideBy2508(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2509(t *testing.T) {
	result := operations.DivideBy2509(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2510(t *testing.T) {
	result := operations.DivideBy2510(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2511(t *testing.T) {
	result := operations.DivideBy2511(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2512(t *testing.T) {
	result := operations.DivideBy2512(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2513(t *testing.T) {
	result := operations.DivideBy2513(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2514(t *testing.T) {
	result := operations.DivideBy2514(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2515(t *testing.T) {
	result := operations.DivideBy2515(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2516(t *testing.T) {
	result := operations.DivideBy2516(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2517(t *testing.T) {
	result := operations.DivideBy2517(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2518(t *testing.T) {
	result := operations.DivideBy2518(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2519(t *testing.T) {
	result := operations.DivideBy2519(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2520(t *testing.T) {
	result := operations.DivideBy2520(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2521(t *testing.T) {
	result := operations.DivideBy2521(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2522(t *testing.T) {
	result := operations.DivideBy2522(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2523(t *testing.T) {
	result := operations.DivideBy2523(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2524(t *testing.T) {
	result := operations.DivideBy2524(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2525(t *testing.T) {
	result := operations.DivideBy2525(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2526(t *testing.T) {
	result := operations.DivideBy2526(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2527(t *testing.T) {
	result := operations.DivideBy2527(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2528(t *testing.T) {
	result := operations.DivideBy2528(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2529(t *testing.T) {
	result := operations.DivideBy2529(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2530(t *testing.T) {
	result := operations.DivideBy2530(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2531(t *testing.T) {
	result := operations.DivideBy2531(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2532(t *testing.T) {
	result := operations.DivideBy2532(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2533(t *testing.T) {
	result := operations.DivideBy2533(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2534(t *testing.T) {
	result := operations.DivideBy2534(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2535(t *testing.T) {
	result := operations.DivideBy2535(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2536(t *testing.T) {
	result := operations.DivideBy2536(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2537(t *testing.T) {
	result := operations.DivideBy2537(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2538(t *testing.T) {
	result := operations.DivideBy2538(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2539(t *testing.T) {
	result := operations.DivideBy2539(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2540(t *testing.T) {
	result := operations.DivideBy2540(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2541(t *testing.T) {
	result := operations.DivideBy2541(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2542(t *testing.T) {
	result := operations.DivideBy2542(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2543(t *testing.T) {
	result := operations.DivideBy2543(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2544(t *testing.T) {
	result := operations.DivideBy2544(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2545(t *testing.T) {
	result := operations.DivideBy2545(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2546(t *testing.T) {
	result := operations.DivideBy2546(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2547(t *testing.T) {
	result := operations.DivideBy2547(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2548(t *testing.T) {
	result := operations.DivideBy2548(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2549(t *testing.T) {
	result := operations.DivideBy2549(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2550(t *testing.T) {
	result := operations.DivideBy2550(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2551(t *testing.T) {
	result := operations.DivideBy2551(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2552(t *testing.T) {
	result := operations.DivideBy2552(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2553(t *testing.T) {
	result := operations.DivideBy2553(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2554(t *testing.T) {
	result := operations.DivideBy2554(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2555(t *testing.T) {
	result := operations.DivideBy2555(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2556(t *testing.T) {
	result := operations.DivideBy2556(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2557(t *testing.T) {
	result := operations.DivideBy2557(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2558(t *testing.T) {
	result := operations.DivideBy2558(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2559(t *testing.T) {
	result := operations.DivideBy2559(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2560(t *testing.T) {
	result := operations.DivideBy2560(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2561(t *testing.T) {
	result := operations.DivideBy2561(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2562(t *testing.T) {
	result := operations.DivideBy2562(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2563(t *testing.T) {
	result := operations.DivideBy2563(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2564(t *testing.T) {
	result := operations.DivideBy2564(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2565(t *testing.T) {
	result := operations.DivideBy2565(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2566(t *testing.T) {
	result := operations.DivideBy2566(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2567(t *testing.T) {
	result := operations.DivideBy2567(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2568(t *testing.T) {
	result := operations.DivideBy2568(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2569(t *testing.T) {
	result := operations.DivideBy2569(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2570(t *testing.T) {
	result := operations.DivideBy2570(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2571(t *testing.T) {
	result := operations.DivideBy2571(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2572(t *testing.T) {
	result := operations.DivideBy2572(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2573(t *testing.T) {
	result := operations.DivideBy2573(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2574(t *testing.T) {
	result := operations.DivideBy2574(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2575(t *testing.T) {
	result := operations.DivideBy2575(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2576(t *testing.T) {
	result := operations.DivideBy2576(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2577(t *testing.T) {
	result := operations.DivideBy2577(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2578(t *testing.T) {
	result := operations.DivideBy2578(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2579(t *testing.T) {
	result := operations.DivideBy2579(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2580(t *testing.T) {
	result := operations.DivideBy2580(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2581(t *testing.T) {
	result := operations.DivideBy2581(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2582(t *testing.T) {
	result := operations.DivideBy2582(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2583(t *testing.T) {
	result := operations.DivideBy2583(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2584(t *testing.T) {
	result := operations.DivideBy2584(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2585(t *testing.T) {
	result := operations.DivideBy2585(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2586(t *testing.T) {
	result := operations.DivideBy2586(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2587(t *testing.T) {
	result := operations.DivideBy2587(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2588(t *testing.T) {
	result := operations.DivideBy2588(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2589(t *testing.T) {
	result := operations.DivideBy2589(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2590(t *testing.T) {
	result := operations.DivideBy2590(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2591(t *testing.T) {
	result := operations.DivideBy2591(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2592(t *testing.T) {
	result := operations.DivideBy2592(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2593(t *testing.T) {
	result := operations.DivideBy2593(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2594(t *testing.T) {
	result := operations.DivideBy2594(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2595(t *testing.T) {
	result := operations.DivideBy2595(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2596(t *testing.T) {
	result := operations.DivideBy2596(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2597(t *testing.T) {
	result := operations.DivideBy2597(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2598(t *testing.T) {
	result := operations.DivideBy2598(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2599(t *testing.T) {
	result := operations.DivideBy2599(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2600(t *testing.T) {
	result := operations.DivideBy2600(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2601(t *testing.T) {
	result := operations.DivideBy2601(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2602(t *testing.T) {
	result := operations.DivideBy2602(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2603(t *testing.T) {
	result := operations.DivideBy2603(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2604(t *testing.T) {
	result := operations.DivideBy2604(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2605(t *testing.T) {
	result := operations.DivideBy2605(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2606(t *testing.T) {
	result := operations.DivideBy2606(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2607(t *testing.T) {
	result := operations.DivideBy2607(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2608(t *testing.T) {
	result := operations.DivideBy2608(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2609(t *testing.T) {
	result := operations.DivideBy2609(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2610(t *testing.T) {
	result := operations.DivideBy2610(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2611(t *testing.T) {
	result := operations.DivideBy2611(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2612(t *testing.T) {
	result := operations.DivideBy2612(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2613(t *testing.T) {
	result := operations.DivideBy2613(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2614(t *testing.T) {
	result := operations.DivideBy2614(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2615(t *testing.T) {
	result := operations.DivideBy2615(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2616(t *testing.T) {
	result := operations.DivideBy2616(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2617(t *testing.T) {
	result := operations.DivideBy2617(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2618(t *testing.T) {
	result := operations.DivideBy2618(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2619(t *testing.T) {
	result := operations.DivideBy2619(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2620(t *testing.T) {
	result := operations.DivideBy2620(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2621(t *testing.T) {
	result := operations.DivideBy2621(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2622(t *testing.T) {
	result := operations.DivideBy2622(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2623(t *testing.T) {
	result := operations.DivideBy2623(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2624(t *testing.T) {
	result := operations.DivideBy2624(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2625(t *testing.T) {
	result := operations.DivideBy2625(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2626(t *testing.T) {
	result := operations.DivideBy2626(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2627(t *testing.T) {
	result := operations.DivideBy2627(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2628(t *testing.T) {
	result := operations.DivideBy2628(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2629(t *testing.T) {
	result := operations.DivideBy2629(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2630(t *testing.T) {
	result := operations.DivideBy2630(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2631(t *testing.T) {
	result := operations.DivideBy2631(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2632(t *testing.T) {
	result := operations.DivideBy2632(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2633(t *testing.T) {
	result := operations.DivideBy2633(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2634(t *testing.T) {
	result := operations.DivideBy2634(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2635(t *testing.T) {
	result := operations.DivideBy2635(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2636(t *testing.T) {
	result := operations.DivideBy2636(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2637(t *testing.T) {
	result := operations.DivideBy2637(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2638(t *testing.T) {
	result := operations.DivideBy2638(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2639(t *testing.T) {
	result := operations.DivideBy2639(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2640(t *testing.T) {
	result := operations.DivideBy2640(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2641(t *testing.T) {
	result := operations.DivideBy2641(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2642(t *testing.T) {
	result := operations.DivideBy2642(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2643(t *testing.T) {
	result := operations.DivideBy2643(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2644(t *testing.T) {
	result := operations.DivideBy2644(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2645(t *testing.T) {
	result := operations.DivideBy2645(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2646(t *testing.T) {
	result := operations.DivideBy2646(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2647(t *testing.T) {
	result := operations.DivideBy2647(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2648(t *testing.T) {
	result := operations.DivideBy2648(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2649(t *testing.T) {
	result := operations.DivideBy2649(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2650(t *testing.T) {
	result := operations.DivideBy2650(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2651(t *testing.T) {
	result := operations.DivideBy2651(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2652(t *testing.T) {
	result := operations.DivideBy2652(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2653(t *testing.T) {
	result := operations.DivideBy2653(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2654(t *testing.T) {
	result := operations.DivideBy2654(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2655(t *testing.T) {
	result := operations.DivideBy2655(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2656(t *testing.T) {
	result := operations.DivideBy2656(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2657(t *testing.T) {
	result := operations.DivideBy2657(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2658(t *testing.T) {
	result := operations.DivideBy2658(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2659(t *testing.T) {
	result := operations.DivideBy2659(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2660(t *testing.T) {
	result := operations.DivideBy2660(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2661(t *testing.T) {
	result := operations.DivideBy2661(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2662(t *testing.T) {
	result := operations.DivideBy2662(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2663(t *testing.T) {
	result := operations.DivideBy2663(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2664(t *testing.T) {
	result := operations.DivideBy2664(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2665(t *testing.T) {
	result := operations.DivideBy2665(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2666(t *testing.T) {
	result := operations.DivideBy2666(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2667(t *testing.T) {
	result := operations.DivideBy2667(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2668(t *testing.T) {
	result := operations.DivideBy2668(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2669(t *testing.T) {
	result := operations.DivideBy2669(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2670(t *testing.T) {
	result := operations.DivideBy2670(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2671(t *testing.T) {
	result := operations.DivideBy2671(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2672(t *testing.T) {
	result := operations.DivideBy2672(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2673(t *testing.T) {
	result := operations.DivideBy2673(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2674(t *testing.T) {
	result := operations.DivideBy2674(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2675(t *testing.T) {
	result := operations.DivideBy2675(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2676(t *testing.T) {
	result := operations.DivideBy2676(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2677(t *testing.T) {
	result := operations.DivideBy2677(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2678(t *testing.T) {
	result := operations.DivideBy2678(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2679(t *testing.T) {
	result := operations.DivideBy2679(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2680(t *testing.T) {
	result := operations.DivideBy2680(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2681(t *testing.T) {
	result := operations.DivideBy2681(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2682(t *testing.T) {
	result := operations.DivideBy2682(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2683(t *testing.T) {
	result := operations.DivideBy2683(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2684(t *testing.T) {
	result := operations.DivideBy2684(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2685(t *testing.T) {
	result := operations.DivideBy2685(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2686(t *testing.T) {
	result := operations.DivideBy2686(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2687(t *testing.T) {
	result := operations.DivideBy2687(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2688(t *testing.T) {
	result := operations.DivideBy2688(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2689(t *testing.T) {
	result := operations.DivideBy2689(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2690(t *testing.T) {
	result := operations.DivideBy2690(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2691(t *testing.T) {
	result := operations.DivideBy2691(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2692(t *testing.T) {
	result := operations.DivideBy2692(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2693(t *testing.T) {
	result := operations.DivideBy2693(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2694(t *testing.T) {
	result := operations.DivideBy2694(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2695(t *testing.T) {
	result := operations.DivideBy2695(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2696(t *testing.T) {
	result := operations.DivideBy2696(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2697(t *testing.T) {
	result := operations.DivideBy2697(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2698(t *testing.T) {
	result := operations.DivideBy2698(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2699(t *testing.T) {
	result := operations.DivideBy2699(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2700(t *testing.T) {
	result := operations.DivideBy2700(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2701(t *testing.T) {
	result := operations.DivideBy2701(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2702(t *testing.T) {
	result := operations.DivideBy2702(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2703(t *testing.T) {
	result := operations.DivideBy2703(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2704(t *testing.T) {
	result := operations.DivideBy2704(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2705(t *testing.T) {
	result := operations.DivideBy2705(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2706(t *testing.T) {
	result := operations.DivideBy2706(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2707(t *testing.T) {
	result := operations.DivideBy2707(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2708(t *testing.T) {
	result := operations.DivideBy2708(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2709(t *testing.T) {
	result := operations.DivideBy2709(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2710(t *testing.T) {
	result := operations.DivideBy2710(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2711(t *testing.T) {
	result := operations.DivideBy2711(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2712(t *testing.T) {
	result := operations.DivideBy2712(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2713(t *testing.T) {
	result := operations.DivideBy2713(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2714(t *testing.T) {
	result := operations.DivideBy2714(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2715(t *testing.T) {
	result := operations.DivideBy2715(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2716(t *testing.T) {
	result := operations.DivideBy2716(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2717(t *testing.T) {
	result := operations.DivideBy2717(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2718(t *testing.T) {
	result := operations.DivideBy2718(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2719(t *testing.T) {
	result := operations.DivideBy2719(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2720(t *testing.T) {
	result := operations.DivideBy2720(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2721(t *testing.T) {
	result := operations.DivideBy2721(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2722(t *testing.T) {
	result := operations.DivideBy2722(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2723(t *testing.T) {
	result := operations.DivideBy2723(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2724(t *testing.T) {
	result := operations.DivideBy2724(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2725(t *testing.T) {
	result := operations.DivideBy2725(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2726(t *testing.T) {
	result := operations.DivideBy2726(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2727(t *testing.T) {
	result := operations.DivideBy2727(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2728(t *testing.T) {
	result := operations.DivideBy2728(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2729(t *testing.T) {
	result := operations.DivideBy2729(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2730(t *testing.T) {
	result := operations.DivideBy2730(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2731(t *testing.T) {
	result := operations.DivideBy2731(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2732(t *testing.T) {
	result := operations.DivideBy2732(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2733(t *testing.T) {
	result := operations.DivideBy2733(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2734(t *testing.T) {
	result := operations.DivideBy2734(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2735(t *testing.T) {
	result := operations.DivideBy2735(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2736(t *testing.T) {
	result := operations.DivideBy2736(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2737(t *testing.T) {
	result := operations.DivideBy2737(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2738(t *testing.T) {
	result := operations.DivideBy2738(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2739(t *testing.T) {
	result := operations.DivideBy2739(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2740(t *testing.T) {
	result := operations.DivideBy2740(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2741(t *testing.T) {
	result := operations.DivideBy2741(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2742(t *testing.T) {
	result := operations.DivideBy2742(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2743(t *testing.T) {
	result := operations.DivideBy2743(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2744(t *testing.T) {
	result := operations.DivideBy2744(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2745(t *testing.T) {
	result := operations.DivideBy2745(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2746(t *testing.T) {
	result := operations.DivideBy2746(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2747(t *testing.T) {
	result := operations.DivideBy2747(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2748(t *testing.T) {
	result := operations.DivideBy2748(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2749(t *testing.T) {
	result := operations.DivideBy2749(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2750(t *testing.T) {
	result := operations.DivideBy2750(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2751(t *testing.T) {
	result := operations.DivideBy2751(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2752(t *testing.T) {
	result := operations.DivideBy2752(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2753(t *testing.T) {
	result := operations.DivideBy2753(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2754(t *testing.T) {
	result := operations.DivideBy2754(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2755(t *testing.T) {
	result := operations.DivideBy2755(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2756(t *testing.T) {
	result := operations.DivideBy2756(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2757(t *testing.T) {
	result := operations.DivideBy2757(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2758(t *testing.T) {
	result := operations.DivideBy2758(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2759(t *testing.T) {
	result := operations.DivideBy2759(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2760(t *testing.T) {
	result := operations.DivideBy2760(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2761(t *testing.T) {
	result := operations.DivideBy2761(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2762(t *testing.T) {
	result := operations.DivideBy2762(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2763(t *testing.T) {
	result := operations.DivideBy2763(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2764(t *testing.T) {
	result := operations.DivideBy2764(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2765(t *testing.T) {
	result := operations.DivideBy2765(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2766(t *testing.T) {
	result := operations.DivideBy2766(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2767(t *testing.T) {
	result := operations.DivideBy2767(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2768(t *testing.T) {
	result := operations.DivideBy2768(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2769(t *testing.T) {
	result := operations.DivideBy2769(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2770(t *testing.T) {
	result := operations.DivideBy2770(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2771(t *testing.T) {
	result := operations.DivideBy2771(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2772(t *testing.T) {
	result := operations.DivideBy2772(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2773(t *testing.T) {
	result := operations.DivideBy2773(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2774(t *testing.T) {
	result := operations.DivideBy2774(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2775(t *testing.T) {
	result := operations.DivideBy2775(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2776(t *testing.T) {
	result := operations.DivideBy2776(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2777(t *testing.T) {
	result := operations.DivideBy2777(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2778(t *testing.T) {
	result := operations.DivideBy2778(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2779(t *testing.T) {
	result := operations.DivideBy2779(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2780(t *testing.T) {
	result := operations.DivideBy2780(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2781(t *testing.T) {
	result := operations.DivideBy2781(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2782(t *testing.T) {
	result := operations.DivideBy2782(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2783(t *testing.T) {
	result := operations.DivideBy2783(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2784(t *testing.T) {
	result := operations.DivideBy2784(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2785(t *testing.T) {
	result := operations.DivideBy2785(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2786(t *testing.T) {
	result := operations.DivideBy2786(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2787(t *testing.T) {
	result := operations.DivideBy2787(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2788(t *testing.T) {
	result := operations.DivideBy2788(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2789(t *testing.T) {
	result := operations.DivideBy2789(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2790(t *testing.T) {
	result := operations.DivideBy2790(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2791(t *testing.T) {
	result := operations.DivideBy2791(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2792(t *testing.T) {
	result := operations.DivideBy2792(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2793(t *testing.T) {
	result := operations.DivideBy2793(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2794(t *testing.T) {
	result := operations.DivideBy2794(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2795(t *testing.T) {
	result := operations.DivideBy2795(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2796(t *testing.T) {
	result := operations.DivideBy2796(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2797(t *testing.T) {
	result := operations.DivideBy2797(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2798(t *testing.T) {
	result := operations.DivideBy2798(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2799(t *testing.T) {
	result := operations.DivideBy2799(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2800(t *testing.T) {
	result := operations.DivideBy2800(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2801(t *testing.T) {
	result := operations.DivideBy2801(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2802(t *testing.T) {
	result := operations.DivideBy2802(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2803(t *testing.T) {
	result := operations.DivideBy2803(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2804(t *testing.T) {
	result := operations.DivideBy2804(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2805(t *testing.T) {
	result := operations.DivideBy2805(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2806(t *testing.T) {
	result := operations.DivideBy2806(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2807(t *testing.T) {
	result := operations.DivideBy2807(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2808(t *testing.T) {
	result := operations.DivideBy2808(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2809(t *testing.T) {
	result := operations.DivideBy2809(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2810(t *testing.T) {
	result := operations.DivideBy2810(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2811(t *testing.T) {
	result := operations.DivideBy2811(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2812(t *testing.T) {
	result := operations.DivideBy2812(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2813(t *testing.T) {
	result := operations.DivideBy2813(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2814(t *testing.T) {
	result := operations.DivideBy2814(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2815(t *testing.T) {
	result := operations.DivideBy2815(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2816(t *testing.T) {
	result := operations.DivideBy2816(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2817(t *testing.T) {
	result := operations.DivideBy2817(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2818(t *testing.T) {
	result := operations.DivideBy2818(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2819(t *testing.T) {
	result := operations.DivideBy2819(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2820(t *testing.T) {
	result := operations.DivideBy2820(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2821(t *testing.T) {
	result := operations.DivideBy2821(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2822(t *testing.T) {
	result := operations.DivideBy2822(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2823(t *testing.T) {
	result := operations.DivideBy2823(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2824(t *testing.T) {
	result := operations.DivideBy2824(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2825(t *testing.T) {
	result := operations.DivideBy2825(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2826(t *testing.T) {
	result := operations.DivideBy2826(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2827(t *testing.T) {
	result := operations.DivideBy2827(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2828(t *testing.T) {
	result := operations.DivideBy2828(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2829(t *testing.T) {
	result := operations.DivideBy2829(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2830(t *testing.T) {
	result := operations.DivideBy2830(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2831(t *testing.T) {
	result := operations.DivideBy2831(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2832(t *testing.T) {
	result := operations.DivideBy2832(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2833(t *testing.T) {
	result := operations.DivideBy2833(17000)
	
	if result != 6 {
		t.Errorf("Expected 6 but got %d", result)
	}
}

func TestDivideBy2834(t *testing.T) {
	result := operations.DivideBy2834(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2835(t *testing.T) {
	result := operations.DivideBy2835(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2836(t *testing.T) {
	result := operations.DivideBy2836(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2837(t *testing.T) {
	result := operations.DivideBy2837(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2838(t *testing.T) {
	result := operations.DivideBy2838(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2839(t *testing.T) {
	result := operations.DivideBy2839(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2840(t *testing.T) {
	result := operations.DivideBy2840(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2841(t *testing.T) {
	result := operations.DivideBy2841(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2842(t *testing.T) {
	result := operations.DivideBy2842(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2843(t *testing.T) {
	result := operations.DivideBy2843(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2844(t *testing.T) {
	result := operations.DivideBy2844(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2845(t *testing.T) {
	result := operations.DivideBy2845(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2846(t *testing.T) {
	result := operations.DivideBy2846(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2847(t *testing.T) {
	result := operations.DivideBy2847(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2848(t *testing.T) {
	result := operations.DivideBy2848(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2849(t *testing.T) {
	result := operations.DivideBy2849(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2850(t *testing.T) {
	result := operations.DivideBy2850(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2851(t *testing.T) {
	result := operations.DivideBy2851(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2852(t *testing.T) {
	result := operations.DivideBy2852(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2853(t *testing.T) {
	result := operations.DivideBy2853(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2854(t *testing.T) {
	result := operations.DivideBy2854(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2855(t *testing.T) {
	result := operations.DivideBy2855(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2856(t *testing.T) {
	result := operations.DivideBy2856(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2857(t *testing.T) {
	result := operations.DivideBy2857(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2858(t *testing.T) {
	result := operations.DivideBy2858(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2859(t *testing.T) {
	result := operations.DivideBy2859(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2860(t *testing.T) {
	result := operations.DivideBy2860(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2861(t *testing.T) {
	result := operations.DivideBy2861(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2862(t *testing.T) {
	result := operations.DivideBy2862(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2863(t *testing.T) {
	result := operations.DivideBy2863(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2864(t *testing.T) {
	result := operations.DivideBy2864(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2865(t *testing.T) {
	result := operations.DivideBy2865(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2866(t *testing.T) {
	result := operations.DivideBy2866(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2867(t *testing.T) {
	result := operations.DivideBy2867(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2868(t *testing.T) {
	result := operations.DivideBy2868(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2869(t *testing.T) {
	result := operations.DivideBy2869(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2870(t *testing.T) {
	result := operations.DivideBy2870(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2871(t *testing.T) {
	result := operations.DivideBy2871(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2872(t *testing.T) {
	result := operations.DivideBy2872(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2873(t *testing.T) {
	result := operations.DivideBy2873(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2874(t *testing.T) {
	result := operations.DivideBy2874(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2875(t *testing.T) {
	result := operations.DivideBy2875(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2876(t *testing.T) {
	result := operations.DivideBy2876(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2877(t *testing.T) {
	result := operations.DivideBy2877(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2878(t *testing.T) {
	result := operations.DivideBy2878(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2879(t *testing.T) {
	result := operations.DivideBy2879(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2880(t *testing.T) {
	result := operations.DivideBy2880(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2881(t *testing.T) {
	result := operations.DivideBy2881(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2882(t *testing.T) {
	result := operations.DivideBy2882(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2883(t *testing.T) {
	result := operations.DivideBy2883(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2884(t *testing.T) {
	result := operations.DivideBy2884(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2885(t *testing.T) {
	result := operations.DivideBy2885(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2886(t *testing.T) {
	result := operations.DivideBy2886(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2887(t *testing.T) {
	result := operations.DivideBy2887(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2888(t *testing.T) {
	result := operations.DivideBy2888(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2889(t *testing.T) {
	result := operations.DivideBy2889(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2890(t *testing.T) {
	result := operations.DivideBy2890(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2891(t *testing.T) {
	result := operations.DivideBy2891(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2892(t *testing.T) {
	result := operations.DivideBy2892(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2893(t *testing.T) {
	result := operations.DivideBy2893(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2894(t *testing.T) {
	result := operations.DivideBy2894(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2895(t *testing.T) {
	result := operations.DivideBy2895(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2896(t *testing.T) {
	result := operations.DivideBy2896(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2897(t *testing.T) {
	result := operations.DivideBy2897(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2898(t *testing.T) {
	result := operations.DivideBy2898(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2899(t *testing.T) {
	result := operations.DivideBy2899(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2900(t *testing.T) {
	result := operations.DivideBy2900(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2901(t *testing.T) {
	result := operations.DivideBy2901(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2902(t *testing.T) {
	result := operations.DivideBy2902(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2903(t *testing.T) {
	result := operations.DivideBy2903(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2904(t *testing.T) {
	result := operations.DivideBy2904(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2905(t *testing.T) {
	result := operations.DivideBy2905(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2906(t *testing.T) {
	result := operations.DivideBy2906(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2907(t *testing.T) {
	result := operations.DivideBy2907(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2908(t *testing.T) {
	result := operations.DivideBy2908(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2909(t *testing.T) {
	result := operations.DivideBy2909(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2910(t *testing.T) {
	result := operations.DivideBy2910(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2911(t *testing.T) {
	result := operations.DivideBy2911(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2912(t *testing.T) {
	result := operations.DivideBy2912(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2913(t *testing.T) {
	result := operations.DivideBy2913(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2914(t *testing.T) {
	result := operations.DivideBy2914(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2915(t *testing.T) {
	result := operations.DivideBy2915(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2916(t *testing.T) {
	result := operations.DivideBy2916(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2917(t *testing.T) {
	result := operations.DivideBy2917(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2918(t *testing.T) {
	result := operations.DivideBy2918(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2919(t *testing.T) {
	result := operations.DivideBy2919(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2920(t *testing.T) {
	result := operations.DivideBy2920(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2921(t *testing.T) {
	result := operations.DivideBy2921(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2922(t *testing.T) {
	result := operations.DivideBy2922(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2923(t *testing.T) {
	result := operations.DivideBy2923(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2924(t *testing.T) {
	result := operations.DivideBy2924(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2925(t *testing.T) {
	result := operations.DivideBy2925(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2926(t *testing.T) {
	result := operations.DivideBy2926(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2927(t *testing.T) {
	result := operations.DivideBy2927(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2928(t *testing.T) {
	result := operations.DivideBy2928(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2929(t *testing.T) {
	result := operations.DivideBy2929(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2930(t *testing.T) {
	result := operations.DivideBy2930(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2931(t *testing.T) {
	result := operations.DivideBy2931(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2932(t *testing.T) {
	result := operations.DivideBy2932(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2933(t *testing.T) {
	result := operations.DivideBy2933(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2934(t *testing.T) {
	result := operations.DivideBy2934(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2935(t *testing.T) {
	result := operations.DivideBy2935(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2936(t *testing.T) {
	result := operations.DivideBy2936(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2937(t *testing.T) {
	result := operations.DivideBy2937(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2938(t *testing.T) {
	result := operations.DivideBy2938(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2939(t *testing.T) {
	result := operations.DivideBy2939(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2940(t *testing.T) {
	result := operations.DivideBy2940(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2941(t *testing.T) {
	result := operations.DivideBy2941(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2942(t *testing.T) {
	result := operations.DivideBy2942(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2943(t *testing.T) {
	result := operations.DivideBy2943(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2944(t *testing.T) {
	result := operations.DivideBy2944(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2945(t *testing.T) {
	result := operations.DivideBy2945(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2946(t *testing.T) {
	result := operations.DivideBy2946(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2947(t *testing.T) {
	result := operations.DivideBy2947(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2948(t *testing.T) {
	result := operations.DivideBy2948(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2949(t *testing.T) {
	result := operations.DivideBy2949(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2950(t *testing.T) {
	result := operations.DivideBy2950(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2951(t *testing.T) {
	result := operations.DivideBy2951(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2952(t *testing.T) {
	result := operations.DivideBy2952(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2953(t *testing.T) {
	result := operations.DivideBy2953(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2954(t *testing.T) {
	result := operations.DivideBy2954(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2955(t *testing.T) {
	result := operations.DivideBy2955(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2956(t *testing.T) {
	result := operations.DivideBy2956(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2957(t *testing.T) {
	result := operations.DivideBy2957(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2958(t *testing.T) {
	result := operations.DivideBy2958(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2959(t *testing.T) {
	result := operations.DivideBy2959(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2960(t *testing.T) {
	result := operations.DivideBy2960(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2961(t *testing.T) {
	result := operations.DivideBy2961(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2962(t *testing.T) {
	result := operations.DivideBy2962(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2963(t *testing.T) {
	result := operations.DivideBy2963(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2964(t *testing.T) {
	result := operations.DivideBy2964(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2965(t *testing.T) {
	result := operations.DivideBy2965(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2966(t *testing.T) {
	result := operations.DivideBy2966(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2967(t *testing.T) {
	result := operations.DivideBy2967(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2968(t *testing.T) {
	result := operations.DivideBy2968(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2969(t *testing.T) {
	result := operations.DivideBy2969(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2970(t *testing.T) {
	result := operations.DivideBy2970(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2971(t *testing.T) {
	result := operations.DivideBy2971(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2972(t *testing.T) {
	result := operations.DivideBy2972(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2973(t *testing.T) {
	result := operations.DivideBy2973(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2974(t *testing.T) {
	result := operations.DivideBy2974(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2975(t *testing.T) {
	result := operations.DivideBy2975(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2976(t *testing.T) {
	result := operations.DivideBy2976(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2977(t *testing.T) {
	result := operations.DivideBy2977(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2978(t *testing.T) {
	result := operations.DivideBy2978(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2979(t *testing.T) {
	result := operations.DivideBy2979(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2980(t *testing.T) {
	result := operations.DivideBy2980(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2981(t *testing.T) {
	result := operations.DivideBy2981(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2982(t *testing.T) {
	result := operations.DivideBy2982(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2983(t *testing.T) {
	result := operations.DivideBy2983(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2984(t *testing.T) {
	result := operations.DivideBy2984(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2985(t *testing.T) {
	result := operations.DivideBy2985(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2986(t *testing.T) {
	result := operations.DivideBy2986(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2987(t *testing.T) {
	result := operations.DivideBy2987(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2988(t *testing.T) {
	result := operations.DivideBy2988(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2989(t *testing.T) {
	result := operations.DivideBy2989(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2990(t *testing.T) {
	result := operations.DivideBy2990(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2991(t *testing.T) {
	result := operations.DivideBy2991(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2992(t *testing.T) {
	result := operations.DivideBy2992(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2993(t *testing.T) {
	result := operations.DivideBy2993(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2994(t *testing.T) {
	result := operations.DivideBy2994(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2995(t *testing.T) {
	result := operations.DivideBy2995(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2996(t *testing.T) {
	result := operations.DivideBy2996(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2997(t *testing.T) {
	result := operations.DivideBy2997(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2998(t *testing.T) {
	result := operations.DivideBy2998(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy2999(t *testing.T) {
	result := operations.DivideBy2999(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3000(t *testing.T) {
	result := operations.DivideBy3000(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3001(t *testing.T) {
	result := operations.DivideBy3001(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3002(t *testing.T) {
	result := operations.DivideBy3002(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3003(t *testing.T) {
	result := operations.DivideBy3003(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3004(t *testing.T) {
	result := operations.DivideBy3004(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3005(t *testing.T) {
	result := operations.DivideBy3005(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3006(t *testing.T) {
	result := operations.DivideBy3006(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3007(t *testing.T) {
	result := operations.DivideBy3007(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3008(t *testing.T) {
	result := operations.DivideBy3008(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3009(t *testing.T) {
	result := operations.DivideBy3009(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3010(t *testing.T) {
	result := operations.DivideBy3010(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3011(t *testing.T) {
	result := operations.DivideBy3011(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3012(t *testing.T) {
	result := operations.DivideBy3012(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3013(t *testing.T) {
	result := operations.DivideBy3013(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3014(t *testing.T) {
	result := operations.DivideBy3014(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3015(t *testing.T) {
	result := operations.DivideBy3015(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3016(t *testing.T) {
	result := operations.DivideBy3016(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3017(t *testing.T) {
	result := operations.DivideBy3017(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3018(t *testing.T) {
	result := operations.DivideBy3018(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3019(t *testing.T) {
	result := operations.DivideBy3019(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3020(t *testing.T) {
	result := operations.DivideBy3020(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3021(t *testing.T) {
	result := operations.DivideBy3021(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3022(t *testing.T) {
	result := operations.DivideBy3022(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3023(t *testing.T) {
	result := operations.DivideBy3023(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3024(t *testing.T) {
	result := operations.DivideBy3024(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3025(t *testing.T) {
	result := operations.DivideBy3025(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3026(t *testing.T) {
	result := operations.DivideBy3026(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3027(t *testing.T) {
	result := operations.DivideBy3027(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3028(t *testing.T) {
	result := operations.DivideBy3028(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3029(t *testing.T) {
	result := operations.DivideBy3029(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3030(t *testing.T) {
	result := operations.DivideBy3030(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3031(t *testing.T) {
	result := operations.DivideBy3031(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3032(t *testing.T) {
	result := operations.DivideBy3032(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3033(t *testing.T) {
	result := operations.DivideBy3033(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3034(t *testing.T) {
	result := operations.DivideBy3034(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3035(t *testing.T) {
	result := operations.DivideBy3035(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3036(t *testing.T) {
	result := operations.DivideBy3036(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3037(t *testing.T) {
	result := operations.DivideBy3037(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3038(t *testing.T) {
	result := operations.DivideBy3038(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3039(t *testing.T) {
	result := operations.DivideBy3039(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3040(t *testing.T) {
	result := operations.DivideBy3040(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3041(t *testing.T) {
	result := operations.DivideBy3041(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3042(t *testing.T) {
	result := operations.DivideBy3042(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3043(t *testing.T) {
	result := operations.DivideBy3043(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3044(t *testing.T) {
	result := operations.DivideBy3044(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3045(t *testing.T) {
	result := operations.DivideBy3045(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3046(t *testing.T) {
	result := operations.DivideBy3046(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3047(t *testing.T) {
	result := operations.DivideBy3047(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3048(t *testing.T) {
	result := operations.DivideBy3048(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3049(t *testing.T) {
	result := operations.DivideBy3049(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3050(t *testing.T) {
	result := operations.DivideBy3050(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3051(t *testing.T) {
	result := operations.DivideBy3051(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3052(t *testing.T) {
	result := operations.DivideBy3052(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3053(t *testing.T) {
	result := operations.DivideBy3053(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3054(t *testing.T) {
	result := operations.DivideBy3054(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3055(t *testing.T) {
	result := operations.DivideBy3055(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3056(t *testing.T) {
	result := operations.DivideBy3056(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3057(t *testing.T) {
	result := operations.DivideBy3057(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3058(t *testing.T) {
	result := operations.DivideBy3058(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3059(t *testing.T) {
	result := operations.DivideBy3059(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3060(t *testing.T) {
	result := operations.DivideBy3060(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3061(t *testing.T) {
	result := operations.DivideBy3061(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3062(t *testing.T) {
	result := operations.DivideBy3062(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3063(t *testing.T) {
	result := operations.DivideBy3063(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3064(t *testing.T) {
	result := operations.DivideBy3064(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3065(t *testing.T) {
	result := operations.DivideBy3065(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3066(t *testing.T) {
	result := operations.DivideBy3066(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3067(t *testing.T) {
	result := operations.DivideBy3067(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3068(t *testing.T) {
	result := operations.DivideBy3068(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3069(t *testing.T) {
	result := operations.DivideBy3069(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3070(t *testing.T) {
	result := operations.DivideBy3070(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3071(t *testing.T) {
	result := operations.DivideBy3071(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3072(t *testing.T) {
	result := operations.DivideBy3072(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3073(t *testing.T) {
	result := operations.DivideBy3073(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3074(t *testing.T) {
	result := operations.DivideBy3074(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3075(t *testing.T) {
	result := operations.DivideBy3075(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3076(t *testing.T) {
	result := operations.DivideBy3076(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3077(t *testing.T) {
	result := operations.DivideBy3077(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3078(t *testing.T) {
	result := operations.DivideBy3078(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3079(t *testing.T) {
	result := operations.DivideBy3079(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3080(t *testing.T) {
	result := operations.DivideBy3080(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3081(t *testing.T) {
	result := operations.DivideBy3081(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3082(t *testing.T) {
	result := operations.DivideBy3082(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3083(t *testing.T) {
	result := operations.DivideBy3083(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3084(t *testing.T) {
	result := operations.DivideBy3084(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3085(t *testing.T) {
	result := operations.DivideBy3085(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3086(t *testing.T) {
	result := operations.DivideBy3086(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3087(t *testing.T) {
	result := operations.DivideBy3087(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3088(t *testing.T) {
	result := operations.DivideBy3088(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3089(t *testing.T) {
	result := operations.DivideBy3089(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3090(t *testing.T) {
	result := operations.DivideBy3090(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3091(t *testing.T) {
	result := operations.DivideBy3091(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3092(t *testing.T) {
	result := operations.DivideBy3092(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3093(t *testing.T) {
	result := operations.DivideBy3093(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3094(t *testing.T) {
	result := operations.DivideBy3094(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3095(t *testing.T) {
	result := operations.DivideBy3095(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3096(t *testing.T) {
	result := operations.DivideBy3096(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3097(t *testing.T) {
	result := operations.DivideBy3097(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3098(t *testing.T) {
	result := operations.DivideBy3098(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3099(t *testing.T) {
	result := operations.DivideBy3099(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3100(t *testing.T) {
	result := operations.DivideBy3100(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3101(t *testing.T) {
	result := operations.DivideBy3101(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3102(t *testing.T) {
	result := operations.DivideBy3102(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3103(t *testing.T) {
	result := operations.DivideBy3103(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3104(t *testing.T) {
	result := operations.DivideBy3104(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3105(t *testing.T) {
	result := operations.DivideBy3105(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3106(t *testing.T) {
	result := operations.DivideBy3106(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3107(t *testing.T) {
	result := operations.DivideBy3107(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3108(t *testing.T) {
	result := operations.DivideBy3108(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3109(t *testing.T) {
	result := operations.DivideBy3109(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3110(t *testing.T) {
	result := operations.DivideBy3110(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3111(t *testing.T) {
	result := operations.DivideBy3111(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3112(t *testing.T) {
	result := operations.DivideBy3112(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3113(t *testing.T) {
	result := operations.DivideBy3113(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3114(t *testing.T) {
	result := operations.DivideBy3114(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3115(t *testing.T) {
	result := operations.DivideBy3115(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3116(t *testing.T) {
	result := operations.DivideBy3116(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3117(t *testing.T) {
	result := operations.DivideBy3117(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3118(t *testing.T) {
	result := operations.DivideBy3118(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3119(t *testing.T) {
	result := operations.DivideBy3119(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3120(t *testing.T) {
	result := operations.DivideBy3120(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3121(t *testing.T) {
	result := operations.DivideBy3121(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3122(t *testing.T) {
	result := operations.DivideBy3122(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3123(t *testing.T) {
	result := operations.DivideBy3123(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3124(t *testing.T) {
	result := operations.DivideBy3124(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3125(t *testing.T) {
	result := operations.DivideBy3125(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3126(t *testing.T) {
	result := operations.DivideBy3126(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3127(t *testing.T) {
	result := operations.DivideBy3127(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3128(t *testing.T) {
	result := operations.DivideBy3128(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3129(t *testing.T) {
	result := operations.DivideBy3129(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3130(t *testing.T) {
	result := operations.DivideBy3130(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3131(t *testing.T) {
	result := operations.DivideBy3131(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3132(t *testing.T) {
	result := operations.DivideBy3132(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3133(t *testing.T) {
	result := operations.DivideBy3133(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3134(t *testing.T) {
	result := operations.DivideBy3134(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3135(t *testing.T) {
	result := operations.DivideBy3135(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3136(t *testing.T) {
	result := operations.DivideBy3136(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3137(t *testing.T) {
	result := operations.DivideBy3137(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3138(t *testing.T) {
	result := operations.DivideBy3138(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3139(t *testing.T) {
	result := operations.DivideBy3139(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3140(t *testing.T) {
	result := operations.DivideBy3140(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3141(t *testing.T) {
	result := operations.DivideBy3141(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3142(t *testing.T) {
	result := operations.DivideBy3142(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3143(t *testing.T) {
	result := operations.DivideBy3143(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3144(t *testing.T) {
	result := operations.DivideBy3144(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3145(t *testing.T) {
	result := operations.DivideBy3145(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3146(t *testing.T) {
	result := operations.DivideBy3146(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3147(t *testing.T) {
	result := operations.DivideBy3147(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3148(t *testing.T) {
	result := operations.DivideBy3148(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3149(t *testing.T) {
	result := operations.DivideBy3149(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3150(t *testing.T) {
	result := operations.DivideBy3150(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3151(t *testing.T) {
	result := operations.DivideBy3151(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3152(t *testing.T) {
	result := operations.DivideBy3152(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3153(t *testing.T) {
	result := operations.DivideBy3153(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3154(t *testing.T) {
	result := operations.DivideBy3154(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3155(t *testing.T) {
	result := operations.DivideBy3155(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3156(t *testing.T) {
	result := operations.DivideBy3156(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3157(t *testing.T) {
	result := operations.DivideBy3157(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3158(t *testing.T) {
	result := operations.DivideBy3158(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3159(t *testing.T) {
	result := operations.DivideBy3159(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3160(t *testing.T) {
	result := operations.DivideBy3160(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3161(t *testing.T) {
	result := operations.DivideBy3161(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3162(t *testing.T) {
	result := operations.DivideBy3162(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3163(t *testing.T) {
	result := operations.DivideBy3163(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3164(t *testing.T) {
	result := operations.DivideBy3164(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3165(t *testing.T) {
	result := operations.DivideBy3165(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3166(t *testing.T) {
	result := operations.DivideBy3166(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3167(t *testing.T) {
	result := operations.DivideBy3167(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3168(t *testing.T) {
	result := operations.DivideBy3168(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3169(t *testing.T) {
	result := operations.DivideBy3169(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3170(t *testing.T) {
	result := operations.DivideBy3170(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3171(t *testing.T) {
	result := operations.DivideBy3171(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3172(t *testing.T) {
	result := operations.DivideBy3172(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3173(t *testing.T) {
	result := operations.DivideBy3173(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3174(t *testing.T) {
	result := operations.DivideBy3174(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3175(t *testing.T) {
	result := operations.DivideBy3175(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3176(t *testing.T) {
	result := operations.DivideBy3176(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3177(t *testing.T) {
	result := operations.DivideBy3177(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3178(t *testing.T) {
	result := operations.DivideBy3178(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3179(t *testing.T) {
	result := operations.DivideBy3179(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3180(t *testing.T) {
	result := operations.DivideBy3180(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3181(t *testing.T) {
	result := operations.DivideBy3181(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3182(t *testing.T) {
	result := operations.DivideBy3182(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3183(t *testing.T) {
	result := operations.DivideBy3183(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3184(t *testing.T) {
	result := operations.DivideBy3184(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3185(t *testing.T) {
	result := operations.DivideBy3185(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3186(t *testing.T) {
	result := operations.DivideBy3186(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3187(t *testing.T) {
	result := operations.DivideBy3187(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3188(t *testing.T) {
	result := operations.DivideBy3188(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3189(t *testing.T) {
	result := operations.DivideBy3189(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3190(t *testing.T) {
	result := operations.DivideBy3190(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3191(t *testing.T) {
	result := operations.DivideBy3191(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3192(t *testing.T) {
	result := operations.DivideBy3192(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3193(t *testing.T) {
	result := operations.DivideBy3193(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3194(t *testing.T) {
	result := operations.DivideBy3194(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3195(t *testing.T) {
	result := operations.DivideBy3195(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3196(t *testing.T) {
	result := operations.DivideBy3196(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3197(t *testing.T) {
	result := operations.DivideBy3197(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3198(t *testing.T) {
	result := operations.DivideBy3198(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3199(t *testing.T) {
	result := operations.DivideBy3199(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3200(t *testing.T) {
	result := operations.DivideBy3200(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3201(t *testing.T) {
	result := operations.DivideBy3201(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3202(t *testing.T) {
	result := operations.DivideBy3202(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3203(t *testing.T) {
	result := operations.DivideBy3203(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3204(t *testing.T) {
	result := operations.DivideBy3204(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3205(t *testing.T) {
	result := operations.DivideBy3205(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3206(t *testing.T) {
	result := operations.DivideBy3206(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3207(t *testing.T) {
	result := operations.DivideBy3207(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3208(t *testing.T) {
	result := operations.DivideBy3208(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3209(t *testing.T) {
	result := operations.DivideBy3209(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3210(t *testing.T) {
	result := operations.DivideBy3210(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3211(t *testing.T) {
	result := operations.DivideBy3211(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3212(t *testing.T) {
	result := operations.DivideBy3212(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3213(t *testing.T) {
	result := operations.DivideBy3213(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3214(t *testing.T) {
	result := operations.DivideBy3214(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3215(t *testing.T) {
	result := operations.DivideBy3215(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3216(t *testing.T) {
	result := operations.DivideBy3216(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3217(t *testing.T) {
	result := operations.DivideBy3217(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3218(t *testing.T) {
	result := operations.DivideBy3218(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3219(t *testing.T) {
	result := operations.DivideBy3219(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3220(t *testing.T) {
	result := operations.DivideBy3220(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3221(t *testing.T) {
	result := operations.DivideBy3221(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3222(t *testing.T) {
	result := operations.DivideBy3222(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3223(t *testing.T) {
	result := operations.DivideBy3223(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3224(t *testing.T) {
	result := operations.DivideBy3224(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3225(t *testing.T) {
	result := operations.DivideBy3225(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3226(t *testing.T) {
	result := operations.DivideBy3226(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3227(t *testing.T) {
	result := operations.DivideBy3227(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3228(t *testing.T) {
	result := operations.DivideBy3228(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3229(t *testing.T) {
	result := operations.DivideBy3229(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3230(t *testing.T) {
	result := operations.DivideBy3230(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3231(t *testing.T) {
	result := operations.DivideBy3231(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3232(t *testing.T) {
	result := operations.DivideBy3232(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3233(t *testing.T) {
	result := operations.DivideBy3233(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3234(t *testing.T) {
	result := operations.DivideBy3234(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3235(t *testing.T) {
	result := operations.DivideBy3235(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3236(t *testing.T) {
	result := operations.DivideBy3236(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3237(t *testing.T) {
	result := operations.DivideBy3237(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3238(t *testing.T) {
	result := operations.DivideBy3238(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3239(t *testing.T) {
	result := operations.DivideBy3239(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3240(t *testing.T) {
	result := operations.DivideBy3240(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3241(t *testing.T) {
	result := operations.DivideBy3241(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3242(t *testing.T) {
	result := operations.DivideBy3242(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3243(t *testing.T) {
	result := operations.DivideBy3243(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3244(t *testing.T) {
	result := operations.DivideBy3244(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3245(t *testing.T) {
	result := operations.DivideBy3245(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3246(t *testing.T) {
	result := operations.DivideBy3246(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3247(t *testing.T) {
	result := operations.DivideBy3247(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3248(t *testing.T) {
	result := operations.DivideBy3248(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3249(t *testing.T) {
	result := operations.DivideBy3249(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3250(t *testing.T) {
	result := operations.DivideBy3250(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3251(t *testing.T) {
	result := operations.DivideBy3251(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3252(t *testing.T) {
	result := operations.DivideBy3252(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3253(t *testing.T) {
	result := operations.DivideBy3253(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3254(t *testing.T) {
	result := operations.DivideBy3254(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3255(t *testing.T) {
	result := operations.DivideBy3255(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3256(t *testing.T) {
	result := operations.DivideBy3256(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3257(t *testing.T) {
	result := operations.DivideBy3257(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3258(t *testing.T) {
	result := operations.DivideBy3258(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3259(t *testing.T) {
	result := operations.DivideBy3259(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3260(t *testing.T) {
	result := operations.DivideBy3260(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3261(t *testing.T) {
	result := operations.DivideBy3261(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3262(t *testing.T) {
	result := operations.DivideBy3262(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3263(t *testing.T) {
	result := operations.DivideBy3263(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3264(t *testing.T) {
	result := operations.DivideBy3264(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3265(t *testing.T) {
	result := operations.DivideBy3265(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3266(t *testing.T) {
	result := operations.DivideBy3266(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3267(t *testing.T) {
	result := operations.DivideBy3267(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3268(t *testing.T) {
	result := operations.DivideBy3268(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3269(t *testing.T) {
	result := operations.DivideBy3269(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3270(t *testing.T) {
	result := operations.DivideBy3270(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3271(t *testing.T) {
	result := operations.DivideBy3271(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3272(t *testing.T) {
	result := operations.DivideBy3272(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3273(t *testing.T) {
	result := operations.DivideBy3273(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3274(t *testing.T) {
	result := operations.DivideBy3274(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3275(t *testing.T) {
	result := operations.DivideBy3275(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3276(t *testing.T) {
	result := operations.DivideBy3276(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3277(t *testing.T) {
	result := operations.DivideBy3277(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3278(t *testing.T) {
	result := operations.DivideBy3278(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3279(t *testing.T) {
	result := operations.DivideBy3279(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3280(t *testing.T) {
	result := operations.DivideBy3280(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3281(t *testing.T) {
	result := operations.DivideBy3281(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3282(t *testing.T) {
	result := operations.DivideBy3282(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3283(t *testing.T) {
	result := operations.DivideBy3283(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3284(t *testing.T) {
	result := operations.DivideBy3284(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3285(t *testing.T) {
	result := operations.DivideBy3285(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3286(t *testing.T) {
	result := operations.DivideBy3286(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3287(t *testing.T) {
	result := operations.DivideBy3287(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3288(t *testing.T) {
	result := operations.DivideBy3288(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3289(t *testing.T) {
	result := operations.DivideBy3289(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3290(t *testing.T) {
	result := operations.DivideBy3290(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3291(t *testing.T) {
	result := operations.DivideBy3291(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3292(t *testing.T) {
	result := operations.DivideBy3292(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3293(t *testing.T) {
	result := operations.DivideBy3293(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3294(t *testing.T) {
	result := operations.DivideBy3294(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3295(t *testing.T) {
	result := operations.DivideBy3295(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3296(t *testing.T) {
	result := operations.DivideBy3296(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3297(t *testing.T) {
	result := operations.DivideBy3297(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3298(t *testing.T) {
	result := operations.DivideBy3298(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3299(t *testing.T) {
	result := operations.DivideBy3299(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3300(t *testing.T) {
	result := operations.DivideBy3300(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3301(t *testing.T) {
	result := operations.DivideBy3301(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3302(t *testing.T) {
	result := operations.DivideBy3302(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3303(t *testing.T) {
	result := operations.DivideBy3303(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3304(t *testing.T) {
	result := operations.DivideBy3304(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3305(t *testing.T) {
	result := operations.DivideBy3305(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3306(t *testing.T) {
	result := operations.DivideBy3306(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3307(t *testing.T) {
	result := operations.DivideBy3307(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3308(t *testing.T) {
	result := operations.DivideBy3308(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3309(t *testing.T) {
	result := operations.DivideBy3309(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3310(t *testing.T) {
	result := operations.DivideBy3310(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3311(t *testing.T) {
	result := operations.DivideBy3311(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3312(t *testing.T) {
	result := operations.DivideBy3312(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3313(t *testing.T) {
	result := operations.DivideBy3313(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3314(t *testing.T) {
	result := operations.DivideBy3314(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3315(t *testing.T) {
	result := operations.DivideBy3315(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3316(t *testing.T) {
	result := operations.DivideBy3316(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3317(t *testing.T) {
	result := operations.DivideBy3317(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3318(t *testing.T) {
	result := operations.DivideBy3318(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3319(t *testing.T) {
	result := operations.DivideBy3319(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3320(t *testing.T) {
	result := operations.DivideBy3320(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3321(t *testing.T) {
	result := operations.DivideBy3321(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3322(t *testing.T) {
	result := operations.DivideBy3322(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3323(t *testing.T) {
	result := operations.DivideBy3323(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3324(t *testing.T) {
	result := operations.DivideBy3324(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3325(t *testing.T) {
	result := operations.DivideBy3325(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3326(t *testing.T) {
	result := operations.DivideBy3326(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3327(t *testing.T) {
	result := operations.DivideBy3327(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3328(t *testing.T) {
	result := operations.DivideBy3328(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3329(t *testing.T) {
	result := operations.DivideBy3329(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3330(t *testing.T) {
	result := operations.DivideBy3330(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3331(t *testing.T) {
	result := operations.DivideBy3331(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3332(t *testing.T) {
	result := operations.DivideBy3332(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3333(t *testing.T) {
	result := operations.DivideBy3333(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3334(t *testing.T) {
	result := operations.DivideBy3334(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3335(t *testing.T) {
	result := operations.DivideBy3335(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3336(t *testing.T) {
	result := operations.DivideBy3336(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3337(t *testing.T) {
	result := operations.DivideBy3337(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3338(t *testing.T) {
	result := operations.DivideBy3338(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3339(t *testing.T) {
	result := operations.DivideBy3339(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3340(t *testing.T) {
	result := operations.DivideBy3340(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3341(t *testing.T) {
	result := operations.DivideBy3341(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3342(t *testing.T) {
	result := operations.DivideBy3342(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3343(t *testing.T) {
	result := operations.DivideBy3343(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3344(t *testing.T) {
	result := operations.DivideBy3344(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3345(t *testing.T) {
	result := operations.DivideBy3345(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3346(t *testing.T) {
	result := operations.DivideBy3346(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3347(t *testing.T) {
	result := operations.DivideBy3347(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3348(t *testing.T) {
	result := operations.DivideBy3348(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3349(t *testing.T) {
	result := operations.DivideBy3349(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3350(t *testing.T) {
	result := operations.DivideBy3350(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3351(t *testing.T) {
	result := operations.DivideBy3351(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3352(t *testing.T) {
	result := operations.DivideBy3352(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3353(t *testing.T) {
	result := operations.DivideBy3353(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3354(t *testing.T) {
	result := operations.DivideBy3354(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3355(t *testing.T) {
	result := operations.DivideBy3355(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3356(t *testing.T) {
	result := operations.DivideBy3356(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3357(t *testing.T) {
	result := operations.DivideBy3357(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3358(t *testing.T) {
	result := operations.DivideBy3358(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3359(t *testing.T) {
	result := operations.DivideBy3359(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3360(t *testing.T) {
	result := operations.DivideBy3360(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3361(t *testing.T) {
	result := operations.DivideBy3361(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3362(t *testing.T) {
	result := operations.DivideBy3362(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3363(t *testing.T) {
	result := operations.DivideBy3363(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3364(t *testing.T) {
	result := operations.DivideBy3364(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3365(t *testing.T) {
	result := operations.DivideBy3365(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3366(t *testing.T) {
	result := operations.DivideBy3366(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3367(t *testing.T) {
	result := operations.DivideBy3367(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3368(t *testing.T) {
	result := operations.DivideBy3368(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3369(t *testing.T) {
	result := operations.DivideBy3369(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3370(t *testing.T) {
	result := operations.DivideBy3370(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3371(t *testing.T) {
	result := operations.DivideBy3371(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3372(t *testing.T) {
	result := operations.DivideBy3372(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3373(t *testing.T) {
	result := operations.DivideBy3373(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3374(t *testing.T) {
	result := operations.DivideBy3374(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3375(t *testing.T) {
	result := operations.DivideBy3375(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3376(t *testing.T) {
	result := operations.DivideBy3376(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3377(t *testing.T) {
	result := operations.DivideBy3377(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3378(t *testing.T) {
	result := operations.DivideBy3378(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3379(t *testing.T) {
	result := operations.DivideBy3379(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3380(t *testing.T) {
	result := operations.DivideBy3380(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3381(t *testing.T) {
	result := operations.DivideBy3381(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3382(t *testing.T) {
	result := operations.DivideBy3382(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3383(t *testing.T) {
	result := operations.DivideBy3383(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3384(t *testing.T) {
	result := operations.DivideBy3384(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3385(t *testing.T) {
	result := operations.DivideBy3385(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3386(t *testing.T) {
	result := operations.DivideBy3386(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3387(t *testing.T) {
	result := operations.DivideBy3387(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3388(t *testing.T) {
	result := operations.DivideBy3388(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3389(t *testing.T) {
	result := operations.DivideBy3389(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3390(t *testing.T) {
	result := operations.DivideBy3390(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3391(t *testing.T) {
	result := operations.DivideBy3391(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3392(t *testing.T) {
	result := operations.DivideBy3392(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3393(t *testing.T) {
	result := operations.DivideBy3393(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3394(t *testing.T) {
	result := operations.DivideBy3394(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3395(t *testing.T) {
	result := operations.DivideBy3395(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3396(t *testing.T) {
	result := operations.DivideBy3396(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3397(t *testing.T) {
	result := operations.DivideBy3397(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3398(t *testing.T) {
	result := operations.DivideBy3398(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3399(t *testing.T) {
	result := operations.DivideBy3399(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3400(t *testing.T) {
	result := operations.DivideBy3400(17000)
	
	if result != 5 {
		t.Errorf("Expected 5 but got %d", result)
	}
}

func TestDivideBy3401(t *testing.T) {
	result := operations.DivideBy3401(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3402(t *testing.T) {
	result := operations.DivideBy3402(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3403(t *testing.T) {
	result := operations.DivideBy3403(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3404(t *testing.T) {
	result := operations.DivideBy3404(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3405(t *testing.T) {
	result := operations.DivideBy3405(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3406(t *testing.T) {
	result := operations.DivideBy3406(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3407(t *testing.T) {
	result := operations.DivideBy3407(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3408(t *testing.T) {
	result := operations.DivideBy3408(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3409(t *testing.T) {
	result := operations.DivideBy3409(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3410(t *testing.T) {
	result := operations.DivideBy3410(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3411(t *testing.T) {
	result := operations.DivideBy3411(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3412(t *testing.T) {
	result := operations.DivideBy3412(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3413(t *testing.T) {
	result := operations.DivideBy3413(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3414(t *testing.T) {
	result := operations.DivideBy3414(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3415(t *testing.T) {
	result := operations.DivideBy3415(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3416(t *testing.T) {
	result := operations.DivideBy3416(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3417(t *testing.T) {
	result := operations.DivideBy3417(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3418(t *testing.T) {
	result := operations.DivideBy3418(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3419(t *testing.T) {
	result := operations.DivideBy3419(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3420(t *testing.T) {
	result := operations.DivideBy3420(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3421(t *testing.T) {
	result := operations.DivideBy3421(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3422(t *testing.T) {
	result := operations.DivideBy3422(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3423(t *testing.T) {
	result := operations.DivideBy3423(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3424(t *testing.T) {
	result := operations.DivideBy3424(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3425(t *testing.T) {
	result := operations.DivideBy3425(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3426(t *testing.T) {
	result := operations.DivideBy3426(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3427(t *testing.T) {
	result := operations.DivideBy3427(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3428(t *testing.T) {
	result := operations.DivideBy3428(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3429(t *testing.T) {
	result := operations.DivideBy3429(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3430(t *testing.T) {
	result := operations.DivideBy3430(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3431(t *testing.T) {
	result := operations.DivideBy3431(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3432(t *testing.T) {
	result := operations.DivideBy3432(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3433(t *testing.T) {
	result := operations.DivideBy3433(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3434(t *testing.T) {
	result := operations.DivideBy3434(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3435(t *testing.T) {
	result := operations.DivideBy3435(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3436(t *testing.T) {
	result := operations.DivideBy3436(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3437(t *testing.T) {
	result := operations.DivideBy3437(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3438(t *testing.T) {
	result := operations.DivideBy3438(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3439(t *testing.T) {
	result := operations.DivideBy3439(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3440(t *testing.T) {
	result := operations.DivideBy3440(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3441(t *testing.T) {
	result := operations.DivideBy3441(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3442(t *testing.T) {
	result := operations.DivideBy3442(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3443(t *testing.T) {
	result := operations.DivideBy3443(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3444(t *testing.T) {
	result := operations.DivideBy3444(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3445(t *testing.T) {
	result := operations.DivideBy3445(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3446(t *testing.T) {
	result := operations.DivideBy3446(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3447(t *testing.T) {
	result := operations.DivideBy3447(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3448(t *testing.T) {
	result := operations.DivideBy3448(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3449(t *testing.T) {
	result := operations.DivideBy3449(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3450(t *testing.T) {
	result := operations.DivideBy3450(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3451(t *testing.T) {
	result := operations.DivideBy3451(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3452(t *testing.T) {
	result := operations.DivideBy3452(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3453(t *testing.T) {
	result := operations.DivideBy3453(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3454(t *testing.T) {
	result := operations.DivideBy3454(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3455(t *testing.T) {
	result := operations.DivideBy3455(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3456(t *testing.T) {
	result := operations.DivideBy3456(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3457(t *testing.T) {
	result := operations.DivideBy3457(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3458(t *testing.T) {
	result := operations.DivideBy3458(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3459(t *testing.T) {
	result := operations.DivideBy3459(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3460(t *testing.T) {
	result := operations.DivideBy3460(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3461(t *testing.T) {
	result := operations.DivideBy3461(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3462(t *testing.T) {
	result := operations.DivideBy3462(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3463(t *testing.T) {
	result := operations.DivideBy3463(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3464(t *testing.T) {
	result := operations.DivideBy3464(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3465(t *testing.T) {
	result := operations.DivideBy3465(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3466(t *testing.T) {
	result := operations.DivideBy3466(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3467(t *testing.T) {
	result := operations.DivideBy3467(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3468(t *testing.T) {
	result := operations.DivideBy3468(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3469(t *testing.T) {
	result := operations.DivideBy3469(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3470(t *testing.T) {
	result := operations.DivideBy3470(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3471(t *testing.T) {
	result := operations.DivideBy3471(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3472(t *testing.T) {
	result := operations.DivideBy3472(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3473(t *testing.T) {
	result := operations.DivideBy3473(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3474(t *testing.T) {
	result := operations.DivideBy3474(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3475(t *testing.T) {
	result := operations.DivideBy3475(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3476(t *testing.T) {
	result := operations.DivideBy3476(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3477(t *testing.T) {
	result := operations.DivideBy3477(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3478(t *testing.T) {
	result := operations.DivideBy3478(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3479(t *testing.T) {
	result := operations.DivideBy3479(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3480(t *testing.T) {
	result := operations.DivideBy3480(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3481(t *testing.T) {
	result := operations.DivideBy3481(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3482(t *testing.T) {
	result := operations.DivideBy3482(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3483(t *testing.T) {
	result := operations.DivideBy3483(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3484(t *testing.T) {
	result := operations.DivideBy3484(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3485(t *testing.T) {
	result := operations.DivideBy3485(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3486(t *testing.T) {
	result := operations.DivideBy3486(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3487(t *testing.T) {
	result := operations.DivideBy3487(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3488(t *testing.T) {
	result := operations.DivideBy3488(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3489(t *testing.T) {
	result := operations.DivideBy3489(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3490(t *testing.T) {
	result := operations.DivideBy3490(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3491(t *testing.T) {
	result := operations.DivideBy3491(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3492(t *testing.T) {
	result := operations.DivideBy3492(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3493(t *testing.T) {
	result := operations.DivideBy3493(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3494(t *testing.T) {
	result := operations.DivideBy3494(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3495(t *testing.T) {
	result := operations.DivideBy3495(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3496(t *testing.T) {
	result := operations.DivideBy3496(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3497(t *testing.T) {
	result := operations.DivideBy3497(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3498(t *testing.T) {
	result := operations.DivideBy3498(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3499(t *testing.T) {
	result := operations.DivideBy3499(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3500(t *testing.T) {
	result := operations.DivideBy3500(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3501(t *testing.T) {
	result := operations.DivideBy3501(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3502(t *testing.T) {
	result := operations.DivideBy3502(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3503(t *testing.T) {
	result := operations.DivideBy3503(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3504(t *testing.T) {
	result := operations.DivideBy3504(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3505(t *testing.T) {
	result := operations.DivideBy3505(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3506(t *testing.T) {
	result := operations.DivideBy3506(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3507(t *testing.T) {
	result := operations.DivideBy3507(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3508(t *testing.T) {
	result := operations.DivideBy3508(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3509(t *testing.T) {
	result := operations.DivideBy3509(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3510(t *testing.T) {
	result := operations.DivideBy3510(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3511(t *testing.T) {
	result := operations.DivideBy3511(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3512(t *testing.T) {
	result := operations.DivideBy3512(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3513(t *testing.T) {
	result := operations.DivideBy3513(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3514(t *testing.T) {
	result := operations.DivideBy3514(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3515(t *testing.T) {
	result := operations.DivideBy3515(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3516(t *testing.T) {
	result := operations.DivideBy3516(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3517(t *testing.T) {
	result := operations.DivideBy3517(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3518(t *testing.T) {
	result := operations.DivideBy3518(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3519(t *testing.T) {
	result := operations.DivideBy3519(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3520(t *testing.T) {
	result := operations.DivideBy3520(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3521(t *testing.T) {
	result := operations.DivideBy3521(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3522(t *testing.T) {
	result := operations.DivideBy3522(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3523(t *testing.T) {
	result := operations.DivideBy3523(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3524(t *testing.T) {
	result := operations.DivideBy3524(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3525(t *testing.T) {
	result := operations.DivideBy3525(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3526(t *testing.T) {
	result := operations.DivideBy3526(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3527(t *testing.T) {
	result := operations.DivideBy3527(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3528(t *testing.T) {
	result := operations.DivideBy3528(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3529(t *testing.T) {
	result := operations.DivideBy3529(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3530(t *testing.T) {
	result := operations.DivideBy3530(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3531(t *testing.T) {
	result := operations.DivideBy3531(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3532(t *testing.T) {
	result := operations.DivideBy3532(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3533(t *testing.T) {
	result := operations.DivideBy3533(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3534(t *testing.T) {
	result := operations.DivideBy3534(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3535(t *testing.T) {
	result := operations.DivideBy3535(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3536(t *testing.T) {
	result := operations.DivideBy3536(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3537(t *testing.T) {
	result := operations.DivideBy3537(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3538(t *testing.T) {
	result := operations.DivideBy3538(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3539(t *testing.T) {
	result := operations.DivideBy3539(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3540(t *testing.T) {
	result := operations.DivideBy3540(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3541(t *testing.T) {
	result := operations.DivideBy3541(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3542(t *testing.T) {
	result := operations.DivideBy3542(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3543(t *testing.T) {
	result := operations.DivideBy3543(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3544(t *testing.T) {
	result := operations.DivideBy3544(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3545(t *testing.T) {
	result := operations.DivideBy3545(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3546(t *testing.T) {
	result := operations.DivideBy3546(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3547(t *testing.T) {
	result := operations.DivideBy3547(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3548(t *testing.T) {
	result := operations.DivideBy3548(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3549(t *testing.T) {
	result := operations.DivideBy3549(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3550(t *testing.T) {
	result := operations.DivideBy3550(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3551(t *testing.T) {
	result := operations.DivideBy3551(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3552(t *testing.T) {
	result := operations.DivideBy3552(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3553(t *testing.T) {
	result := operations.DivideBy3553(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3554(t *testing.T) {
	result := operations.DivideBy3554(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3555(t *testing.T) {
	result := operations.DivideBy3555(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3556(t *testing.T) {
	result := operations.DivideBy3556(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3557(t *testing.T) {
	result := operations.DivideBy3557(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3558(t *testing.T) {
	result := operations.DivideBy3558(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3559(t *testing.T) {
	result := operations.DivideBy3559(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3560(t *testing.T) {
	result := operations.DivideBy3560(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3561(t *testing.T) {
	result := operations.DivideBy3561(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3562(t *testing.T) {
	result := operations.DivideBy3562(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3563(t *testing.T) {
	result := operations.DivideBy3563(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3564(t *testing.T) {
	result := operations.DivideBy3564(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3565(t *testing.T) {
	result := operations.DivideBy3565(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3566(t *testing.T) {
	result := operations.DivideBy3566(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3567(t *testing.T) {
	result := operations.DivideBy3567(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3568(t *testing.T) {
	result := operations.DivideBy3568(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3569(t *testing.T) {
	result := operations.DivideBy3569(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3570(t *testing.T) {
	result := operations.DivideBy3570(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3571(t *testing.T) {
	result := operations.DivideBy3571(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3572(t *testing.T) {
	result := operations.DivideBy3572(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3573(t *testing.T) {
	result := operations.DivideBy3573(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3574(t *testing.T) {
	result := operations.DivideBy3574(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3575(t *testing.T) {
	result := operations.DivideBy3575(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3576(t *testing.T) {
	result := operations.DivideBy3576(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3577(t *testing.T) {
	result := operations.DivideBy3577(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3578(t *testing.T) {
	result := operations.DivideBy3578(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3579(t *testing.T) {
	result := operations.DivideBy3579(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3580(t *testing.T) {
	result := operations.DivideBy3580(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3581(t *testing.T) {
	result := operations.DivideBy3581(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3582(t *testing.T) {
	result := operations.DivideBy3582(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3583(t *testing.T) {
	result := operations.DivideBy3583(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3584(t *testing.T) {
	result := operations.DivideBy3584(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3585(t *testing.T) {
	result := operations.DivideBy3585(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3586(t *testing.T) {
	result := operations.DivideBy3586(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3587(t *testing.T) {
	result := operations.DivideBy3587(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3588(t *testing.T) {
	result := operations.DivideBy3588(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3589(t *testing.T) {
	result := operations.DivideBy3589(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3590(t *testing.T) {
	result := operations.DivideBy3590(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3591(t *testing.T) {
	result := operations.DivideBy3591(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3592(t *testing.T) {
	result := operations.DivideBy3592(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3593(t *testing.T) {
	result := operations.DivideBy3593(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3594(t *testing.T) {
	result := operations.DivideBy3594(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3595(t *testing.T) {
	result := operations.DivideBy3595(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3596(t *testing.T) {
	result := operations.DivideBy3596(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3597(t *testing.T) {
	result := operations.DivideBy3597(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3598(t *testing.T) {
	result := operations.DivideBy3598(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3599(t *testing.T) {
	result := operations.DivideBy3599(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3600(t *testing.T) {
	result := operations.DivideBy3600(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3601(t *testing.T) {
	result := operations.DivideBy3601(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3602(t *testing.T) {
	result := operations.DivideBy3602(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3603(t *testing.T) {
	result := operations.DivideBy3603(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3604(t *testing.T) {
	result := operations.DivideBy3604(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3605(t *testing.T) {
	result := operations.DivideBy3605(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3606(t *testing.T) {
	result := operations.DivideBy3606(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3607(t *testing.T) {
	result := operations.DivideBy3607(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3608(t *testing.T) {
	result := operations.DivideBy3608(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3609(t *testing.T) {
	result := operations.DivideBy3609(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3610(t *testing.T) {
	result := operations.DivideBy3610(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3611(t *testing.T) {
	result := operations.DivideBy3611(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3612(t *testing.T) {
	result := operations.DivideBy3612(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3613(t *testing.T) {
	result := operations.DivideBy3613(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3614(t *testing.T) {
	result := operations.DivideBy3614(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3615(t *testing.T) {
	result := operations.DivideBy3615(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3616(t *testing.T) {
	result := operations.DivideBy3616(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3617(t *testing.T) {
	result := operations.DivideBy3617(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3618(t *testing.T) {
	result := operations.DivideBy3618(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3619(t *testing.T) {
	result := operations.DivideBy3619(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3620(t *testing.T) {
	result := operations.DivideBy3620(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3621(t *testing.T) {
	result := operations.DivideBy3621(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3622(t *testing.T) {
	result := operations.DivideBy3622(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3623(t *testing.T) {
	result := operations.DivideBy3623(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3624(t *testing.T) {
	result := operations.DivideBy3624(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3625(t *testing.T) {
	result := operations.DivideBy3625(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3626(t *testing.T) {
	result := operations.DivideBy3626(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3627(t *testing.T) {
	result := operations.DivideBy3627(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3628(t *testing.T) {
	result := operations.DivideBy3628(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3629(t *testing.T) {
	result := operations.DivideBy3629(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3630(t *testing.T) {
	result := operations.DivideBy3630(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3631(t *testing.T) {
	result := operations.DivideBy3631(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3632(t *testing.T) {
	result := operations.DivideBy3632(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3633(t *testing.T) {
	result := operations.DivideBy3633(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3634(t *testing.T) {
	result := operations.DivideBy3634(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3635(t *testing.T) {
	result := operations.DivideBy3635(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3636(t *testing.T) {
	result := operations.DivideBy3636(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3637(t *testing.T) {
	result := operations.DivideBy3637(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3638(t *testing.T) {
	result := operations.DivideBy3638(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3639(t *testing.T) {
	result := operations.DivideBy3639(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3640(t *testing.T) {
	result := operations.DivideBy3640(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3641(t *testing.T) {
	result := operations.DivideBy3641(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3642(t *testing.T) {
	result := operations.DivideBy3642(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3643(t *testing.T) {
	result := operations.DivideBy3643(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3644(t *testing.T) {
	result := operations.DivideBy3644(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3645(t *testing.T) {
	result := operations.DivideBy3645(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3646(t *testing.T) {
	result := operations.DivideBy3646(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3647(t *testing.T) {
	result := operations.DivideBy3647(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3648(t *testing.T) {
	result := operations.DivideBy3648(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3649(t *testing.T) {
	result := operations.DivideBy3649(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3650(t *testing.T) {
	result := operations.DivideBy3650(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3651(t *testing.T) {
	result := operations.DivideBy3651(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3652(t *testing.T) {
	result := operations.DivideBy3652(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3653(t *testing.T) {
	result := operations.DivideBy3653(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3654(t *testing.T) {
	result := operations.DivideBy3654(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3655(t *testing.T) {
	result := operations.DivideBy3655(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3656(t *testing.T) {
	result := operations.DivideBy3656(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3657(t *testing.T) {
	result := operations.DivideBy3657(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3658(t *testing.T) {
	result := operations.DivideBy3658(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3659(t *testing.T) {
	result := operations.DivideBy3659(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3660(t *testing.T) {
	result := operations.DivideBy3660(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3661(t *testing.T) {
	result := operations.DivideBy3661(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3662(t *testing.T) {
	result := operations.DivideBy3662(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3663(t *testing.T) {
	result := operations.DivideBy3663(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3664(t *testing.T) {
	result := operations.DivideBy3664(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3665(t *testing.T) {
	result := operations.DivideBy3665(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3666(t *testing.T) {
	result := operations.DivideBy3666(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3667(t *testing.T) {
	result := operations.DivideBy3667(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3668(t *testing.T) {
	result := operations.DivideBy3668(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3669(t *testing.T) {
	result := operations.DivideBy3669(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3670(t *testing.T) {
	result := operations.DivideBy3670(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3671(t *testing.T) {
	result := operations.DivideBy3671(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3672(t *testing.T) {
	result := operations.DivideBy3672(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3673(t *testing.T) {
	result := operations.DivideBy3673(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3674(t *testing.T) {
	result := operations.DivideBy3674(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3675(t *testing.T) {
	result := operations.DivideBy3675(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3676(t *testing.T) {
	result := operations.DivideBy3676(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3677(t *testing.T) {
	result := operations.DivideBy3677(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3678(t *testing.T) {
	result := operations.DivideBy3678(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3679(t *testing.T) {
	result := operations.DivideBy3679(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3680(t *testing.T) {
	result := operations.DivideBy3680(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3681(t *testing.T) {
	result := operations.DivideBy3681(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3682(t *testing.T) {
	result := operations.DivideBy3682(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3683(t *testing.T) {
	result := operations.DivideBy3683(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3684(t *testing.T) {
	result := operations.DivideBy3684(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3685(t *testing.T) {
	result := operations.DivideBy3685(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3686(t *testing.T) {
	result := operations.DivideBy3686(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3687(t *testing.T) {
	result := operations.DivideBy3687(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3688(t *testing.T) {
	result := operations.DivideBy3688(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3689(t *testing.T) {
	result := operations.DivideBy3689(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3690(t *testing.T) {
	result := operations.DivideBy3690(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3691(t *testing.T) {
	result := operations.DivideBy3691(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3692(t *testing.T) {
	result := operations.DivideBy3692(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3693(t *testing.T) {
	result := operations.DivideBy3693(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3694(t *testing.T) {
	result := operations.DivideBy3694(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3695(t *testing.T) {
	result := operations.DivideBy3695(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3696(t *testing.T) {
	result := operations.DivideBy3696(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3697(t *testing.T) {
	result := operations.DivideBy3697(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3698(t *testing.T) {
	result := operations.DivideBy3698(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3699(t *testing.T) {
	result := operations.DivideBy3699(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3700(t *testing.T) {
	result := operations.DivideBy3700(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3701(t *testing.T) {
	result := operations.DivideBy3701(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3702(t *testing.T) {
	result := operations.DivideBy3702(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3703(t *testing.T) {
	result := operations.DivideBy3703(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3704(t *testing.T) {
	result := operations.DivideBy3704(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3705(t *testing.T) {
	result := operations.DivideBy3705(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3706(t *testing.T) {
	result := operations.DivideBy3706(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3707(t *testing.T) {
	result := operations.DivideBy3707(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3708(t *testing.T) {
	result := operations.DivideBy3708(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3709(t *testing.T) {
	result := operations.DivideBy3709(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3710(t *testing.T) {
	result := operations.DivideBy3710(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3711(t *testing.T) {
	result := operations.DivideBy3711(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3712(t *testing.T) {
	result := operations.DivideBy3712(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3713(t *testing.T) {
	result := operations.DivideBy3713(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3714(t *testing.T) {
	result := operations.DivideBy3714(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3715(t *testing.T) {
	result := operations.DivideBy3715(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3716(t *testing.T) {
	result := operations.DivideBy3716(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3717(t *testing.T) {
	result := operations.DivideBy3717(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3718(t *testing.T) {
	result := operations.DivideBy3718(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3719(t *testing.T) {
	result := operations.DivideBy3719(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3720(t *testing.T) {
	result := operations.DivideBy3720(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3721(t *testing.T) {
	result := operations.DivideBy3721(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3722(t *testing.T) {
	result := operations.DivideBy3722(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3723(t *testing.T) {
	result := operations.DivideBy3723(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3724(t *testing.T) {
	result := operations.DivideBy3724(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3725(t *testing.T) {
	result := operations.DivideBy3725(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3726(t *testing.T) {
	result := operations.DivideBy3726(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3727(t *testing.T) {
	result := operations.DivideBy3727(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3728(t *testing.T) {
	result := operations.DivideBy3728(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3729(t *testing.T) {
	result := operations.DivideBy3729(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3730(t *testing.T) {
	result := operations.DivideBy3730(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3731(t *testing.T) {
	result := operations.DivideBy3731(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3732(t *testing.T) {
	result := operations.DivideBy3732(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3733(t *testing.T) {
	result := operations.DivideBy3733(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3734(t *testing.T) {
	result := operations.DivideBy3734(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3735(t *testing.T) {
	result := operations.DivideBy3735(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3736(t *testing.T) {
	result := operations.DivideBy3736(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3737(t *testing.T) {
	result := operations.DivideBy3737(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3738(t *testing.T) {
	result := operations.DivideBy3738(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3739(t *testing.T) {
	result := operations.DivideBy3739(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3740(t *testing.T) {
	result := operations.DivideBy3740(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3741(t *testing.T) {
	result := operations.DivideBy3741(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3742(t *testing.T) {
	result := operations.DivideBy3742(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3743(t *testing.T) {
	result := operations.DivideBy3743(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3744(t *testing.T) {
	result := operations.DivideBy3744(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3745(t *testing.T) {
	result := operations.DivideBy3745(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3746(t *testing.T) {
	result := operations.DivideBy3746(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3747(t *testing.T) {
	result := operations.DivideBy3747(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3748(t *testing.T) {
	result := operations.DivideBy3748(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3749(t *testing.T) {
	result := operations.DivideBy3749(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3750(t *testing.T) {
	result := operations.DivideBy3750(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3751(t *testing.T) {
	result := operations.DivideBy3751(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3752(t *testing.T) {
	result := operations.DivideBy3752(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3753(t *testing.T) {
	result := operations.DivideBy3753(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3754(t *testing.T) {
	result := operations.DivideBy3754(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3755(t *testing.T) {
	result := operations.DivideBy3755(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3756(t *testing.T) {
	result := operations.DivideBy3756(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3757(t *testing.T) {
	result := operations.DivideBy3757(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3758(t *testing.T) {
	result := operations.DivideBy3758(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3759(t *testing.T) {
	result := operations.DivideBy3759(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3760(t *testing.T) {
	result := operations.DivideBy3760(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3761(t *testing.T) {
	result := operations.DivideBy3761(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3762(t *testing.T) {
	result := operations.DivideBy3762(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3763(t *testing.T) {
	result := operations.DivideBy3763(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3764(t *testing.T) {
	result := operations.DivideBy3764(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3765(t *testing.T) {
	result := operations.DivideBy3765(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3766(t *testing.T) {
	result := operations.DivideBy3766(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3767(t *testing.T) {
	result := operations.DivideBy3767(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3768(t *testing.T) {
	result := operations.DivideBy3768(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3769(t *testing.T) {
	result := operations.DivideBy3769(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3770(t *testing.T) {
	result := operations.DivideBy3770(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3771(t *testing.T) {
	result := operations.DivideBy3771(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3772(t *testing.T) {
	result := operations.DivideBy3772(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3773(t *testing.T) {
	result := operations.DivideBy3773(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3774(t *testing.T) {
	result := operations.DivideBy3774(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3775(t *testing.T) {
	result := operations.DivideBy3775(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3776(t *testing.T) {
	result := operations.DivideBy3776(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3777(t *testing.T) {
	result := operations.DivideBy3777(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3778(t *testing.T) {
	result := operations.DivideBy3778(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3779(t *testing.T) {
	result := operations.DivideBy3779(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3780(t *testing.T) {
	result := operations.DivideBy3780(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3781(t *testing.T) {
	result := operations.DivideBy3781(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3782(t *testing.T) {
	result := operations.DivideBy3782(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3783(t *testing.T) {
	result := operations.DivideBy3783(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3784(t *testing.T) {
	result := operations.DivideBy3784(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3785(t *testing.T) {
	result := operations.DivideBy3785(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3786(t *testing.T) {
	result := operations.DivideBy3786(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3787(t *testing.T) {
	result := operations.DivideBy3787(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3788(t *testing.T) {
	result := operations.DivideBy3788(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3789(t *testing.T) {
	result := operations.DivideBy3789(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3790(t *testing.T) {
	result := operations.DivideBy3790(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3791(t *testing.T) {
	result := operations.DivideBy3791(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3792(t *testing.T) {
	result := operations.DivideBy3792(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3793(t *testing.T) {
	result := operations.DivideBy3793(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3794(t *testing.T) {
	result := operations.DivideBy3794(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3795(t *testing.T) {
	result := operations.DivideBy3795(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3796(t *testing.T) {
	result := operations.DivideBy3796(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3797(t *testing.T) {
	result := operations.DivideBy3797(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3798(t *testing.T) {
	result := operations.DivideBy3798(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3799(t *testing.T) {
	result := operations.DivideBy3799(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3800(t *testing.T) {
	result := operations.DivideBy3800(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3801(t *testing.T) {
	result := operations.DivideBy3801(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3802(t *testing.T) {
	result := operations.DivideBy3802(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3803(t *testing.T) {
	result := operations.DivideBy3803(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3804(t *testing.T) {
	result := operations.DivideBy3804(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3805(t *testing.T) {
	result := operations.DivideBy3805(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3806(t *testing.T) {
	result := operations.DivideBy3806(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3807(t *testing.T) {
	result := operations.DivideBy3807(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3808(t *testing.T) {
	result := operations.DivideBy3808(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3809(t *testing.T) {
	result := operations.DivideBy3809(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3810(t *testing.T) {
	result := operations.DivideBy3810(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3811(t *testing.T) {
	result := operations.DivideBy3811(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3812(t *testing.T) {
	result := operations.DivideBy3812(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3813(t *testing.T) {
	result := operations.DivideBy3813(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3814(t *testing.T) {
	result := operations.DivideBy3814(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3815(t *testing.T) {
	result := operations.DivideBy3815(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3816(t *testing.T) {
	result := operations.DivideBy3816(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3817(t *testing.T) {
	result := operations.DivideBy3817(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3818(t *testing.T) {
	result := operations.DivideBy3818(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3819(t *testing.T) {
	result := operations.DivideBy3819(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3820(t *testing.T) {
	result := operations.DivideBy3820(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3821(t *testing.T) {
	result := operations.DivideBy3821(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3822(t *testing.T) {
	result := operations.DivideBy3822(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3823(t *testing.T) {
	result := operations.DivideBy3823(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3824(t *testing.T) {
	result := operations.DivideBy3824(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3825(t *testing.T) {
	result := operations.DivideBy3825(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3826(t *testing.T) {
	result := operations.DivideBy3826(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3827(t *testing.T) {
	result := operations.DivideBy3827(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3828(t *testing.T) {
	result := operations.DivideBy3828(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3829(t *testing.T) {
	result := operations.DivideBy3829(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3830(t *testing.T) {
	result := operations.DivideBy3830(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3831(t *testing.T) {
	result := operations.DivideBy3831(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3832(t *testing.T) {
	result := operations.DivideBy3832(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3833(t *testing.T) {
	result := operations.DivideBy3833(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3834(t *testing.T) {
	result := operations.DivideBy3834(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3835(t *testing.T) {
	result := operations.DivideBy3835(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3836(t *testing.T) {
	result := operations.DivideBy3836(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3837(t *testing.T) {
	result := operations.DivideBy3837(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3838(t *testing.T) {
	result := operations.DivideBy3838(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3839(t *testing.T) {
	result := operations.DivideBy3839(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3840(t *testing.T) {
	result := operations.DivideBy3840(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3841(t *testing.T) {
	result := operations.DivideBy3841(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3842(t *testing.T) {
	result := operations.DivideBy3842(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3843(t *testing.T) {
	result := operations.DivideBy3843(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3844(t *testing.T) {
	result := operations.DivideBy3844(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3845(t *testing.T) {
	result := operations.DivideBy3845(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3846(t *testing.T) {
	result := operations.DivideBy3846(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3847(t *testing.T) {
	result := operations.DivideBy3847(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3848(t *testing.T) {
	result := operations.DivideBy3848(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3849(t *testing.T) {
	result := operations.DivideBy3849(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3850(t *testing.T) {
	result := operations.DivideBy3850(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3851(t *testing.T) {
	result := operations.DivideBy3851(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3852(t *testing.T) {
	result := operations.DivideBy3852(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3853(t *testing.T) {
	result := operations.DivideBy3853(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3854(t *testing.T) {
	result := operations.DivideBy3854(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3855(t *testing.T) {
	result := operations.DivideBy3855(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3856(t *testing.T) {
	result := operations.DivideBy3856(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3857(t *testing.T) {
	result := operations.DivideBy3857(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3858(t *testing.T) {
	result := operations.DivideBy3858(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3859(t *testing.T) {
	result := operations.DivideBy3859(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3860(t *testing.T) {
	result := operations.DivideBy3860(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3861(t *testing.T) {
	result := operations.DivideBy3861(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3862(t *testing.T) {
	result := operations.DivideBy3862(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3863(t *testing.T) {
	result := operations.DivideBy3863(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3864(t *testing.T) {
	result := operations.DivideBy3864(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3865(t *testing.T) {
	result := operations.DivideBy3865(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3866(t *testing.T) {
	result := operations.DivideBy3866(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3867(t *testing.T) {
	result := operations.DivideBy3867(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3868(t *testing.T) {
	result := operations.DivideBy3868(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3869(t *testing.T) {
	result := operations.DivideBy3869(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3870(t *testing.T) {
	result := operations.DivideBy3870(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3871(t *testing.T) {
	result := operations.DivideBy3871(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3872(t *testing.T) {
	result := operations.DivideBy3872(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3873(t *testing.T) {
	result := operations.DivideBy3873(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3874(t *testing.T) {
	result := operations.DivideBy3874(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3875(t *testing.T) {
	result := operations.DivideBy3875(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3876(t *testing.T) {
	result := operations.DivideBy3876(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3877(t *testing.T) {
	result := operations.DivideBy3877(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3878(t *testing.T) {
	result := operations.DivideBy3878(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3879(t *testing.T) {
	result := operations.DivideBy3879(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3880(t *testing.T) {
	result := operations.DivideBy3880(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3881(t *testing.T) {
	result := operations.DivideBy3881(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3882(t *testing.T) {
	result := operations.DivideBy3882(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3883(t *testing.T) {
	result := operations.DivideBy3883(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3884(t *testing.T) {
	result := operations.DivideBy3884(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3885(t *testing.T) {
	result := operations.DivideBy3885(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3886(t *testing.T) {
	result := operations.DivideBy3886(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3887(t *testing.T) {
	result := operations.DivideBy3887(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3888(t *testing.T) {
	result := operations.DivideBy3888(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3889(t *testing.T) {
	result := operations.DivideBy3889(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3890(t *testing.T) {
	result := operations.DivideBy3890(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3891(t *testing.T) {
	result := operations.DivideBy3891(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3892(t *testing.T) {
	result := operations.DivideBy3892(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3893(t *testing.T) {
	result := operations.DivideBy3893(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3894(t *testing.T) {
	result := operations.DivideBy3894(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3895(t *testing.T) {
	result := operations.DivideBy3895(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3896(t *testing.T) {
	result := operations.DivideBy3896(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3897(t *testing.T) {
	result := operations.DivideBy3897(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3898(t *testing.T) {
	result := operations.DivideBy3898(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3899(t *testing.T) {
	result := operations.DivideBy3899(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3900(t *testing.T) {
	result := operations.DivideBy3900(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3901(t *testing.T) {
	result := operations.DivideBy3901(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3902(t *testing.T) {
	result := operations.DivideBy3902(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3903(t *testing.T) {
	result := operations.DivideBy3903(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3904(t *testing.T) {
	result := operations.DivideBy3904(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3905(t *testing.T) {
	result := operations.DivideBy3905(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3906(t *testing.T) {
	result := operations.DivideBy3906(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3907(t *testing.T) {
	result := operations.DivideBy3907(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3908(t *testing.T) {
	result := operations.DivideBy3908(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3909(t *testing.T) {
	result := operations.DivideBy3909(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3910(t *testing.T) {
	result := operations.DivideBy3910(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3911(t *testing.T) {
	result := operations.DivideBy3911(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3912(t *testing.T) {
	result := operations.DivideBy3912(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3913(t *testing.T) {
	result := operations.DivideBy3913(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3914(t *testing.T) {
	result := operations.DivideBy3914(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3915(t *testing.T) {
	result := operations.DivideBy3915(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3916(t *testing.T) {
	result := operations.DivideBy3916(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3917(t *testing.T) {
	result := operations.DivideBy3917(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3918(t *testing.T) {
	result := operations.DivideBy3918(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3919(t *testing.T) {
	result := operations.DivideBy3919(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3920(t *testing.T) {
	result := operations.DivideBy3920(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3921(t *testing.T) {
	result := operations.DivideBy3921(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3922(t *testing.T) {
	result := operations.DivideBy3922(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3923(t *testing.T) {
	result := operations.DivideBy3923(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3924(t *testing.T) {
	result := operations.DivideBy3924(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3925(t *testing.T) {
	result := operations.DivideBy3925(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3926(t *testing.T) {
	result := operations.DivideBy3926(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3927(t *testing.T) {
	result := operations.DivideBy3927(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3928(t *testing.T) {
	result := operations.DivideBy3928(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3929(t *testing.T) {
	result := operations.DivideBy3929(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3930(t *testing.T) {
	result := operations.DivideBy3930(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3931(t *testing.T) {
	result := operations.DivideBy3931(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3932(t *testing.T) {
	result := operations.DivideBy3932(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3933(t *testing.T) {
	result := operations.DivideBy3933(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3934(t *testing.T) {
	result := operations.DivideBy3934(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3935(t *testing.T) {
	result := operations.DivideBy3935(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3936(t *testing.T) {
	result := operations.DivideBy3936(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3937(t *testing.T) {
	result := operations.DivideBy3937(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3938(t *testing.T) {
	result := operations.DivideBy3938(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3939(t *testing.T) {
	result := operations.DivideBy3939(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3940(t *testing.T) {
	result := operations.DivideBy3940(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3941(t *testing.T) {
	result := operations.DivideBy3941(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3942(t *testing.T) {
	result := operations.DivideBy3942(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3943(t *testing.T) {
	result := operations.DivideBy3943(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3944(t *testing.T) {
	result := operations.DivideBy3944(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3945(t *testing.T) {
	result := operations.DivideBy3945(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3946(t *testing.T) {
	result := operations.DivideBy3946(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3947(t *testing.T) {
	result := operations.DivideBy3947(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3948(t *testing.T) {
	result := operations.DivideBy3948(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3949(t *testing.T) {
	result := operations.DivideBy3949(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3950(t *testing.T) {
	result := operations.DivideBy3950(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3951(t *testing.T) {
	result := operations.DivideBy3951(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3952(t *testing.T) {
	result := operations.DivideBy3952(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3953(t *testing.T) {
	result := operations.DivideBy3953(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3954(t *testing.T) {
	result := operations.DivideBy3954(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3955(t *testing.T) {
	result := operations.DivideBy3955(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3956(t *testing.T) {
	result := operations.DivideBy3956(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3957(t *testing.T) {
	result := operations.DivideBy3957(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3958(t *testing.T) {
	result := operations.DivideBy3958(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3959(t *testing.T) {
	result := operations.DivideBy3959(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3960(t *testing.T) {
	result := operations.DivideBy3960(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3961(t *testing.T) {
	result := operations.DivideBy3961(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3962(t *testing.T) {
	result := operations.DivideBy3962(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3963(t *testing.T) {
	result := operations.DivideBy3963(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3964(t *testing.T) {
	result := operations.DivideBy3964(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3965(t *testing.T) {
	result := operations.DivideBy3965(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3966(t *testing.T) {
	result := operations.DivideBy3966(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3967(t *testing.T) {
	result := operations.DivideBy3967(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3968(t *testing.T) {
	result := operations.DivideBy3968(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3969(t *testing.T) {
	result := operations.DivideBy3969(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3970(t *testing.T) {
	result := operations.DivideBy3970(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3971(t *testing.T) {
	result := operations.DivideBy3971(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3972(t *testing.T) {
	result := operations.DivideBy3972(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3973(t *testing.T) {
	result := operations.DivideBy3973(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3974(t *testing.T) {
	result := operations.DivideBy3974(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3975(t *testing.T) {
	result := operations.DivideBy3975(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3976(t *testing.T) {
	result := operations.DivideBy3976(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3977(t *testing.T) {
	result := operations.DivideBy3977(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3978(t *testing.T) {
	result := operations.DivideBy3978(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3979(t *testing.T) {
	result := operations.DivideBy3979(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3980(t *testing.T) {
	result := operations.DivideBy3980(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3981(t *testing.T) {
	result := operations.DivideBy3981(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3982(t *testing.T) {
	result := operations.DivideBy3982(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3983(t *testing.T) {
	result := operations.DivideBy3983(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3984(t *testing.T) {
	result := operations.DivideBy3984(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3985(t *testing.T) {
	result := operations.DivideBy3985(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3986(t *testing.T) {
	result := operations.DivideBy3986(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3987(t *testing.T) {
	result := operations.DivideBy3987(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3988(t *testing.T) {
	result := operations.DivideBy3988(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3989(t *testing.T) {
	result := operations.DivideBy3989(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3990(t *testing.T) {
	result := operations.DivideBy3990(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3991(t *testing.T) {
	result := operations.DivideBy3991(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3992(t *testing.T) {
	result := operations.DivideBy3992(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3993(t *testing.T) {
	result := operations.DivideBy3993(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3994(t *testing.T) {
	result := operations.DivideBy3994(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3995(t *testing.T) {
	result := operations.DivideBy3995(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3996(t *testing.T) {
	result := operations.DivideBy3996(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3997(t *testing.T) {
	result := operations.DivideBy3997(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3998(t *testing.T) {
	result := operations.DivideBy3998(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy3999(t *testing.T) {
	result := operations.DivideBy3999(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4000(t *testing.T) {
	result := operations.DivideBy4000(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4001(t *testing.T) {
	result := operations.DivideBy4001(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4002(t *testing.T) {
	result := operations.DivideBy4002(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4003(t *testing.T) {
	result := operations.DivideBy4003(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4004(t *testing.T) {
	result := operations.DivideBy4004(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4005(t *testing.T) {
	result := operations.DivideBy4005(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4006(t *testing.T) {
	result := operations.DivideBy4006(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4007(t *testing.T) {
	result := operations.DivideBy4007(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4008(t *testing.T) {
	result := operations.DivideBy4008(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4009(t *testing.T) {
	result := operations.DivideBy4009(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4010(t *testing.T) {
	result := operations.DivideBy4010(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4011(t *testing.T) {
	result := operations.DivideBy4011(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4012(t *testing.T) {
	result := operations.DivideBy4012(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4013(t *testing.T) {
	result := operations.DivideBy4013(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4014(t *testing.T) {
	result := operations.DivideBy4014(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4015(t *testing.T) {
	result := operations.DivideBy4015(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4016(t *testing.T) {
	result := operations.DivideBy4016(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4017(t *testing.T) {
	result := operations.DivideBy4017(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4018(t *testing.T) {
	result := operations.DivideBy4018(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4019(t *testing.T) {
	result := operations.DivideBy4019(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4020(t *testing.T) {
	result := operations.DivideBy4020(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4021(t *testing.T) {
	result := operations.DivideBy4021(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4022(t *testing.T) {
	result := operations.DivideBy4022(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4023(t *testing.T) {
	result := operations.DivideBy4023(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4024(t *testing.T) {
	result := operations.DivideBy4024(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4025(t *testing.T) {
	result := operations.DivideBy4025(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4026(t *testing.T) {
	result := operations.DivideBy4026(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4027(t *testing.T) {
	result := operations.DivideBy4027(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4028(t *testing.T) {
	result := operations.DivideBy4028(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4029(t *testing.T) {
	result := operations.DivideBy4029(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4030(t *testing.T) {
	result := operations.DivideBy4030(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4031(t *testing.T) {
	result := operations.DivideBy4031(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4032(t *testing.T) {
	result := operations.DivideBy4032(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4033(t *testing.T) {
	result := operations.DivideBy4033(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4034(t *testing.T) {
	result := operations.DivideBy4034(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4035(t *testing.T) {
	result := operations.DivideBy4035(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4036(t *testing.T) {
	result := operations.DivideBy4036(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4037(t *testing.T) {
	result := operations.DivideBy4037(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4038(t *testing.T) {
	result := operations.DivideBy4038(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4039(t *testing.T) {
	result := operations.DivideBy4039(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4040(t *testing.T) {
	result := operations.DivideBy4040(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4041(t *testing.T) {
	result := operations.DivideBy4041(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4042(t *testing.T) {
	result := operations.DivideBy4042(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4043(t *testing.T) {
	result := operations.DivideBy4043(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4044(t *testing.T) {
	result := operations.DivideBy4044(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4045(t *testing.T) {
	result := operations.DivideBy4045(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4046(t *testing.T) {
	result := operations.DivideBy4046(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4047(t *testing.T) {
	result := operations.DivideBy4047(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4048(t *testing.T) {
	result := operations.DivideBy4048(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4049(t *testing.T) {
	result := operations.DivideBy4049(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4050(t *testing.T) {
	result := operations.DivideBy4050(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4051(t *testing.T) {
	result := operations.DivideBy4051(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4052(t *testing.T) {
	result := operations.DivideBy4052(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4053(t *testing.T) {
	result := operations.DivideBy4053(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4054(t *testing.T) {
	result := operations.DivideBy4054(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4055(t *testing.T) {
	result := operations.DivideBy4055(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4056(t *testing.T) {
	result := operations.DivideBy4056(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4057(t *testing.T) {
	result := operations.DivideBy4057(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4058(t *testing.T) {
	result := operations.DivideBy4058(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4059(t *testing.T) {
	result := operations.DivideBy4059(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4060(t *testing.T) {
	result := operations.DivideBy4060(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4061(t *testing.T) {
	result := operations.DivideBy4061(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4062(t *testing.T) {
	result := operations.DivideBy4062(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4063(t *testing.T) {
	result := operations.DivideBy4063(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4064(t *testing.T) {
	result := operations.DivideBy4064(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4065(t *testing.T) {
	result := operations.DivideBy4065(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4066(t *testing.T) {
	result := operations.DivideBy4066(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4067(t *testing.T) {
	result := operations.DivideBy4067(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4068(t *testing.T) {
	result := operations.DivideBy4068(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4069(t *testing.T) {
	result := operations.DivideBy4069(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4070(t *testing.T) {
	result := operations.DivideBy4070(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4071(t *testing.T) {
	result := operations.DivideBy4071(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4072(t *testing.T) {
	result := operations.DivideBy4072(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4073(t *testing.T) {
	result := operations.DivideBy4073(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4074(t *testing.T) {
	result := operations.DivideBy4074(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4075(t *testing.T) {
	result := operations.DivideBy4075(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4076(t *testing.T) {
	result := operations.DivideBy4076(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4077(t *testing.T) {
	result := operations.DivideBy4077(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4078(t *testing.T) {
	result := operations.DivideBy4078(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4079(t *testing.T) {
	result := operations.DivideBy4079(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4080(t *testing.T) {
	result := operations.DivideBy4080(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4081(t *testing.T) {
	result := operations.DivideBy4081(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4082(t *testing.T) {
	result := operations.DivideBy4082(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4083(t *testing.T) {
	result := operations.DivideBy4083(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4084(t *testing.T) {
	result := operations.DivideBy4084(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4085(t *testing.T) {
	result := operations.DivideBy4085(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4086(t *testing.T) {
	result := operations.DivideBy4086(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4087(t *testing.T) {
	result := operations.DivideBy4087(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4088(t *testing.T) {
	result := operations.DivideBy4088(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4089(t *testing.T) {
	result := operations.DivideBy4089(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4090(t *testing.T) {
	result := operations.DivideBy4090(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4091(t *testing.T) {
	result := operations.DivideBy4091(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4092(t *testing.T) {
	result := operations.DivideBy4092(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4093(t *testing.T) {
	result := operations.DivideBy4093(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4094(t *testing.T) {
	result := operations.DivideBy4094(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4095(t *testing.T) {
	result := operations.DivideBy4095(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4096(t *testing.T) {
	result := operations.DivideBy4096(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4097(t *testing.T) {
	result := operations.DivideBy4097(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4098(t *testing.T) {
	result := operations.DivideBy4098(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4099(t *testing.T) {
	result := operations.DivideBy4099(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4100(t *testing.T) {
	result := operations.DivideBy4100(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4101(t *testing.T) {
	result := operations.DivideBy4101(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4102(t *testing.T) {
	result := operations.DivideBy4102(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4103(t *testing.T) {
	result := operations.DivideBy4103(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4104(t *testing.T) {
	result := operations.DivideBy4104(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4105(t *testing.T) {
	result := operations.DivideBy4105(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4106(t *testing.T) {
	result := operations.DivideBy4106(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4107(t *testing.T) {
	result := operations.DivideBy4107(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4108(t *testing.T) {
	result := operations.DivideBy4108(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4109(t *testing.T) {
	result := operations.DivideBy4109(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4110(t *testing.T) {
	result := operations.DivideBy4110(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4111(t *testing.T) {
	result := operations.DivideBy4111(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4112(t *testing.T) {
	result := operations.DivideBy4112(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4113(t *testing.T) {
	result := operations.DivideBy4113(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4114(t *testing.T) {
	result := operations.DivideBy4114(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4115(t *testing.T) {
	result := operations.DivideBy4115(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4116(t *testing.T) {
	result := operations.DivideBy4116(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4117(t *testing.T) {
	result := operations.DivideBy4117(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4118(t *testing.T) {
	result := operations.DivideBy4118(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4119(t *testing.T) {
	result := operations.DivideBy4119(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4120(t *testing.T) {
	result := operations.DivideBy4120(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4121(t *testing.T) {
	result := operations.DivideBy4121(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4122(t *testing.T) {
	result := operations.DivideBy4122(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4123(t *testing.T) {
	result := operations.DivideBy4123(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4124(t *testing.T) {
	result := operations.DivideBy4124(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4125(t *testing.T) {
	result := operations.DivideBy4125(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4126(t *testing.T) {
	result := operations.DivideBy4126(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4127(t *testing.T) {
	result := operations.DivideBy4127(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4128(t *testing.T) {
	result := operations.DivideBy4128(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4129(t *testing.T) {
	result := operations.DivideBy4129(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4130(t *testing.T) {
	result := operations.DivideBy4130(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4131(t *testing.T) {
	result := operations.DivideBy4131(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4132(t *testing.T) {
	result := operations.DivideBy4132(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4133(t *testing.T) {
	result := operations.DivideBy4133(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4134(t *testing.T) {
	result := operations.DivideBy4134(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4135(t *testing.T) {
	result := operations.DivideBy4135(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4136(t *testing.T) {
	result := operations.DivideBy4136(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4137(t *testing.T) {
	result := operations.DivideBy4137(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4138(t *testing.T) {
	result := operations.DivideBy4138(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4139(t *testing.T) {
	result := operations.DivideBy4139(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4140(t *testing.T) {
	result := operations.DivideBy4140(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4141(t *testing.T) {
	result := operations.DivideBy4141(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4142(t *testing.T) {
	result := operations.DivideBy4142(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4143(t *testing.T) {
	result := operations.DivideBy4143(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4144(t *testing.T) {
	result := operations.DivideBy4144(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4145(t *testing.T) {
	result := operations.DivideBy4145(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4146(t *testing.T) {
	result := operations.DivideBy4146(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4147(t *testing.T) {
	result := operations.DivideBy4147(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4148(t *testing.T) {
	result := operations.DivideBy4148(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4149(t *testing.T) {
	result := operations.DivideBy4149(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4150(t *testing.T) {
	result := operations.DivideBy4150(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4151(t *testing.T) {
	result := operations.DivideBy4151(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4152(t *testing.T) {
	result := operations.DivideBy4152(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4153(t *testing.T) {
	result := operations.DivideBy4153(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4154(t *testing.T) {
	result := operations.DivideBy4154(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4155(t *testing.T) {
	result := operations.DivideBy4155(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4156(t *testing.T) {
	result := operations.DivideBy4156(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4157(t *testing.T) {
	result := operations.DivideBy4157(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4158(t *testing.T) {
	result := operations.DivideBy4158(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4159(t *testing.T) {
	result := operations.DivideBy4159(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4160(t *testing.T) {
	result := operations.DivideBy4160(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4161(t *testing.T) {
	result := operations.DivideBy4161(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4162(t *testing.T) {
	result := operations.DivideBy4162(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4163(t *testing.T) {
	result := operations.DivideBy4163(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4164(t *testing.T) {
	result := operations.DivideBy4164(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4165(t *testing.T) {
	result := operations.DivideBy4165(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4166(t *testing.T) {
	result := operations.DivideBy4166(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4167(t *testing.T) {
	result := operations.DivideBy4167(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4168(t *testing.T) {
	result := operations.DivideBy4168(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4169(t *testing.T) {
	result := operations.DivideBy4169(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4170(t *testing.T) {
	result := operations.DivideBy4170(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4171(t *testing.T) {
	result := operations.DivideBy4171(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4172(t *testing.T) {
	result := operations.DivideBy4172(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4173(t *testing.T) {
	result := operations.DivideBy4173(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4174(t *testing.T) {
	result := operations.DivideBy4174(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4175(t *testing.T) {
	result := operations.DivideBy4175(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4176(t *testing.T) {
	result := operations.DivideBy4176(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4177(t *testing.T) {
	result := operations.DivideBy4177(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4178(t *testing.T) {
	result := operations.DivideBy4178(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4179(t *testing.T) {
	result := operations.DivideBy4179(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4180(t *testing.T) {
	result := operations.DivideBy4180(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4181(t *testing.T) {
	result := operations.DivideBy4181(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4182(t *testing.T) {
	result := operations.DivideBy4182(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4183(t *testing.T) {
	result := operations.DivideBy4183(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4184(t *testing.T) {
	result := operations.DivideBy4184(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4185(t *testing.T) {
	result := operations.DivideBy4185(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4186(t *testing.T) {
	result := operations.DivideBy4186(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4187(t *testing.T) {
	result := operations.DivideBy4187(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4188(t *testing.T) {
	result := operations.DivideBy4188(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4189(t *testing.T) {
	result := operations.DivideBy4189(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4190(t *testing.T) {
	result := operations.DivideBy4190(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4191(t *testing.T) {
	result := operations.DivideBy4191(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4192(t *testing.T) {
	result := operations.DivideBy4192(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4193(t *testing.T) {
	result := operations.DivideBy4193(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4194(t *testing.T) {
	result := operations.DivideBy4194(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4195(t *testing.T) {
	result := operations.DivideBy4195(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4196(t *testing.T) {
	result := operations.DivideBy4196(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4197(t *testing.T) {
	result := operations.DivideBy4197(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4198(t *testing.T) {
	result := operations.DivideBy4198(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4199(t *testing.T) {
	result := operations.DivideBy4199(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4200(t *testing.T) {
	result := operations.DivideBy4200(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4201(t *testing.T) {
	result := operations.DivideBy4201(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4202(t *testing.T) {
	result := operations.DivideBy4202(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4203(t *testing.T) {
	result := operations.DivideBy4203(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4204(t *testing.T) {
	result := operations.DivideBy4204(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4205(t *testing.T) {
	result := operations.DivideBy4205(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4206(t *testing.T) {
	result := operations.DivideBy4206(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4207(t *testing.T) {
	result := operations.DivideBy4207(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4208(t *testing.T) {
	result := operations.DivideBy4208(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4209(t *testing.T) {
	result := operations.DivideBy4209(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4210(t *testing.T) {
	result := operations.DivideBy4210(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4211(t *testing.T) {
	result := operations.DivideBy4211(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4212(t *testing.T) {
	result := operations.DivideBy4212(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4213(t *testing.T) {
	result := operations.DivideBy4213(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4214(t *testing.T) {
	result := operations.DivideBy4214(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4215(t *testing.T) {
	result := operations.DivideBy4215(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4216(t *testing.T) {
	result := operations.DivideBy4216(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4217(t *testing.T) {
	result := operations.DivideBy4217(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4218(t *testing.T) {
	result := operations.DivideBy4218(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4219(t *testing.T) {
	result := operations.DivideBy4219(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4220(t *testing.T) {
	result := operations.DivideBy4220(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4221(t *testing.T) {
	result := operations.DivideBy4221(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4222(t *testing.T) {
	result := operations.DivideBy4222(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4223(t *testing.T) {
	result := operations.DivideBy4223(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4224(t *testing.T) {
	result := operations.DivideBy4224(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4225(t *testing.T) {
	result := operations.DivideBy4225(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4226(t *testing.T) {
	result := operations.DivideBy4226(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4227(t *testing.T) {
	result := operations.DivideBy4227(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4228(t *testing.T) {
	result := operations.DivideBy4228(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4229(t *testing.T) {
	result := operations.DivideBy4229(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4230(t *testing.T) {
	result := operations.DivideBy4230(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4231(t *testing.T) {
	result := operations.DivideBy4231(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4232(t *testing.T) {
	result := operations.DivideBy4232(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4233(t *testing.T) {
	result := operations.DivideBy4233(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4234(t *testing.T) {
	result := operations.DivideBy4234(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4235(t *testing.T) {
	result := operations.DivideBy4235(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4236(t *testing.T) {
	result := operations.DivideBy4236(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4237(t *testing.T) {
	result := operations.DivideBy4237(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4238(t *testing.T) {
	result := operations.DivideBy4238(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4239(t *testing.T) {
	result := operations.DivideBy4239(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4240(t *testing.T) {
	result := operations.DivideBy4240(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4241(t *testing.T) {
	result := operations.DivideBy4241(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4242(t *testing.T) {
	result := operations.DivideBy4242(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4243(t *testing.T) {
	result := operations.DivideBy4243(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4244(t *testing.T) {
	result := operations.DivideBy4244(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4245(t *testing.T) {
	result := operations.DivideBy4245(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4246(t *testing.T) {
	result := operations.DivideBy4246(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4247(t *testing.T) {
	result := operations.DivideBy4247(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4248(t *testing.T) {
	result := operations.DivideBy4248(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4249(t *testing.T) {
	result := operations.DivideBy4249(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4250(t *testing.T) {
	result := operations.DivideBy4250(17000)
	
	if result != 4 {
		t.Errorf("Expected 4 but got %d", result)
	}
}

func TestDivideBy4251(t *testing.T) {
	result := operations.DivideBy4251(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4252(t *testing.T) {
	result := operations.DivideBy4252(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4253(t *testing.T) {
	result := operations.DivideBy4253(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4254(t *testing.T) {
	result := operations.DivideBy4254(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4255(t *testing.T) {
	result := operations.DivideBy4255(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4256(t *testing.T) {
	result := operations.DivideBy4256(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4257(t *testing.T) {
	result := operations.DivideBy4257(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4258(t *testing.T) {
	result := operations.DivideBy4258(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4259(t *testing.T) {
	result := operations.DivideBy4259(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4260(t *testing.T) {
	result := operations.DivideBy4260(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4261(t *testing.T) {
	result := operations.DivideBy4261(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4262(t *testing.T) {
	result := operations.DivideBy4262(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4263(t *testing.T) {
	result := operations.DivideBy4263(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4264(t *testing.T) {
	result := operations.DivideBy4264(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4265(t *testing.T) {
	result := operations.DivideBy4265(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4266(t *testing.T) {
	result := operations.DivideBy4266(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4267(t *testing.T) {
	result := operations.DivideBy4267(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4268(t *testing.T) {
	result := operations.DivideBy4268(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4269(t *testing.T) {
	result := operations.DivideBy4269(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4270(t *testing.T) {
	result := operations.DivideBy4270(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4271(t *testing.T) {
	result := operations.DivideBy4271(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4272(t *testing.T) {
	result := operations.DivideBy4272(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4273(t *testing.T) {
	result := operations.DivideBy4273(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4274(t *testing.T) {
	result := operations.DivideBy4274(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4275(t *testing.T) {
	result := operations.DivideBy4275(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4276(t *testing.T) {
	result := operations.DivideBy4276(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4277(t *testing.T) {
	result := operations.DivideBy4277(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4278(t *testing.T) {
	result := operations.DivideBy4278(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4279(t *testing.T) {
	result := operations.DivideBy4279(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4280(t *testing.T) {
	result := operations.DivideBy4280(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4281(t *testing.T) {
	result := operations.DivideBy4281(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4282(t *testing.T) {
	result := operations.DivideBy4282(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4283(t *testing.T) {
	result := operations.DivideBy4283(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4284(t *testing.T) {
	result := operations.DivideBy4284(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4285(t *testing.T) {
	result := operations.DivideBy4285(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4286(t *testing.T) {
	result := operations.DivideBy4286(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4287(t *testing.T) {
	result := operations.DivideBy4287(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4288(t *testing.T) {
	result := operations.DivideBy4288(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4289(t *testing.T) {
	result := operations.DivideBy4289(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4290(t *testing.T) {
	result := operations.DivideBy4290(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4291(t *testing.T) {
	result := operations.DivideBy4291(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4292(t *testing.T) {
	result := operations.DivideBy4292(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4293(t *testing.T) {
	result := operations.DivideBy4293(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4294(t *testing.T) {
	result := operations.DivideBy4294(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4295(t *testing.T) {
	result := operations.DivideBy4295(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4296(t *testing.T) {
	result := operations.DivideBy4296(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4297(t *testing.T) {
	result := operations.DivideBy4297(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4298(t *testing.T) {
	result := operations.DivideBy4298(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4299(t *testing.T) {
	result := operations.DivideBy4299(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4300(t *testing.T) {
	result := operations.DivideBy4300(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4301(t *testing.T) {
	result := operations.DivideBy4301(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4302(t *testing.T) {
	result := operations.DivideBy4302(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4303(t *testing.T) {
	result := operations.DivideBy4303(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4304(t *testing.T) {
	result := operations.DivideBy4304(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4305(t *testing.T) {
	result := operations.DivideBy4305(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4306(t *testing.T) {
	result := operations.DivideBy4306(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4307(t *testing.T) {
	result := operations.DivideBy4307(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4308(t *testing.T) {
	result := operations.DivideBy4308(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4309(t *testing.T) {
	result := operations.DivideBy4309(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4310(t *testing.T) {
	result := operations.DivideBy4310(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4311(t *testing.T) {
	result := operations.DivideBy4311(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4312(t *testing.T) {
	result := operations.DivideBy4312(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4313(t *testing.T) {
	result := operations.DivideBy4313(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4314(t *testing.T) {
	result := operations.DivideBy4314(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4315(t *testing.T) {
	result := operations.DivideBy4315(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4316(t *testing.T) {
	result := operations.DivideBy4316(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4317(t *testing.T) {
	result := operations.DivideBy4317(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4318(t *testing.T) {
	result := operations.DivideBy4318(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4319(t *testing.T) {
	result := operations.DivideBy4319(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4320(t *testing.T) {
	result := operations.DivideBy4320(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4321(t *testing.T) {
	result := operations.DivideBy4321(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4322(t *testing.T) {
	result := operations.DivideBy4322(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4323(t *testing.T) {
	result := operations.DivideBy4323(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4324(t *testing.T) {
	result := operations.DivideBy4324(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4325(t *testing.T) {
	result := operations.DivideBy4325(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4326(t *testing.T) {
	result := operations.DivideBy4326(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4327(t *testing.T) {
	result := operations.DivideBy4327(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4328(t *testing.T) {
	result := operations.DivideBy4328(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4329(t *testing.T) {
	result := operations.DivideBy4329(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4330(t *testing.T) {
	result := operations.DivideBy4330(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4331(t *testing.T) {
	result := operations.DivideBy4331(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4332(t *testing.T) {
	result := operations.DivideBy4332(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4333(t *testing.T) {
	result := operations.DivideBy4333(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4334(t *testing.T) {
	result := operations.DivideBy4334(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4335(t *testing.T) {
	result := operations.DivideBy4335(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4336(t *testing.T) {
	result := operations.DivideBy4336(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4337(t *testing.T) {
	result := operations.DivideBy4337(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4338(t *testing.T) {
	result := operations.DivideBy4338(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4339(t *testing.T) {
	result := operations.DivideBy4339(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4340(t *testing.T) {
	result := operations.DivideBy4340(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4341(t *testing.T) {
	result := operations.DivideBy4341(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4342(t *testing.T) {
	result := operations.DivideBy4342(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4343(t *testing.T) {
	result := operations.DivideBy4343(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4344(t *testing.T) {
	result := operations.DivideBy4344(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4345(t *testing.T) {
	result := operations.DivideBy4345(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4346(t *testing.T) {
	result := operations.DivideBy4346(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4347(t *testing.T) {
	result := operations.DivideBy4347(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4348(t *testing.T) {
	result := operations.DivideBy4348(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4349(t *testing.T) {
	result := operations.DivideBy4349(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4350(t *testing.T) {
	result := operations.DivideBy4350(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4351(t *testing.T) {
	result := operations.DivideBy4351(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4352(t *testing.T) {
	result := operations.DivideBy4352(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4353(t *testing.T) {
	result := operations.DivideBy4353(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4354(t *testing.T) {
	result := operations.DivideBy4354(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4355(t *testing.T) {
	result := operations.DivideBy4355(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4356(t *testing.T) {
	result := operations.DivideBy4356(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4357(t *testing.T) {
	result := operations.DivideBy4357(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4358(t *testing.T) {
	result := operations.DivideBy4358(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4359(t *testing.T) {
	result := operations.DivideBy4359(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4360(t *testing.T) {
	result := operations.DivideBy4360(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4361(t *testing.T) {
	result := operations.DivideBy4361(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4362(t *testing.T) {
	result := operations.DivideBy4362(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4363(t *testing.T) {
	result := operations.DivideBy4363(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4364(t *testing.T) {
	result := operations.DivideBy4364(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4365(t *testing.T) {
	result := operations.DivideBy4365(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4366(t *testing.T) {
	result := operations.DivideBy4366(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4367(t *testing.T) {
	result := operations.DivideBy4367(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4368(t *testing.T) {
	result := operations.DivideBy4368(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4369(t *testing.T) {
	result := operations.DivideBy4369(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4370(t *testing.T) {
	result := operations.DivideBy4370(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4371(t *testing.T) {
	result := operations.DivideBy4371(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4372(t *testing.T) {
	result := operations.DivideBy4372(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4373(t *testing.T) {
	result := operations.DivideBy4373(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4374(t *testing.T) {
	result := operations.DivideBy4374(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4375(t *testing.T) {
	result := operations.DivideBy4375(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4376(t *testing.T) {
	result := operations.DivideBy4376(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4377(t *testing.T) {
	result := operations.DivideBy4377(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4378(t *testing.T) {
	result := operations.DivideBy4378(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4379(t *testing.T) {
	result := operations.DivideBy4379(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4380(t *testing.T) {
	result := operations.DivideBy4380(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4381(t *testing.T) {
	result := operations.DivideBy4381(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4382(t *testing.T) {
	result := operations.DivideBy4382(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4383(t *testing.T) {
	result := operations.DivideBy4383(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4384(t *testing.T) {
	result := operations.DivideBy4384(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4385(t *testing.T) {
	result := operations.DivideBy4385(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4386(t *testing.T) {
	result := operations.DivideBy4386(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4387(t *testing.T) {
	result := operations.DivideBy4387(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4388(t *testing.T) {
	result := operations.DivideBy4388(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4389(t *testing.T) {
	result := operations.DivideBy4389(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4390(t *testing.T) {
	result := operations.DivideBy4390(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4391(t *testing.T) {
	result := operations.DivideBy4391(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4392(t *testing.T) {
	result := operations.DivideBy4392(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4393(t *testing.T) {
	result := operations.DivideBy4393(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4394(t *testing.T) {
	result := operations.DivideBy4394(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4395(t *testing.T) {
	result := operations.DivideBy4395(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4396(t *testing.T) {
	result := operations.DivideBy4396(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4397(t *testing.T) {
	result := operations.DivideBy4397(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4398(t *testing.T) {
	result := operations.DivideBy4398(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4399(t *testing.T) {
	result := operations.DivideBy4399(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4400(t *testing.T) {
	result := operations.DivideBy4400(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4401(t *testing.T) {
	result := operations.DivideBy4401(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4402(t *testing.T) {
	result := operations.DivideBy4402(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4403(t *testing.T) {
	result := operations.DivideBy4403(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4404(t *testing.T) {
	result := operations.DivideBy4404(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4405(t *testing.T) {
	result := operations.DivideBy4405(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4406(t *testing.T) {
	result := operations.DivideBy4406(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4407(t *testing.T) {
	result := operations.DivideBy4407(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4408(t *testing.T) {
	result := operations.DivideBy4408(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4409(t *testing.T) {
	result := operations.DivideBy4409(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4410(t *testing.T) {
	result := operations.DivideBy4410(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4411(t *testing.T) {
	result := operations.DivideBy4411(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4412(t *testing.T) {
	result := operations.DivideBy4412(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4413(t *testing.T) {
	result := operations.DivideBy4413(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4414(t *testing.T) {
	result := operations.DivideBy4414(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4415(t *testing.T) {
	result := operations.DivideBy4415(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4416(t *testing.T) {
	result := operations.DivideBy4416(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4417(t *testing.T) {
	result := operations.DivideBy4417(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4418(t *testing.T) {
	result := operations.DivideBy4418(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4419(t *testing.T) {
	result := operations.DivideBy4419(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4420(t *testing.T) {
	result := operations.DivideBy4420(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4421(t *testing.T) {
	result := operations.DivideBy4421(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4422(t *testing.T) {
	result := operations.DivideBy4422(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4423(t *testing.T) {
	result := operations.DivideBy4423(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4424(t *testing.T) {
	result := operations.DivideBy4424(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4425(t *testing.T) {
	result := operations.DivideBy4425(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4426(t *testing.T) {
	result := operations.DivideBy4426(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4427(t *testing.T) {
	result := operations.DivideBy4427(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4428(t *testing.T) {
	result := operations.DivideBy4428(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4429(t *testing.T) {
	result := operations.DivideBy4429(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4430(t *testing.T) {
	result := operations.DivideBy4430(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4431(t *testing.T) {
	result := operations.DivideBy4431(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4432(t *testing.T) {
	result := operations.DivideBy4432(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4433(t *testing.T) {
	result := operations.DivideBy4433(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4434(t *testing.T) {
	result := operations.DivideBy4434(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4435(t *testing.T) {
	result := operations.DivideBy4435(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4436(t *testing.T) {
	result := operations.DivideBy4436(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4437(t *testing.T) {
	result := operations.DivideBy4437(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4438(t *testing.T) {
	result := operations.DivideBy4438(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4439(t *testing.T) {
	result := operations.DivideBy4439(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4440(t *testing.T) {
	result := operations.DivideBy4440(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4441(t *testing.T) {
	result := operations.DivideBy4441(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4442(t *testing.T) {
	result := operations.DivideBy4442(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4443(t *testing.T) {
	result := operations.DivideBy4443(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4444(t *testing.T) {
	result := operations.DivideBy4444(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4445(t *testing.T) {
	result := operations.DivideBy4445(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4446(t *testing.T) {
	result := operations.DivideBy4446(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4447(t *testing.T) {
	result := operations.DivideBy4447(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4448(t *testing.T) {
	result := operations.DivideBy4448(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4449(t *testing.T) {
	result := operations.DivideBy4449(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4450(t *testing.T) {
	result := operations.DivideBy4450(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4451(t *testing.T) {
	result := operations.DivideBy4451(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4452(t *testing.T) {
	result := operations.DivideBy4452(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4453(t *testing.T) {
	result := operations.DivideBy4453(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4454(t *testing.T) {
	result := operations.DivideBy4454(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4455(t *testing.T) {
	result := operations.DivideBy4455(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4456(t *testing.T) {
	result := operations.DivideBy4456(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4457(t *testing.T) {
	result := operations.DivideBy4457(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4458(t *testing.T) {
	result := operations.DivideBy4458(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4459(t *testing.T) {
	result := operations.DivideBy4459(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4460(t *testing.T) {
	result := operations.DivideBy4460(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4461(t *testing.T) {
	result := operations.DivideBy4461(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4462(t *testing.T) {
	result := operations.DivideBy4462(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4463(t *testing.T) {
	result := operations.DivideBy4463(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4464(t *testing.T) {
	result := operations.DivideBy4464(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4465(t *testing.T) {
	result := operations.DivideBy4465(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4466(t *testing.T) {
	result := operations.DivideBy4466(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4467(t *testing.T) {
	result := operations.DivideBy4467(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4468(t *testing.T) {
	result := operations.DivideBy4468(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4469(t *testing.T) {
	result := operations.DivideBy4469(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4470(t *testing.T) {
	result := operations.DivideBy4470(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4471(t *testing.T) {
	result := operations.DivideBy4471(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4472(t *testing.T) {
	result := operations.DivideBy4472(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4473(t *testing.T) {
	result := operations.DivideBy4473(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4474(t *testing.T) {
	result := operations.DivideBy4474(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4475(t *testing.T) {
	result := operations.DivideBy4475(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4476(t *testing.T) {
	result := operations.DivideBy4476(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4477(t *testing.T) {
	result := operations.DivideBy4477(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4478(t *testing.T) {
	result := operations.DivideBy4478(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4479(t *testing.T) {
	result := operations.DivideBy4479(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4480(t *testing.T) {
	result := operations.DivideBy4480(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4481(t *testing.T) {
	result := operations.DivideBy4481(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4482(t *testing.T) {
	result := operations.DivideBy4482(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4483(t *testing.T) {
	result := operations.DivideBy4483(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4484(t *testing.T) {
	result := operations.DivideBy4484(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4485(t *testing.T) {
	result := operations.DivideBy4485(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4486(t *testing.T) {
	result := operations.DivideBy4486(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4487(t *testing.T) {
	result := operations.DivideBy4487(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4488(t *testing.T) {
	result := operations.DivideBy4488(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4489(t *testing.T) {
	result := operations.DivideBy4489(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4490(t *testing.T) {
	result := operations.DivideBy4490(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4491(t *testing.T) {
	result := operations.DivideBy4491(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4492(t *testing.T) {
	result := operations.DivideBy4492(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4493(t *testing.T) {
	result := operations.DivideBy4493(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4494(t *testing.T) {
	result := operations.DivideBy4494(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4495(t *testing.T) {
	result := operations.DivideBy4495(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4496(t *testing.T) {
	result := operations.DivideBy4496(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4497(t *testing.T) {
	result := operations.DivideBy4497(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4498(t *testing.T) {
	result := operations.DivideBy4498(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4499(t *testing.T) {
	result := operations.DivideBy4499(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4500(t *testing.T) {
	result := operations.DivideBy4500(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4501(t *testing.T) {
	result := operations.DivideBy4501(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4502(t *testing.T) {
	result := operations.DivideBy4502(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4503(t *testing.T) {
	result := operations.DivideBy4503(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4504(t *testing.T) {
	result := operations.DivideBy4504(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4505(t *testing.T) {
	result := operations.DivideBy4505(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4506(t *testing.T) {
	result := operations.DivideBy4506(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4507(t *testing.T) {
	result := operations.DivideBy4507(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4508(t *testing.T) {
	result := operations.DivideBy4508(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4509(t *testing.T) {
	result := operations.DivideBy4509(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4510(t *testing.T) {
	result := operations.DivideBy4510(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4511(t *testing.T) {
	result := operations.DivideBy4511(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4512(t *testing.T) {
	result := operations.DivideBy4512(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4513(t *testing.T) {
	result := operations.DivideBy4513(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4514(t *testing.T) {
	result := operations.DivideBy4514(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4515(t *testing.T) {
	result := operations.DivideBy4515(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4516(t *testing.T) {
	result := operations.DivideBy4516(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4517(t *testing.T) {
	result := operations.DivideBy4517(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4518(t *testing.T) {
	result := operations.DivideBy4518(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4519(t *testing.T) {
	result := operations.DivideBy4519(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4520(t *testing.T) {
	result := operations.DivideBy4520(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4521(t *testing.T) {
	result := operations.DivideBy4521(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4522(t *testing.T) {
	result := operations.DivideBy4522(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4523(t *testing.T) {
	result := operations.DivideBy4523(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4524(t *testing.T) {
	result := operations.DivideBy4524(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4525(t *testing.T) {
	result := operations.DivideBy4525(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4526(t *testing.T) {
	result := operations.DivideBy4526(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4527(t *testing.T) {
	result := operations.DivideBy4527(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4528(t *testing.T) {
	result := operations.DivideBy4528(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4529(t *testing.T) {
	result := operations.DivideBy4529(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4530(t *testing.T) {
	result := operations.DivideBy4530(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4531(t *testing.T) {
	result := operations.DivideBy4531(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4532(t *testing.T) {
	result := operations.DivideBy4532(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4533(t *testing.T) {
	result := operations.DivideBy4533(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4534(t *testing.T) {
	result := operations.DivideBy4534(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4535(t *testing.T) {
	result := operations.DivideBy4535(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4536(t *testing.T) {
	result := operations.DivideBy4536(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4537(t *testing.T) {
	result := operations.DivideBy4537(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4538(t *testing.T) {
	result := operations.DivideBy4538(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4539(t *testing.T) {
	result := operations.DivideBy4539(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4540(t *testing.T) {
	result := operations.DivideBy4540(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4541(t *testing.T) {
	result := operations.DivideBy4541(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4542(t *testing.T) {
	result := operations.DivideBy4542(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4543(t *testing.T) {
	result := operations.DivideBy4543(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4544(t *testing.T) {
	result := operations.DivideBy4544(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4545(t *testing.T) {
	result := operations.DivideBy4545(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4546(t *testing.T) {
	result := operations.DivideBy4546(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4547(t *testing.T) {
	result := operations.DivideBy4547(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4548(t *testing.T) {
	result := operations.DivideBy4548(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4549(t *testing.T) {
	result := operations.DivideBy4549(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4550(t *testing.T) {
	result := operations.DivideBy4550(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4551(t *testing.T) {
	result := operations.DivideBy4551(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4552(t *testing.T) {
	result := operations.DivideBy4552(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4553(t *testing.T) {
	result := operations.DivideBy4553(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4554(t *testing.T) {
	result := operations.DivideBy4554(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4555(t *testing.T) {
	result := operations.DivideBy4555(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4556(t *testing.T) {
	result := operations.DivideBy4556(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4557(t *testing.T) {
	result := operations.DivideBy4557(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4558(t *testing.T) {
	result := operations.DivideBy4558(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4559(t *testing.T) {
	result := operations.DivideBy4559(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4560(t *testing.T) {
	result := operations.DivideBy4560(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4561(t *testing.T) {
	result := operations.DivideBy4561(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4562(t *testing.T) {
	result := operations.DivideBy4562(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4563(t *testing.T) {
	result := operations.DivideBy4563(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4564(t *testing.T) {
	result := operations.DivideBy4564(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4565(t *testing.T) {
	result := operations.DivideBy4565(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4566(t *testing.T) {
	result := operations.DivideBy4566(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4567(t *testing.T) {
	result := operations.DivideBy4567(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4568(t *testing.T) {
	result := operations.DivideBy4568(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4569(t *testing.T) {
	result := operations.DivideBy4569(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4570(t *testing.T) {
	result := operations.DivideBy4570(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4571(t *testing.T) {
	result := operations.DivideBy4571(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4572(t *testing.T) {
	result := operations.DivideBy4572(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4573(t *testing.T) {
	result := operations.DivideBy4573(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4574(t *testing.T) {
	result := operations.DivideBy4574(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4575(t *testing.T) {
	result := operations.DivideBy4575(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4576(t *testing.T) {
	result := operations.DivideBy4576(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4577(t *testing.T) {
	result := operations.DivideBy4577(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4578(t *testing.T) {
	result := operations.DivideBy4578(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4579(t *testing.T) {
	result := operations.DivideBy4579(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4580(t *testing.T) {
	result := operations.DivideBy4580(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4581(t *testing.T) {
	result := operations.DivideBy4581(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4582(t *testing.T) {
	result := operations.DivideBy4582(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4583(t *testing.T) {
	result := operations.DivideBy4583(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4584(t *testing.T) {
	result := operations.DivideBy4584(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4585(t *testing.T) {
	result := operations.DivideBy4585(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4586(t *testing.T) {
	result := operations.DivideBy4586(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4587(t *testing.T) {
	result := operations.DivideBy4587(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4588(t *testing.T) {
	result := operations.DivideBy4588(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4589(t *testing.T) {
	result := operations.DivideBy4589(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4590(t *testing.T) {
	result := operations.DivideBy4590(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4591(t *testing.T) {
	result := operations.DivideBy4591(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4592(t *testing.T) {
	result := operations.DivideBy4592(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4593(t *testing.T) {
	result := operations.DivideBy4593(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4594(t *testing.T) {
	result := operations.DivideBy4594(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4595(t *testing.T) {
	result := operations.DivideBy4595(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4596(t *testing.T) {
	result := operations.DivideBy4596(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4597(t *testing.T) {
	result := operations.DivideBy4597(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4598(t *testing.T) {
	result := operations.DivideBy4598(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4599(t *testing.T) {
	result := operations.DivideBy4599(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4600(t *testing.T) {
	result := operations.DivideBy4600(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4601(t *testing.T) {
	result := operations.DivideBy4601(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4602(t *testing.T) {
	result := operations.DivideBy4602(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4603(t *testing.T) {
	result := operations.DivideBy4603(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4604(t *testing.T) {
	result := operations.DivideBy4604(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4605(t *testing.T) {
	result := operations.DivideBy4605(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4606(t *testing.T) {
	result := operations.DivideBy4606(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4607(t *testing.T) {
	result := operations.DivideBy4607(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4608(t *testing.T) {
	result := operations.DivideBy4608(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4609(t *testing.T) {
	result := operations.DivideBy4609(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4610(t *testing.T) {
	result := operations.DivideBy4610(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4611(t *testing.T) {
	result := operations.DivideBy4611(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4612(t *testing.T) {
	result := operations.DivideBy4612(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4613(t *testing.T) {
	result := operations.DivideBy4613(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4614(t *testing.T) {
	result := operations.DivideBy4614(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4615(t *testing.T) {
	result := operations.DivideBy4615(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4616(t *testing.T) {
	result := operations.DivideBy4616(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4617(t *testing.T) {
	result := operations.DivideBy4617(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4618(t *testing.T) {
	result := operations.DivideBy4618(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4619(t *testing.T) {
	result := operations.DivideBy4619(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4620(t *testing.T) {
	result := operations.DivideBy4620(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4621(t *testing.T) {
	result := operations.DivideBy4621(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4622(t *testing.T) {
	result := operations.DivideBy4622(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4623(t *testing.T) {
	result := operations.DivideBy4623(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4624(t *testing.T) {
	result := operations.DivideBy4624(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4625(t *testing.T) {
	result := operations.DivideBy4625(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4626(t *testing.T) {
	result := operations.DivideBy4626(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4627(t *testing.T) {
	result := operations.DivideBy4627(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4628(t *testing.T) {
	result := operations.DivideBy4628(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4629(t *testing.T) {
	result := operations.DivideBy4629(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4630(t *testing.T) {
	result := operations.DivideBy4630(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4631(t *testing.T) {
	result := operations.DivideBy4631(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4632(t *testing.T) {
	result := operations.DivideBy4632(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4633(t *testing.T) {
	result := operations.DivideBy4633(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4634(t *testing.T) {
	result := operations.DivideBy4634(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4635(t *testing.T) {
	result := operations.DivideBy4635(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4636(t *testing.T) {
	result := operations.DivideBy4636(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4637(t *testing.T) {
	result := operations.DivideBy4637(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4638(t *testing.T) {
	result := operations.DivideBy4638(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4639(t *testing.T) {
	result := operations.DivideBy4639(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4640(t *testing.T) {
	result := operations.DivideBy4640(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4641(t *testing.T) {
	result := operations.DivideBy4641(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4642(t *testing.T) {
	result := operations.DivideBy4642(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4643(t *testing.T) {
	result := operations.DivideBy4643(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4644(t *testing.T) {
	result := operations.DivideBy4644(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4645(t *testing.T) {
	result := operations.DivideBy4645(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4646(t *testing.T) {
	result := operations.DivideBy4646(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4647(t *testing.T) {
	result := operations.DivideBy4647(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4648(t *testing.T) {
	result := operations.DivideBy4648(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4649(t *testing.T) {
	result := operations.DivideBy4649(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4650(t *testing.T) {
	result := operations.DivideBy4650(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4651(t *testing.T) {
	result := operations.DivideBy4651(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4652(t *testing.T) {
	result := operations.DivideBy4652(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4653(t *testing.T) {
	result := operations.DivideBy4653(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4654(t *testing.T) {
	result := operations.DivideBy4654(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4655(t *testing.T) {
	result := operations.DivideBy4655(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4656(t *testing.T) {
	result := operations.DivideBy4656(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4657(t *testing.T) {
	result := operations.DivideBy4657(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4658(t *testing.T) {
	result := operations.DivideBy4658(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4659(t *testing.T) {
	result := operations.DivideBy4659(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4660(t *testing.T) {
	result := operations.DivideBy4660(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4661(t *testing.T) {
	result := operations.DivideBy4661(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4662(t *testing.T) {
	result := operations.DivideBy4662(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4663(t *testing.T) {
	result := operations.DivideBy4663(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4664(t *testing.T) {
	result := operations.DivideBy4664(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4665(t *testing.T) {
	result := operations.DivideBy4665(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4666(t *testing.T) {
	result := operations.DivideBy4666(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4667(t *testing.T) {
	result := operations.DivideBy4667(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4668(t *testing.T) {
	result := operations.DivideBy4668(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4669(t *testing.T) {
	result := operations.DivideBy4669(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4670(t *testing.T) {
	result := operations.DivideBy4670(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4671(t *testing.T) {
	result := operations.DivideBy4671(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4672(t *testing.T) {
	result := operations.DivideBy4672(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4673(t *testing.T) {
	result := operations.DivideBy4673(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4674(t *testing.T) {
	result := operations.DivideBy4674(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4675(t *testing.T) {
	result := operations.DivideBy4675(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4676(t *testing.T) {
	result := operations.DivideBy4676(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4677(t *testing.T) {
	result := operations.DivideBy4677(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4678(t *testing.T) {
	result := operations.DivideBy4678(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4679(t *testing.T) {
	result := operations.DivideBy4679(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4680(t *testing.T) {
	result := operations.DivideBy4680(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4681(t *testing.T) {
	result := operations.DivideBy4681(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4682(t *testing.T) {
	result := operations.DivideBy4682(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4683(t *testing.T) {
	result := operations.DivideBy4683(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4684(t *testing.T) {
	result := operations.DivideBy4684(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4685(t *testing.T) {
	result := operations.DivideBy4685(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4686(t *testing.T) {
	result := operations.DivideBy4686(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4687(t *testing.T) {
	result := operations.DivideBy4687(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4688(t *testing.T) {
	result := operations.DivideBy4688(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4689(t *testing.T) {
	result := operations.DivideBy4689(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4690(t *testing.T) {
	result := operations.DivideBy4690(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4691(t *testing.T) {
	result := operations.DivideBy4691(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4692(t *testing.T) {
	result := operations.DivideBy4692(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4693(t *testing.T) {
	result := operations.DivideBy4693(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4694(t *testing.T) {
	result := operations.DivideBy4694(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4695(t *testing.T) {
	result := operations.DivideBy4695(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4696(t *testing.T) {
	result := operations.DivideBy4696(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4697(t *testing.T) {
	result := operations.DivideBy4697(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4698(t *testing.T) {
	result := operations.DivideBy4698(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4699(t *testing.T) {
	result := operations.DivideBy4699(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4700(t *testing.T) {
	result := operations.DivideBy4700(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4701(t *testing.T) {
	result := operations.DivideBy4701(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4702(t *testing.T) {
	result := operations.DivideBy4702(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4703(t *testing.T) {
	result := operations.DivideBy4703(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4704(t *testing.T) {
	result := operations.DivideBy4704(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4705(t *testing.T) {
	result := operations.DivideBy4705(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4706(t *testing.T) {
	result := operations.DivideBy4706(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4707(t *testing.T) {
	result := operations.DivideBy4707(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4708(t *testing.T) {
	result := operations.DivideBy4708(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4709(t *testing.T) {
	result := operations.DivideBy4709(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4710(t *testing.T) {
	result := operations.DivideBy4710(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4711(t *testing.T) {
	result := operations.DivideBy4711(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4712(t *testing.T) {
	result := operations.DivideBy4712(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4713(t *testing.T) {
	result := operations.DivideBy4713(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4714(t *testing.T) {
	result := operations.DivideBy4714(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4715(t *testing.T) {
	result := operations.DivideBy4715(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4716(t *testing.T) {
	result := operations.DivideBy4716(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4717(t *testing.T) {
	result := operations.DivideBy4717(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4718(t *testing.T) {
	result := operations.DivideBy4718(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4719(t *testing.T) {
	result := operations.DivideBy4719(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4720(t *testing.T) {
	result := operations.DivideBy4720(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4721(t *testing.T) {
	result := operations.DivideBy4721(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4722(t *testing.T) {
	result := operations.DivideBy4722(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4723(t *testing.T) {
	result := operations.DivideBy4723(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4724(t *testing.T) {
	result := operations.DivideBy4724(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4725(t *testing.T) {
	result := operations.DivideBy4725(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4726(t *testing.T) {
	result := operations.DivideBy4726(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4727(t *testing.T) {
	result := operations.DivideBy4727(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4728(t *testing.T) {
	result := operations.DivideBy4728(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4729(t *testing.T) {
	result := operations.DivideBy4729(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4730(t *testing.T) {
	result := operations.DivideBy4730(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4731(t *testing.T) {
	result := operations.DivideBy4731(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4732(t *testing.T) {
	result := operations.DivideBy4732(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4733(t *testing.T) {
	result := operations.DivideBy4733(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4734(t *testing.T) {
	result := operations.DivideBy4734(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4735(t *testing.T) {
	result := operations.DivideBy4735(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4736(t *testing.T) {
	result := operations.DivideBy4736(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4737(t *testing.T) {
	result := operations.DivideBy4737(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4738(t *testing.T) {
	result := operations.DivideBy4738(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4739(t *testing.T) {
	result := operations.DivideBy4739(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4740(t *testing.T) {
	result := operations.DivideBy4740(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4741(t *testing.T) {
	result := operations.DivideBy4741(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4742(t *testing.T) {
	result := operations.DivideBy4742(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4743(t *testing.T) {
	result := operations.DivideBy4743(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4744(t *testing.T) {
	result := operations.DivideBy4744(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4745(t *testing.T) {
	result := operations.DivideBy4745(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4746(t *testing.T) {
	result := operations.DivideBy4746(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4747(t *testing.T) {
	result := operations.DivideBy4747(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4748(t *testing.T) {
	result := operations.DivideBy4748(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4749(t *testing.T) {
	result := operations.DivideBy4749(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4750(t *testing.T) {
	result := operations.DivideBy4750(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4751(t *testing.T) {
	result := operations.DivideBy4751(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4752(t *testing.T) {
	result := operations.DivideBy4752(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4753(t *testing.T) {
	result := operations.DivideBy4753(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4754(t *testing.T) {
	result := operations.DivideBy4754(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4755(t *testing.T) {
	result := operations.DivideBy4755(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4756(t *testing.T) {
	result := operations.DivideBy4756(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4757(t *testing.T) {
	result := operations.DivideBy4757(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4758(t *testing.T) {
	result := operations.DivideBy4758(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4759(t *testing.T) {
	result := operations.DivideBy4759(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4760(t *testing.T) {
	result := operations.DivideBy4760(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4761(t *testing.T) {
	result := operations.DivideBy4761(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4762(t *testing.T) {
	result := operations.DivideBy4762(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4763(t *testing.T) {
	result := operations.DivideBy4763(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4764(t *testing.T) {
	result := operations.DivideBy4764(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4765(t *testing.T) {
	result := operations.DivideBy4765(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4766(t *testing.T) {
	result := operations.DivideBy4766(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4767(t *testing.T) {
	result := operations.DivideBy4767(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4768(t *testing.T) {
	result := operations.DivideBy4768(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4769(t *testing.T) {
	result := operations.DivideBy4769(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4770(t *testing.T) {
	result := operations.DivideBy4770(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4771(t *testing.T) {
	result := operations.DivideBy4771(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4772(t *testing.T) {
	result := operations.DivideBy4772(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4773(t *testing.T) {
	result := operations.DivideBy4773(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4774(t *testing.T) {
	result := operations.DivideBy4774(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4775(t *testing.T) {
	result := operations.DivideBy4775(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4776(t *testing.T) {
	result := operations.DivideBy4776(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4777(t *testing.T) {
	result := operations.DivideBy4777(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4778(t *testing.T) {
	result := operations.DivideBy4778(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4779(t *testing.T) {
	result := operations.DivideBy4779(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4780(t *testing.T) {
	result := operations.DivideBy4780(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4781(t *testing.T) {
	result := operations.DivideBy4781(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4782(t *testing.T) {
	result := operations.DivideBy4782(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4783(t *testing.T) {
	result := operations.DivideBy4783(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4784(t *testing.T) {
	result := operations.DivideBy4784(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4785(t *testing.T) {
	result := operations.DivideBy4785(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4786(t *testing.T) {
	result := operations.DivideBy4786(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4787(t *testing.T) {
	result := operations.DivideBy4787(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4788(t *testing.T) {
	result := operations.DivideBy4788(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4789(t *testing.T) {
	result := operations.DivideBy4789(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4790(t *testing.T) {
	result := operations.DivideBy4790(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4791(t *testing.T) {
	result := operations.DivideBy4791(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4792(t *testing.T) {
	result := operations.DivideBy4792(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4793(t *testing.T) {
	result := operations.DivideBy4793(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4794(t *testing.T) {
	result := operations.DivideBy4794(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4795(t *testing.T) {
	result := operations.DivideBy4795(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4796(t *testing.T) {
	result := operations.DivideBy4796(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4797(t *testing.T) {
	result := operations.DivideBy4797(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4798(t *testing.T) {
	result := operations.DivideBy4798(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4799(t *testing.T) {
	result := operations.DivideBy4799(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4800(t *testing.T) {
	result := operations.DivideBy4800(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4801(t *testing.T) {
	result := operations.DivideBy4801(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4802(t *testing.T) {
	result := operations.DivideBy4802(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4803(t *testing.T) {
	result := operations.DivideBy4803(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4804(t *testing.T) {
	result := operations.DivideBy4804(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4805(t *testing.T) {
	result := operations.DivideBy4805(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4806(t *testing.T) {
	result := operations.DivideBy4806(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4807(t *testing.T) {
	result := operations.DivideBy4807(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4808(t *testing.T) {
	result := operations.DivideBy4808(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4809(t *testing.T) {
	result := operations.DivideBy4809(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4810(t *testing.T) {
	result := operations.DivideBy4810(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4811(t *testing.T) {
	result := operations.DivideBy4811(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4812(t *testing.T) {
	result := operations.DivideBy4812(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4813(t *testing.T) {
	result := operations.DivideBy4813(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4814(t *testing.T) {
	result := operations.DivideBy4814(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4815(t *testing.T) {
	result := operations.DivideBy4815(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4816(t *testing.T) {
	result := operations.DivideBy4816(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4817(t *testing.T) {
	result := operations.DivideBy4817(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4818(t *testing.T) {
	result := operations.DivideBy4818(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4819(t *testing.T) {
	result := operations.DivideBy4819(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4820(t *testing.T) {
	result := operations.DivideBy4820(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4821(t *testing.T) {
	result := operations.DivideBy4821(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4822(t *testing.T) {
	result := operations.DivideBy4822(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4823(t *testing.T) {
	result := operations.DivideBy4823(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4824(t *testing.T) {
	result := operations.DivideBy4824(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4825(t *testing.T) {
	result := operations.DivideBy4825(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4826(t *testing.T) {
	result := operations.DivideBy4826(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4827(t *testing.T) {
	result := operations.DivideBy4827(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4828(t *testing.T) {
	result := operations.DivideBy4828(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4829(t *testing.T) {
	result := operations.DivideBy4829(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4830(t *testing.T) {
	result := operations.DivideBy4830(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4831(t *testing.T) {
	result := operations.DivideBy4831(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4832(t *testing.T) {
	result := operations.DivideBy4832(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4833(t *testing.T) {
	result := operations.DivideBy4833(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4834(t *testing.T) {
	result := operations.DivideBy4834(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4835(t *testing.T) {
	result := operations.DivideBy4835(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4836(t *testing.T) {
	result := operations.DivideBy4836(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4837(t *testing.T) {
	result := operations.DivideBy4837(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4838(t *testing.T) {
	result := operations.DivideBy4838(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4839(t *testing.T) {
	result := operations.DivideBy4839(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4840(t *testing.T) {
	result := operations.DivideBy4840(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4841(t *testing.T) {
	result := operations.DivideBy4841(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4842(t *testing.T) {
	result := operations.DivideBy4842(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4843(t *testing.T) {
	result := operations.DivideBy4843(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4844(t *testing.T) {
	result := operations.DivideBy4844(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4845(t *testing.T) {
	result := operations.DivideBy4845(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4846(t *testing.T) {
	result := operations.DivideBy4846(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4847(t *testing.T) {
	result := operations.DivideBy4847(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4848(t *testing.T) {
	result := operations.DivideBy4848(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4849(t *testing.T) {
	result := operations.DivideBy4849(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4850(t *testing.T) {
	result := operations.DivideBy4850(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4851(t *testing.T) {
	result := operations.DivideBy4851(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4852(t *testing.T) {
	result := operations.DivideBy4852(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4853(t *testing.T) {
	result := operations.DivideBy4853(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4854(t *testing.T) {
	result := operations.DivideBy4854(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4855(t *testing.T) {
	result := operations.DivideBy4855(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4856(t *testing.T) {
	result := operations.DivideBy4856(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4857(t *testing.T) {
	result := operations.DivideBy4857(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4858(t *testing.T) {
	result := operations.DivideBy4858(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4859(t *testing.T) {
	result := operations.DivideBy4859(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4860(t *testing.T) {
	result := operations.DivideBy4860(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4861(t *testing.T) {
	result := operations.DivideBy4861(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4862(t *testing.T) {
	result := operations.DivideBy4862(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4863(t *testing.T) {
	result := operations.DivideBy4863(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4864(t *testing.T) {
	result := operations.DivideBy4864(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4865(t *testing.T) {
	result := operations.DivideBy4865(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4866(t *testing.T) {
	result := operations.DivideBy4866(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4867(t *testing.T) {
	result := operations.DivideBy4867(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4868(t *testing.T) {
	result := operations.DivideBy4868(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4869(t *testing.T) {
	result := operations.DivideBy4869(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4870(t *testing.T) {
	result := operations.DivideBy4870(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4871(t *testing.T) {
	result := operations.DivideBy4871(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4872(t *testing.T) {
	result := operations.DivideBy4872(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4873(t *testing.T) {
	result := operations.DivideBy4873(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4874(t *testing.T) {
	result := operations.DivideBy4874(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4875(t *testing.T) {
	result := operations.DivideBy4875(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4876(t *testing.T) {
	result := operations.DivideBy4876(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4877(t *testing.T) {
	result := operations.DivideBy4877(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4878(t *testing.T) {
	result := operations.DivideBy4878(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4879(t *testing.T) {
	result := operations.DivideBy4879(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4880(t *testing.T) {
	result := operations.DivideBy4880(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4881(t *testing.T) {
	result := operations.DivideBy4881(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4882(t *testing.T) {
	result := operations.DivideBy4882(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4883(t *testing.T) {
	result := operations.DivideBy4883(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4884(t *testing.T) {
	result := operations.DivideBy4884(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4885(t *testing.T) {
	result := operations.DivideBy4885(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4886(t *testing.T) {
	result := operations.DivideBy4886(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4887(t *testing.T) {
	result := operations.DivideBy4887(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4888(t *testing.T) {
	result := operations.DivideBy4888(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4889(t *testing.T) {
	result := operations.DivideBy4889(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4890(t *testing.T) {
	result := operations.DivideBy4890(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4891(t *testing.T) {
	result := operations.DivideBy4891(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4892(t *testing.T) {
	result := operations.DivideBy4892(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4893(t *testing.T) {
	result := operations.DivideBy4893(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4894(t *testing.T) {
	result := operations.DivideBy4894(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4895(t *testing.T) {
	result := operations.DivideBy4895(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4896(t *testing.T) {
	result := operations.DivideBy4896(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4897(t *testing.T) {
	result := operations.DivideBy4897(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4898(t *testing.T) {
	result := operations.DivideBy4898(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4899(t *testing.T) {
	result := operations.DivideBy4899(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4900(t *testing.T) {
	result := operations.DivideBy4900(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4901(t *testing.T) {
	result := operations.DivideBy4901(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4902(t *testing.T) {
	result := operations.DivideBy4902(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4903(t *testing.T) {
	result := operations.DivideBy4903(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4904(t *testing.T) {
	result := operations.DivideBy4904(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4905(t *testing.T) {
	result := operations.DivideBy4905(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4906(t *testing.T) {
	result := operations.DivideBy4906(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4907(t *testing.T) {
	result := operations.DivideBy4907(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4908(t *testing.T) {
	result := operations.DivideBy4908(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4909(t *testing.T) {
	result := operations.DivideBy4909(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4910(t *testing.T) {
	result := operations.DivideBy4910(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4911(t *testing.T) {
	result := operations.DivideBy4911(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4912(t *testing.T) {
	result := operations.DivideBy4912(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4913(t *testing.T) {
	result := operations.DivideBy4913(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4914(t *testing.T) {
	result := operations.DivideBy4914(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4915(t *testing.T) {
	result := operations.DivideBy4915(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4916(t *testing.T) {
	result := operations.DivideBy4916(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4917(t *testing.T) {
	result := operations.DivideBy4917(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4918(t *testing.T) {
	result := operations.DivideBy4918(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4919(t *testing.T) {
	result := operations.DivideBy4919(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4920(t *testing.T) {
	result := operations.DivideBy4920(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4921(t *testing.T) {
	result := operations.DivideBy4921(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4922(t *testing.T) {
	result := operations.DivideBy4922(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4923(t *testing.T) {
	result := operations.DivideBy4923(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4924(t *testing.T) {
	result := operations.DivideBy4924(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4925(t *testing.T) {
	result := operations.DivideBy4925(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4926(t *testing.T) {
	result := operations.DivideBy4926(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4927(t *testing.T) {
	result := operations.DivideBy4927(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4928(t *testing.T) {
	result := operations.DivideBy4928(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4929(t *testing.T) {
	result := operations.DivideBy4929(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4930(t *testing.T) {
	result := operations.DivideBy4930(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4931(t *testing.T) {
	result := operations.DivideBy4931(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4932(t *testing.T) {
	result := operations.DivideBy4932(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4933(t *testing.T) {
	result := operations.DivideBy4933(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4934(t *testing.T) {
	result := operations.DivideBy4934(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4935(t *testing.T) {
	result := operations.DivideBy4935(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4936(t *testing.T) {
	result := operations.DivideBy4936(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4937(t *testing.T) {
	result := operations.DivideBy4937(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4938(t *testing.T) {
	result := operations.DivideBy4938(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4939(t *testing.T) {
	result := operations.DivideBy4939(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4940(t *testing.T) {
	result := operations.DivideBy4940(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4941(t *testing.T) {
	result := operations.DivideBy4941(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4942(t *testing.T) {
	result := operations.DivideBy4942(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4943(t *testing.T) {
	result := operations.DivideBy4943(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4944(t *testing.T) {
	result := operations.DivideBy4944(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4945(t *testing.T) {
	result := operations.DivideBy4945(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4946(t *testing.T) {
	result := operations.DivideBy4946(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4947(t *testing.T) {
	result := operations.DivideBy4947(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4948(t *testing.T) {
	result := operations.DivideBy4948(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4949(t *testing.T) {
	result := operations.DivideBy4949(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4950(t *testing.T) {
	result := operations.DivideBy4950(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4951(t *testing.T) {
	result := operations.DivideBy4951(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4952(t *testing.T) {
	result := operations.DivideBy4952(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4953(t *testing.T) {
	result := operations.DivideBy4953(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4954(t *testing.T) {
	result := operations.DivideBy4954(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4955(t *testing.T) {
	result := operations.DivideBy4955(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4956(t *testing.T) {
	result := operations.DivideBy4956(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4957(t *testing.T) {
	result := operations.DivideBy4957(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4958(t *testing.T) {
	result := operations.DivideBy4958(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4959(t *testing.T) {
	result := operations.DivideBy4959(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4960(t *testing.T) {
	result := operations.DivideBy4960(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4961(t *testing.T) {
	result := operations.DivideBy4961(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4962(t *testing.T) {
	result := operations.DivideBy4962(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4963(t *testing.T) {
	result := operations.DivideBy4963(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4964(t *testing.T) {
	result := operations.DivideBy4964(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4965(t *testing.T) {
	result := operations.DivideBy4965(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4966(t *testing.T) {
	result := operations.DivideBy4966(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4967(t *testing.T) {
	result := operations.DivideBy4967(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4968(t *testing.T) {
	result := operations.DivideBy4968(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4969(t *testing.T) {
	result := operations.DivideBy4969(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4970(t *testing.T) {
	result := operations.DivideBy4970(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4971(t *testing.T) {
	result := operations.DivideBy4971(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4972(t *testing.T) {
	result := operations.DivideBy4972(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4973(t *testing.T) {
	result := operations.DivideBy4973(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4974(t *testing.T) {
	result := operations.DivideBy4974(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4975(t *testing.T) {
	result := operations.DivideBy4975(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4976(t *testing.T) {
	result := operations.DivideBy4976(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4977(t *testing.T) {
	result := operations.DivideBy4977(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4978(t *testing.T) {
	result := operations.DivideBy4978(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4979(t *testing.T) {
	result := operations.DivideBy4979(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4980(t *testing.T) {
	result := operations.DivideBy4980(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4981(t *testing.T) {
	result := operations.DivideBy4981(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4982(t *testing.T) {
	result := operations.DivideBy4982(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4983(t *testing.T) {
	result := operations.DivideBy4983(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4984(t *testing.T) {
	result := operations.DivideBy4984(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4985(t *testing.T) {
	result := operations.DivideBy4985(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4986(t *testing.T) {
	result := operations.DivideBy4986(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4987(t *testing.T) {
	result := operations.DivideBy4987(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4988(t *testing.T) {
	result := operations.DivideBy4988(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4989(t *testing.T) {
	result := operations.DivideBy4989(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4990(t *testing.T) {
	result := operations.DivideBy4990(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4991(t *testing.T) {
	result := operations.DivideBy4991(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4992(t *testing.T) {
	result := operations.DivideBy4992(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4993(t *testing.T) {
	result := operations.DivideBy4993(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4994(t *testing.T) {
	result := operations.DivideBy4994(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4995(t *testing.T) {
	result := operations.DivideBy4995(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4996(t *testing.T) {
	result := operations.DivideBy4996(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4997(t *testing.T) {
	result := operations.DivideBy4997(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4998(t *testing.T) {
	result := operations.DivideBy4998(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy4999(t *testing.T) {
	result := operations.DivideBy4999(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5000(t *testing.T) {
	result := operations.DivideBy5000(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5001(t *testing.T) {
	result := operations.DivideBy5001(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5002(t *testing.T) {
	result := operations.DivideBy5002(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5003(t *testing.T) {
	result := operations.DivideBy5003(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5004(t *testing.T) {
	result := operations.DivideBy5004(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5005(t *testing.T) {
	result := operations.DivideBy5005(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5006(t *testing.T) {
	result := operations.DivideBy5006(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5007(t *testing.T) {
	result := operations.DivideBy5007(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5008(t *testing.T) {
	result := operations.DivideBy5008(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5009(t *testing.T) {
	result := operations.DivideBy5009(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5010(t *testing.T) {
	result := operations.DivideBy5010(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5011(t *testing.T) {
	result := operations.DivideBy5011(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5012(t *testing.T) {
	result := operations.DivideBy5012(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5013(t *testing.T) {
	result := operations.DivideBy5013(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5014(t *testing.T) {
	result := operations.DivideBy5014(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5015(t *testing.T) {
	result := operations.DivideBy5015(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5016(t *testing.T) {
	result := operations.DivideBy5016(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5017(t *testing.T) {
	result := operations.DivideBy5017(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5018(t *testing.T) {
	result := operations.DivideBy5018(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5019(t *testing.T) {
	result := operations.DivideBy5019(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5020(t *testing.T) {
	result := operations.DivideBy5020(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5021(t *testing.T) {
	result := operations.DivideBy5021(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5022(t *testing.T) {
	result := operations.DivideBy5022(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5023(t *testing.T) {
	result := operations.DivideBy5023(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5024(t *testing.T) {
	result := operations.DivideBy5024(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5025(t *testing.T) {
	result := operations.DivideBy5025(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5026(t *testing.T) {
	result := operations.DivideBy5026(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5027(t *testing.T) {
	result := operations.DivideBy5027(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5028(t *testing.T) {
	result := operations.DivideBy5028(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5029(t *testing.T) {
	result := operations.DivideBy5029(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5030(t *testing.T) {
	result := operations.DivideBy5030(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5031(t *testing.T) {
	result := operations.DivideBy5031(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5032(t *testing.T) {
	result := operations.DivideBy5032(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5033(t *testing.T) {
	result := operations.DivideBy5033(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5034(t *testing.T) {
	result := operations.DivideBy5034(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5035(t *testing.T) {
	result := operations.DivideBy5035(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5036(t *testing.T) {
	result := operations.DivideBy5036(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5037(t *testing.T) {
	result := operations.DivideBy5037(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5038(t *testing.T) {
	result := operations.DivideBy5038(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5039(t *testing.T) {
	result := operations.DivideBy5039(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5040(t *testing.T) {
	result := operations.DivideBy5040(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5041(t *testing.T) {
	result := operations.DivideBy5041(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5042(t *testing.T) {
	result := operations.DivideBy5042(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5043(t *testing.T) {
	result := operations.DivideBy5043(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5044(t *testing.T) {
	result := operations.DivideBy5044(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5045(t *testing.T) {
	result := operations.DivideBy5045(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5046(t *testing.T) {
	result := operations.DivideBy5046(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5047(t *testing.T) {
	result := operations.DivideBy5047(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5048(t *testing.T) {
	result := operations.DivideBy5048(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5049(t *testing.T) {
	result := operations.DivideBy5049(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5050(t *testing.T) {
	result := operations.DivideBy5050(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5051(t *testing.T) {
	result := operations.DivideBy5051(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5052(t *testing.T) {
	result := operations.DivideBy5052(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5053(t *testing.T) {
	result := operations.DivideBy5053(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5054(t *testing.T) {
	result := operations.DivideBy5054(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5055(t *testing.T) {
	result := operations.DivideBy5055(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5056(t *testing.T) {
	result := operations.DivideBy5056(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5057(t *testing.T) {
	result := operations.DivideBy5057(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5058(t *testing.T) {
	result := operations.DivideBy5058(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5059(t *testing.T) {
	result := operations.DivideBy5059(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5060(t *testing.T) {
	result := operations.DivideBy5060(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5061(t *testing.T) {
	result := operations.DivideBy5061(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5062(t *testing.T) {
	result := operations.DivideBy5062(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5063(t *testing.T) {
	result := operations.DivideBy5063(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5064(t *testing.T) {
	result := operations.DivideBy5064(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5065(t *testing.T) {
	result := operations.DivideBy5065(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5066(t *testing.T) {
	result := operations.DivideBy5066(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5067(t *testing.T) {
	result := operations.DivideBy5067(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5068(t *testing.T) {
	result := operations.DivideBy5068(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5069(t *testing.T) {
	result := operations.DivideBy5069(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5070(t *testing.T) {
	result := operations.DivideBy5070(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5071(t *testing.T) {
	result := operations.DivideBy5071(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5072(t *testing.T) {
	result := operations.DivideBy5072(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5073(t *testing.T) {
	result := operations.DivideBy5073(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5074(t *testing.T) {
	result := operations.DivideBy5074(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5075(t *testing.T) {
	result := operations.DivideBy5075(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5076(t *testing.T) {
	result := operations.DivideBy5076(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5077(t *testing.T) {
	result := operations.DivideBy5077(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5078(t *testing.T) {
	result := operations.DivideBy5078(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5079(t *testing.T) {
	result := operations.DivideBy5079(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5080(t *testing.T) {
	result := operations.DivideBy5080(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5081(t *testing.T) {
	result := operations.DivideBy5081(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5082(t *testing.T) {
	result := operations.DivideBy5082(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5083(t *testing.T) {
	result := operations.DivideBy5083(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5084(t *testing.T) {
	result := operations.DivideBy5084(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5085(t *testing.T) {
	result := operations.DivideBy5085(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5086(t *testing.T) {
	result := operations.DivideBy5086(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5087(t *testing.T) {
	result := operations.DivideBy5087(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5088(t *testing.T) {
	result := operations.DivideBy5088(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5089(t *testing.T) {
	result := operations.DivideBy5089(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5090(t *testing.T) {
	result := operations.DivideBy5090(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5091(t *testing.T) {
	result := operations.DivideBy5091(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5092(t *testing.T) {
	result := operations.DivideBy5092(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5093(t *testing.T) {
	result := operations.DivideBy5093(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5094(t *testing.T) {
	result := operations.DivideBy5094(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5095(t *testing.T) {
	result := operations.DivideBy5095(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5096(t *testing.T) {
	result := operations.DivideBy5096(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5097(t *testing.T) {
	result := operations.DivideBy5097(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5098(t *testing.T) {
	result := operations.DivideBy5098(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5099(t *testing.T) {
	result := operations.DivideBy5099(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5100(t *testing.T) {
	result := operations.DivideBy5100(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5101(t *testing.T) {
	result := operations.DivideBy5101(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5102(t *testing.T) {
	result := operations.DivideBy5102(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5103(t *testing.T) {
	result := operations.DivideBy5103(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5104(t *testing.T) {
	result := operations.DivideBy5104(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5105(t *testing.T) {
	result := operations.DivideBy5105(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5106(t *testing.T) {
	result := operations.DivideBy5106(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5107(t *testing.T) {
	result := operations.DivideBy5107(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5108(t *testing.T) {
	result := operations.DivideBy5108(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5109(t *testing.T) {
	result := operations.DivideBy5109(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5110(t *testing.T) {
	result := operations.DivideBy5110(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5111(t *testing.T) {
	result := operations.DivideBy5111(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5112(t *testing.T) {
	result := operations.DivideBy5112(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5113(t *testing.T) {
	result := operations.DivideBy5113(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5114(t *testing.T) {
	result := operations.DivideBy5114(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5115(t *testing.T) {
	result := operations.DivideBy5115(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5116(t *testing.T) {
	result := operations.DivideBy5116(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5117(t *testing.T) {
	result := operations.DivideBy5117(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5118(t *testing.T) {
	result := operations.DivideBy5118(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5119(t *testing.T) {
	result := operations.DivideBy5119(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5120(t *testing.T) {
	result := operations.DivideBy5120(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5121(t *testing.T) {
	result := operations.DivideBy5121(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5122(t *testing.T) {
	result := operations.DivideBy5122(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5123(t *testing.T) {
	result := operations.DivideBy5123(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5124(t *testing.T) {
	result := operations.DivideBy5124(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5125(t *testing.T) {
	result := operations.DivideBy5125(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5126(t *testing.T) {
	result := operations.DivideBy5126(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5127(t *testing.T) {
	result := operations.DivideBy5127(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5128(t *testing.T) {
	result := operations.DivideBy5128(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5129(t *testing.T) {
	result := operations.DivideBy5129(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5130(t *testing.T) {
	result := operations.DivideBy5130(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5131(t *testing.T) {
	result := operations.DivideBy5131(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5132(t *testing.T) {
	result := operations.DivideBy5132(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5133(t *testing.T) {
	result := operations.DivideBy5133(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5134(t *testing.T) {
	result := operations.DivideBy5134(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5135(t *testing.T) {
	result := operations.DivideBy5135(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5136(t *testing.T) {
	result := operations.DivideBy5136(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5137(t *testing.T) {
	result := operations.DivideBy5137(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5138(t *testing.T) {
	result := operations.DivideBy5138(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5139(t *testing.T) {
	result := operations.DivideBy5139(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5140(t *testing.T) {
	result := operations.DivideBy5140(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5141(t *testing.T) {
	result := operations.DivideBy5141(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5142(t *testing.T) {
	result := operations.DivideBy5142(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5143(t *testing.T) {
	result := operations.DivideBy5143(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5144(t *testing.T) {
	result := operations.DivideBy5144(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5145(t *testing.T) {
	result := operations.DivideBy5145(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5146(t *testing.T) {
	result := operations.DivideBy5146(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5147(t *testing.T) {
	result := operations.DivideBy5147(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5148(t *testing.T) {
	result := operations.DivideBy5148(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5149(t *testing.T) {
	result := operations.DivideBy5149(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5150(t *testing.T) {
	result := operations.DivideBy5150(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5151(t *testing.T) {
	result := operations.DivideBy5151(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5152(t *testing.T) {
	result := operations.DivideBy5152(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5153(t *testing.T) {
	result := operations.DivideBy5153(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5154(t *testing.T) {
	result := operations.DivideBy5154(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5155(t *testing.T) {
	result := operations.DivideBy5155(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5156(t *testing.T) {
	result := operations.DivideBy5156(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5157(t *testing.T) {
	result := operations.DivideBy5157(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5158(t *testing.T) {
	result := operations.DivideBy5158(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5159(t *testing.T) {
	result := operations.DivideBy5159(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5160(t *testing.T) {
	result := operations.DivideBy5160(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5161(t *testing.T) {
	result := operations.DivideBy5161(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5162(t *testing.T) {
	result := operations.DivideBy5162(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5163(t *testing.T) {
	result := operations.DivideBy5163(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5164(t *testing.T) {
	result := operations.DivideBy5164(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5165(t *testing.T) {
	result := operations.DivideBy5165(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5166(t *testing.T) {
	result := operations.DivideBy5166(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5167(t *testing.T) {
	result := operations.DivideBy5167(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5168(t *testing.T) {
	result := operations.DivideBy5168(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5169(t *testing.T) {
	result := operations.DivideBy5169(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5170(t *testing.T) {
	result := operations.DivideBy5170(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5171(t *testing.T) {
	result := operations.DivideBy5171(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5172(t *testing.T) {
	result := operations.DivideBy5172(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5173(t *testing.T) {
	result := operations.DivideBy5173(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5174(t *testing.T) {
	result := operations.DivideBy5174(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5175(t *testing.T) {
	result := operations.DivideBy5175(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5176(t *testing.T) {
	result := operations.DivideBy5176(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5177(t *testing.T) {
	result := operations.DivideBy5177(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5178(t *testing.T) {
	result := operations.DivideBy5178(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5179(t *testing.T) {
	result := operations.DivideBy5179(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5180(t *testing.T) {
	result := operations.DivideBy5180(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5181(t *testing.T) {
	result := operations.DivideBy5181(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5182(t *testing.T) {
	result := operations.DivideBy5182(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5183(t *testing.T) {
	result := operations.DivideBy5183(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5184(t *testing.T) {
	result := operations.DivideBy5184(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5185(t *testing.T) {
	result := operations.DivideBy5185(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5186(t *testing.T) {
	result := operations.DivideBy5186(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5187(t *testing.T) {
	result := operations.DivideBy5187(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5188(t *testing.T) {
	result := operations.DivideBy5188(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5189(t *testing.T) {
	result := operations.DivideBy5189(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5190(t *testing.T) {
	result := operations.DivideBy5190(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5191(t *testing.T) {
	result := operations.DivideBy5191(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5192(t *testing.T) {
	result := operations.DivideBy5192(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5193(t *testing.T) {
	result := operations.DivideBy5193(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5194(t *testing.T) {
	result := operations.DivideBy5194(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5195(t *testing.T) {
	result := operations.DivideBy5195(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5196(t *testing.T) {
	result := operations.DivideBy5196(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5197(t *testing.T) {
	result := operations.DivideBy5197(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5198(t *testing.T) {
	result := operations.DivideBy5198(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5199(t *testing.T) {
	result := operations.DivideBy5199(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5200(t *testing.T) {
	result := operations.DivideBy5200(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5201(t *testing.T) {
	result := operations.DivideBy5201(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5202(t *testing.T) {
	result := operations.DivideBy5202(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5203(t *testing.T) {
	result := operations.DivideBy5203(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5204(t *testing.T) {
	result := operations.DivideBy5204(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5205(t *testing.T) {
	result := operations.DivideBy5205(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5206(t *testing.T) {
	result := operations.DivideBy5206(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5207(t *testing.T) {
	result := operations.DivideBy5207(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5208(t *testing.T) {
	result := operations.DivideBy5208(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5209(t *testing.T) {
	result := operations.DivideBy5209(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5210(t *testing.T) {
	result := operations.DivideBy5210(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5211(t *testing.T) {
	result := operations.DivideBy5211(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5212(t *testing.T) {
	result := operations.DivideBy5212(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5213(t *testing.T) {
	result := operations.DivideBy5213(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5214(t *testing.T) {
	result := operations.DivideBy5214(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5215(t *testing.T) {
	result := operations.DivideBy5215(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5216(t *testing.T) {
	result := operations.DivideBy5216(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5217(t *testing.T) {
	result := operations.DivideBy5217(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5218(t *testing.T) {
	result := operations.DivideBy5218(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5219(t *testing.T) {
	result := operations.DivideBy5219(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5220(t *testing.T) {
	result := operations.DivideBy5220(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5221(t *testing.T) {
	result := operations.DivideBy5221(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5222(t *testing.T) {
	result := operations.DivideBy5222(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5223(t *testing.T) {
	result := operations.DivideBy5223(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5224(t *testing.T) {
	result := operations.DivideBy5224(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5225(t *testing.T) {
	result := operations.DivideBy5225(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5226(t *testing.T) {
	result := operations.DivideBy5226(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5227(t *testing.T) {
	result := operations.DivideBy5227(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5228(t *testing.T) {
	result := operations.DivideBy5228(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5229(t *testing.T) {
	result := operations.DivideBy5229(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5230(t *testing.T) {
	result := operations.DivideBy5230(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5231(t *testing.T) {
	result := operations.DivideBy5231(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5232(t *testing.T) {
	result := operations.DivideBy5232(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5233(t *testing.T) {
	result := operations.DivideBy5233(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5234(t *testing.T) {
	result := operations.DivideBy5234(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5235(t *testing.T) {
	result := operations.DivideBy5235(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5236(t *testing.T) {
	result := operations.DivideBy5236(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5237(t *testing.T) {
	result := operations.DivideBy5237(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5238(t *testing.T) {
	result := operations.DivideBy5238(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5239(t *testing.T) {
	result := operations.DivideBy5239(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5240(t *testing.T) {
	result := operations.DivideBy5240(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5241(t *testing.T) {
	result := operations.DivideBy5241(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5242(t *testing.T) {
	result := operations.DivideBy5242(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5243(t *testing.T) {
	result := operations.DivideBy5243(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5244(t *testing.T) {
	result := operations.DivideBy5244(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5245(t *testing.T) {
	result := operations.DivideBy5245(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5246(t *testing.T) {
	result := operations.DivideBy5246(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5247(t *testing.T) {
	result := operations.DivideBy5247(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5248(t *testing.T) {
	result := operations.DivideBy5248(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5249(t *testing.T) {
	result := operations.DivideBy5249(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5250(t *testing.T) {
	result := operations.DivideBy5250(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5251(t *testing.T) {
	result := operations.DivideBy5251(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5252(t *testing.T) {
	result := operations.DivideBy5252(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5253(t *testing.T) {
	result := operations.DivideBy5253(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5254(t *testing.T) {
	result := operations.DivideBy5254(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5255(t *testing.T) {
	result := operations.DivideBy5255(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5256(t *testing.T) {
	result := operations.DivideBy5256(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5257(t *testing.T) {
	result := operations.DivideBy5257(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5258(t *testing.T) {
	result := operations.DivideBy5258(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5259(t *testing.T) {
	result := operations.DivideBy5259(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5260(t *testing.T) {
	result := operations.DivideBy5260(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5261(t *testing.T) {
	result := operations.DivideBy5261(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5262(t *testing.T) {
	result := operations.DivideBy5262(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5263(t *testing.T) {
	result := operations.DivideBy5263(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5264(t *testing.T) {
	result := operations.DivideBy5264(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5265(t *testing.T) {
	result := operations.DivideBy5265(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5266(t *testing.T) {
	result := operations.DivideBy5266(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5267(t *testing.T) {
	result := operations.DivideBy5267(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5268(t *testing.T) {
	result := operations.DivideBy5268(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5269(t *testing.T) {
	result := operations.DivideBy5269(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5270(t *testing.T) {
	result := operations.DivideBy5270(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5271(t *testing.T) {
	result := operations.DivideBy5271(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5272(t *testing.T) {
	result := operations.DivideBy5272(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5273(t *testing.T) {
	result := operations.DivideBy5273(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5274(t *testing.T) {
	result := operations.DivideBy5274(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5275(t *testing.T) {
	result := operations.DivideBy5275(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5276(t *testing.T) {
	result := operations.DivideBy5276(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5277(t *testing.T) {
	result := operations.DivideBy5277(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5278(t *testing.T) {
	result := operations.DivideBy5278(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5279(t *testing.T) {
	result := operations.DivideBy5279(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5280(t *testing.T) {
	result := operations.DivideBy5280(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5281(t *testing.T) {
	result := operations.DivideBy5281(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5282(t *testing.T) {
	result := operations.DivideBy5282(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5283(t *testing.T) {
	result := operations.DivideBy5283(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5284(t *testing.T) {
	result := operations.DivideBy5284(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5285(t *testing.T) {
	result := operations.DivideBy5285(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5286(t *testing.T) {
	result := operations.DivideBy5286(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5287(t *testing.T) {
	result := operations.DivideBy5287(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5288(t *testing.T) {
	result := operations.DivideBy5288(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5289(t *testing.T) {
	result := operations.DivideBy5289(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5290(t *testing.T) {
	result := operations.DivideBy5290(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5291(t *testing.T) {
	result := operations.DivideBy5291(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5292(t *testing.T) {
	result := operations.DivideBy5292(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5293(t *testing.T) {
	result := operations.DivideBy5293(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5294(t *testing.T) {
	result := operations.DivideBy5294(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5295(t *testing.T) {
	result := operations.DivideBy5295(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5296(t *testing.T) {
	result := operations.DivideBy5296(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5297(t *testing.T) {
	result := operations.DivideBy5297(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5298(t *testing.T) {
	result := operations.DivideBy5298(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5299(t *testing.T) {
	result := operations.DivideBy5299(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5300(t *testing.T) {
	result := operations.DivideBy5300(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5301(t *testing.T) {
	result := operations.DivideBy5301(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5302(t *testing.T) {
	result := operations.DivideBy5302(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5303(t *testing.T) {
	result := operations.DivideBy5303(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5304(t *testing.T) {
	result := operations.DivideBy5304(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5305(t *testing.T) {
	result := operations.DivideBy5305(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5306(t *testing.T) {
	result := operations.DivideBy5306(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5307(t *testing.T) {
	result := operations.DivideBy5307(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5308(t *testing.T) {
	result := operations.DivideBy5308(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5309(t *testing.T) {
	result := operations.DivideBy5309(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5310(t *testing.T) {
	result := operations.DivideBy5310(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5311(t *testing.T) {
	result := operations.DivideBy5311(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5312(t *testing.T) {
	result := operations.DivideBy5312(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5313(t *testing.T) {
	result := operations.DivideBy5313(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5314(t *testing.T) {
	result := operations.DivideBy5314(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5315(t *testing.T) {
	result := operations.DivideBy5315(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5316(t *testing.T) {
	result := operations.DivideBy5316(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5317(t *testing.T) {
	result := operations.DivideBy5317(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5318(t *testing.T) {
	result := operations.DivideBy5318(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5319(t *testing.T) {
	result := operations.DivideBy5319(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5320(t *testing.T) {
	result := operations.DivideBy5320(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5321(t *testing.T) {
	result := operations.DivideBy5321(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5322(t *testing.T) {
	result := operations.DivideBy5322(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5323(t *testing.T) {
	result := operations.DivideBy5323(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5324(t *testing.T) {
	result := operations.DivideBy5324(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5325(t *testing.T) {
	result := operations.DivideBy5325(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5326(t *testing.T) {
	result := operations.DivideBy5326(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5327(t *testing.T) {
	result := operations.DivideBy5327(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5328(t *testing.T) {
	result := operations.DivideBy5328(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5329(t *testing.T) {
	result := operations.DivideBy5329(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5330(t *testing.T) {
	result := operations.DivideBy5330(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5331(t *testing.T) {
	result := operations.DivideBy5331(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5332(t *testing.T) {
	result := operations.DivideBy5332(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5333(t *testing.T) {
	result := operations.DivideBy5333(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5334(t *testing.T) {
	result := operations.DivideBy5334(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5335(t *testing.T) {
	result := operations.DivideBy5335(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5336(t *testing.T) {
	result := operations.DivideBy5336(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5337(t *testing.T) {
	result := operations.DivideBy5337(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5338(t *testing.T) {
	result := operations.DivideBy5338(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5339(t *testing.T) {
	result := operations.DivideBy5339(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5340(t *testing.T) {
	result := operations.DivideBy5340(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5341(t *testing.T) {
	result := operations.DivideBy5341(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5342(t *testing.T) {
	result := operations.DivideBy5342(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5343(t *testing.T) {
	result := operations.DivideBy5343(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5344(t *testing.T) {
	result := operations.DivideBy5344(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5345(t *testing.T) {
	result := operations.DivideBy5345(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5346(t *testing.T) {
	result := operations.DivideBy5346(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5347(t *testing.T) {
	result := operations.DivideBy5347(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5348(t *testing.T) {
	result := operations.DivideBy5348(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5349(t *testing.T) {
	result := operations.DivideBy5349(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5350(t *testing.T) {
	result := operations.DivideBy5350(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5351(t *testing.T) {
	result := operations.DivideBy5351(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5352(t *testing.T) {
	result := operations.DivideBy5352(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5353(t *testing.T) {
	result := operations.DivideBy5353(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5354(t *testing.T) {
	result := operations.DivideBy5354(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5355(t *testing.T) {
	result := operations.DivideBy5355(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5356(t *testing.T) {
	result := operations.DivideBy5356(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5357(t *testing.T) {
	result := operations.DivideBy5357(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5358(t *testing.T) {
	result := operations.DivideBy5358(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5359(t *testing.T) {
	result := operations.DivideBy5359(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5360(t *testing.T) {
	result := operations.DivideBy5360(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5361(t *testing.T) {
	result := operations.DivideBy5361(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5362(t *testing.T) {
	result := operations.DivideBy5362(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5363(t *testing.T) {
	result := operations.DivideBy5363(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5364(t *testing.T) {
	result := operations.DivideBy5364(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5365(t *testing.T) {
	result := operations.DivideBy5365(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5366(t *testing.T) {
	result := operations.DivideBy5366(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5367(t *testing.T) {
	result := operations.DivideBy5367(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5368(t *testing.T) {
	result := operations.DivideBy5368(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5369(t *testing.T) {
	result := operations.DivideBy5369(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5370(t *testing.T) {
	result := operations.DivideBy5370(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5371(t *testing.T) {
	result := operations.DivideBy5371(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5372(t *testing.T) {
	result := operations.DivideBy5372(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5373(t *testing.T) {
	result := operations.DivideBy5373(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5374(t *testing.T) {
	result := operations.DivideBy5374(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5375(t *testing.T) {
	result := operations.DivideBy5375(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5376(t *testing.T) {
	result := operations.DivideBy5376(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5377(t *testing.T) {
	result := operations.DivideBy5377(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5378(t *testing.T) {
	result := operations.DivideBy5378(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5379(t *testing.T) {
	result := operations.DivideBy5379(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5380(t *testing.T) {
	result := operations.DivideBy5380(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5381(t *testing.T) {
	result := operations.DivideBy5381(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5382(t *testing.T) {
	result := operations.DivideBy5382(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5383(t *testing.T) {
	result := operations.DivideBy5383(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5384(t *testing.T) {
	result := operations.DivideBy5384(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5385(t *testing.T) {
	result := operations.DivideBy5385(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5386(t *testing.T) {
	result := operations.DivideBy5386(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5387(t *testing.T) {
	result := operations.DivideBy5387(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5388(t *testing.T) {
	result := operations.DivideBy5388(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5389(t *testing.T) {
	result := operations.DivideBy5389(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5390(t *testing.T) {
	result := operations.DivideBy5390(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5391(t *testing.T) {
	result := operations.DivideBy5391(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5392(t *testing.T) {
	result := operations.DivideBy5392(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5393(t *testing.T) {
	result := operations.DivideBy5393(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5394(t *testing.T) {
	result := operations.DivideBy5394(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5395(t *testing.T) {
	result := operations.DivideBy5395(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5396(t *testing.T) {
	result := operations.DivideBy5396(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5397(t *testing.T) {
	result := operations.DivideBy5397(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5398(t *testing.T) {
	result := operations.DivideBy5398(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5399(t *testing.T) {
	result := operations.DivideBy5399(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5400(t *testing.T) {
	result := operations.DivideBy5400(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5401(t *testing.T) {
	result := operations.DivideBy5401(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5402(t *testing.T) {
	result := operations.DivideBy5402(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5403(t *testing.T) {
	result := operations.DivideBy5403(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5404(t *testing.T) {
	result := operations.DivideBy5404(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5405(t *testing.T) {
	result := operations.DivideBy5405(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5406(t *testing.T) {
	result := operations.DivideBy5406(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5407(t *testing.T) {
	result := operations.DivideBy5407(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5408(t *testing.T) {
	result := operations.DivideBy5408(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5409(t *testing.T) {
	result := operations.DivideBy5409(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5410(t *testing.T) {
	result := operations.DivideBy5410(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5411(t *testing.T) {
	result := operations.DivideBy5411(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5412(t *testing.T) {
	result := operations.DivideBy5412(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5413(t *testing.T) {
	result := operations.DivideBy5413(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5414(t *testing.T) {
	result := operations.DivideBy5414(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5415(t *testing.T) {
	result := operations.DivideBy5415(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5416(t *testing.T) {
	result := operations.DivideBy5416(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5417(t *testing.T) {
	result := operations.DivideBy5417(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5418(t *testing.T) {
	result := operations.DivideBy5418(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5419(t *testing.T) {
	result := operations.DivideBy5419(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5420(t *testing.T) {
	result := operations.DivideBy5420(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5421(t *testing.T) {
	result := operations.DivideBy5421(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5422(t *testing.T) {
	result := operations.DivideBy5422(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5423(t *testing.T) {
	result := operations.DivideBy5423(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5424(t *testing.T) {
	result := operations.DivideBy5424(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5425(t *testing.T) {
	result := operations.DivideBy5425(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5426(t *testing.T) {
	result := operations.DivideBy5426(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5427(t *testing.T) {
	result := operations.DivideBy5427(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5428(t *testing.T) {
	result := operations.DivideBy5428(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5429(t *testing.T) {
	result := operations.DivideBy5429(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5430(t *testing.T) {
	result := operations.DivideBy5430(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5431(t *testing.T) {
	result := operations.DivideBy5431(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5432(t *testing.T) {
	result := operations.DivideBy5432(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5433(t *testing.T) {
	result := operations.DivideBy5433(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5434(t *testing.T) {
	result := operations.DivideBy5434(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5435(t *testing.T) {
	result := operations.DivideBy5435(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5436(t *testing.T) {
	result := operations.DivideBy5436(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5437(t *testing.T) {
	result := operations.DivideBy5437(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5438(t *testing.T) {
	result := operations.DivideBy5438(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5439(t *testing.T) {
	result := operations.DivideBy5439(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5440(t *testing.T) {
	result := operations.DivideBy5440(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5441(t *testing.T) {
	result := operations.DivideBy5441(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5442(t *testing.T) {
	result := operations.DivideBy5442(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5443(t *testing.T) {
	result := operations.DivideBy5443(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5444(t *testing.T) {
	result := operations.DivideBy5444(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5445(t *testing.T) {
	result := operations.DivideBy5445(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5446(t *testing.T) {
	result := operations.DivideBy5446(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5447(t *testing.T) {
	result := operations.DivideBy5447(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5448(t *testing.T) {
	result := operations.DivideBy5448(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5449(t *testing.T) {
	result := operations.DivideBy5449(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5450(t *testing.T) {
	result := operations.DivideBy5450(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5451(t *testing.T) {
	result := operations.DivideBy5451(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5452(t *testing.T) {
	result := operations.DivideBy5452(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5453(t *testing.T) {
	result := operations.DivideBy5453(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5454(t *testing.T) {
	result := operations.DivideBy5454(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5455(t *testing.T) {
	result := operations.DivideBy5455(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5456(t *testing.T) {
	result := operations.DivideBy5456(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5457(t *testing.T) {
	result := operations.DivideBy5457(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5458(t *testing.T) {
	result := operations.DivideBy5458(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5459(t *testing.T) {
	result := operations.DivideBy5459(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5460(t *testing.T) {
	result := operations.DivideBy5460(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5461(t *testing.T) {
	result := operations.DivideBy5461(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5462(t *testing.T) {
	result := operations.DivideBy5462(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5463(t *testing.T) {
	result := operations.DivideBy5463(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5464(t *testing.T) {
	result := operations.DivideBy5464(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5465(t *testing.T) {
	result := operations.DivideBy5465(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5466(t *testing.T) {
	result := operations.DivideBy5466(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5467(t *testing.T) {
	result := operations.DivideBy5467(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5468(t *testing.T) {
	result := operations.DivideBy5468(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5469(t *testing.T) {
	result := operations.DivideBy5469(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5470(t *testing.T) {
	result := operations.DivideBy5470(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5471(t *testing.T) {
	result := operations.DivideBy5471(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5472(t *testing.T) {
	result := operations.DivideBy5472(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5473(t *testing.T) {
	result := operations.DivideBy5473(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5474(t *testing.T) {
	result := operations.DivideBy5474(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5475(t *testing.T) {
	result := operations.DivideBy5475(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5476(t *testing.T) {
	result := operations.DivideBy5476(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5477(t *testing.T) {
	result := operations.DivideBy5477(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5478(t *testing.T) {
	result := operations.DivideBy5478(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5479(t *testing.T) {
	result := operations.DivideBy5479(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5480(t *testing.T) {
	result := operations.DivideBy5480(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5481(t *testing.T) {
	result := operations.DivideBy5481(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5482(t *testing.T) {
	result := operations.DivideBy5482(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5483(t *testing.T) {
	result := operations.DivideBy5483(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5484(t *testing.T) {
	result := operations.DivideBy5484(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5485(t *testing.T) {
	result := operations.DivideBy5485(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5486(t *testing.T) {
	result := operations.DivideBy5486(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5487(t *testing.T) {
	result := operations.DivideBy5487(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5488(t *testing.T) {
	result := operations.DivideBy5488(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5489(t *testing.T) {
	result := operations.DivideBy5489(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5490(t *testing.T) {
	result := operations.DivideBy5490(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5491(t *testing.T) {
	result := operations.DivideBy5491(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5492(t *testing.T) {
	result := operations.DivideBy5492(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5493(t *testing.T) {
	result := operations.DivideBy5493(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5494(t *testing.T) {
	result := operations.DivideBy5494(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5495(t *testing.T) {
	result := operations.DivideBy5495(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5496(t *testing.T) {
	result := operations.DivideBy5496(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5497(t *testing.T) {
	result := operations.DivideBy5497(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5498(t *testing.T) {
	result := operations.DivideBy5498(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5499(t *testing.T) {
	result := operations.DivideBy5499(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5500(t *testing.T) {
	result := operations.DivideBy5500(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5501(t *testing.T) {
	result := operations.DivideBy5501(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5502(t *testing.T) {
	result := operations.DivideBy5502(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5503(t *testing.T) {
	result := operations.DivideBy5503(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5504(t *testing.T) {
	result := operations.DivideBy5504(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5505(t *testing.T) {
	result := operations.DivideBy5505(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5506(t *testing.T) {
	result := operations.DivideBy5506(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5507(t *testing.T) {
	result := operations.DivideBy5507(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5508(t *testing.T) {
	result := operations.DivideBy5508(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5509(t *testing.T) {
	result := operations.DivideBy5509(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5510(t *testing.T) {
	result := operations.DivideBy5510(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5511(t *testing.T) {
	result := operations.DivideBy5511(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5512(t *testing.T) {
	result := operations.DivideBy5512(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5513(t *testing.T) {
	result := operations.DivideBy5513(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5514(t *testing.T) {
	result := operations.DivideBy5514(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5515(t *testing.T) {
	result := operations.DivideBy5515(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5516(t *testing.T) {
	result := operations.DivideBy5516(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5517(t *testing.T) {
	result := operations.DivideBy5517(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5518(t *testing.T) {
	result := operations.DivideBy5518(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5519(t *testing.T) {
	result := operations.DivideBy5519(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5520(t *testing.T) {
	result := operations.DivideBy5520(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5521(t *testing.T) {
	result := operations.DivideBy5521(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5522(t *testing.T) {
	result := operations.DivideBy5522(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5523(t *testing.T) {
	result := operations.DivideBy5523(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5524(t *testing.T) {
	result := operations.DivideBy5524(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5525(t *testing.T) {
	result := operations.DivideBy5525(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5526(t *testing.T) {
	result := operations.DivideBy5526(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5527(t *testing.T) {
	result := operations.DivideBy5527(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5528(t *testing.T) {
	result := operations.DivideBy5528(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5529(t *testing.T) {
	result := operations.DivideBy5529(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5530(t *testing.T) {
	result := operations.DivideBy5530(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5531(t *testing.T) {
	result := operations.DivideBy5531(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5532(t *testing.T) {
	result := operations.DivideBy5532(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5533(t *testing.T) {
	result := operations.DivideBy5533(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5534(t *testing.T) {
	result := operations.DivideBy5534(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5535(t *testing.T) {
	result := operations.DivideBy5535(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5536(t *testing.T) {
	result := operations.DivideBy5536(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5537(t *testing.T) {
	result := operations.DivideBy5537(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5538(t *testing.T) {
	result := operations.DivideBy5538(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5539(t *testing.T) {
	result := operations.DivideBy5539(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5540(t *testing.T) {
	result := operations.DivideBy5540(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5541(t *testing.T) {
	result := operations.DivideBy5541(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5542(t *testing.T) {
	result := operations.DivideBy5542(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5543(t *testing.T) {
	result := operations.DivideBy5543(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5544(t *testing.T) {
	result := operations.DivideBy5544(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5545(t *testing.T) {
	result := operations.DivideBy5545(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5546(t *testing.T) {
	result := operations.DivideBy5546(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5547(t *testing.T) {
	result := operations.DivideBy5547(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5548(t *testing.T) {
	result := operations.DivideBy5548(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5549(t *testing.T) {
	result := operations.DivideBy5549(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5550(t *testing.T) {
	result := operations.DivideBy5550(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5551(t *testing.T) {
	result := operations.DivideBy5551(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5552(t *testing.T) {
	result := operations.DivideBy5552(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5553(t *testing.T) {
	result := operations.DivideBy5553(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5554(t *testing.T) {
	result := operations.DivideBy5554(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5555(t *testing.T) {
	result := operations.DivideBy5555(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5556(t *testing.T) {
	result := operations.DivideBy5556(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5557(t *testing.T) {
	result := operations.DivideBy5557(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5558(t *testing.T) {
	result := operations.DivideBy5558(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5559(t *testing.T) {
	result := operations.DivideBy5559(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5560(t *testing.T) {
	result := operations.DivideBy5560(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5561(t *testing.T) {
	result := operations.DivideBy5561(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5562(t *testing.T) {
	result := operations.DivideBy5562(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5563(t *testing.T) {
	result := operations.DivideBy5563(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5564(t *testing.T) {
	result := operations.DivideBy5564(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5565(t *testing.T) {
	result := operations.DivideBy5565(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5566(t *testing.T) {
	result := operations.DivideBy5566(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5567(t *testing.T) {
	result := operations.DivideBy5567(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5568(t *testing.T) {
	result := operations.DivideBy5568(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5569(t *testing.T) {
	result := operations.DivideBy5569(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5570(t *testing.T) {
	result := operations.DivideBy5570(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5571(t *testing.T) {
	result := operations.DivideBy5571(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5572(t *testing.T) {
	result := operations.DivideBy5572(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5573(t *testing.T) {
	result := operations.DivideBy5573(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5574(t *testing.T) {
	result := operations.DivideBy5574(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5575(t *testing.T) {
	result := operations.DivideBy5575(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5576(t *testing.T) {
	result := operations.DivideBy5576(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5577(t *testing.T) {
	result := operations.DivideBy5577(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5578(t *testing.T) {
	result := operations.DivideBy5578(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5579(t *testing.T) {
	result := operations.DivideBy5579(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5580(t *testing.T) {
	result := operations.DivideBy5580(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5581(t *testing.T) {
	result := operations.DivideBy5581(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5582(t *testing.T) {
	result := operations.DivideBy5582(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5583(t *testing.T) {
	result := operations.DivideBy5583(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5584(t *testing.T) {
	result := operations.DivideBy5584(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5585(t *testing.T) {
	result := operations.DivideBy5585(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5586(t *testing.T) {
	result := operations.DivideBy5586(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5587(t *testing.T) {
	result := operations.DivideBy5587(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5588(t *testing.T) {
	result := operations.DivideBy5588(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5589(t *testing.T) {
	result := operations.DivideBy5589(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5590(t *testing.T) {
	result := operations.DivideBy5590(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5591(t *testing.T) {
	result := operations.DivideBy5591(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5592(t *testing.T) {
	result := operations.DivideBy5592(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5593(t *testing.T) {
	result := operations.DivideBy5593(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5594(t *testing.T) {
	result := operations.DivideBy5594(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5595(t *testing.T) {
	result := operations.DivideBy5595(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5596(t *testing.T) {
	result := operations.DivideBy5596(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5597(t *testing.T) {
	result := operations.DivideBy5597(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5598(t *testing.T) {
	result := operations.DivideBy5598(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5599(t *testing.T) {
	result := operations.DivideBy5599(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5600(t *testing.T) {
	result := operations.DivideBy5600(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5601(t *testing.T) {
	result := operations.DivideBy5601(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5602(t *testing.T) {
	result := operations.DivideBy5602(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5603(t *testing.T) {
	result := operations.DivideBy5603(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5604(t *testing.T) {
	result := operations.DivideBy5604(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5605(t *testing.T) {
	result := operations.DivideBy5605(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5606(t *testing.T) {
	result := operations.DivideBy5606(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5607(t *testing.T) {
	result := operations.DivideBy5607(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5608(t *testing.T) {
	result := operations.DivideBy5608(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5609(t *testing.T) {
	result := operations.DivideBy5609(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5610(t *testing.T) {
	result := operations.DivideBy5610(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5611(t *testing.T) {
	result := operations.DivideBy5611(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5612(t *testing.T) {
	result := operations.DivideBy5612(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5613(t *testing.T) {
	result := operations.DivideBy5613(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5614(t *testing.T) {
	result := operations.DivideBy5614(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5615(t *testing.T) {
	result := operations.DivideBy5615(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5616(t *testing.T) {
	result := operations.DivideBy5616(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5617(t *testing.T) {
	result := operations.DivideBy5617(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5618(t *testing.T) {
	result := operations.DivideBy5618(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5619(t *testing.T) {
	result := operations.DivideBy5619(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5620(t *testing.T) {
	result := operations.DivideBy5620(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5621(t *testing.T) {
	result := operations.DivideBy5621(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5622(t *testing.T) {
	result := operations.DivideBy5622(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5623(t *testing.T) {
	result := operations.DivideBy5623(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5624(t *testing.T) {
	result := operations.DivideBy5624(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5625(t *testing.T) {
	result := operations.DivideBy5625(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5626(t *testing.T) {
	result := operations.DivideBy5626(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5627(t *testing.T) {
	result := operations.DivideBy5627(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5628(t *testing.T) {
	result := operations.DivideBy5628(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5629(t *testing.T) {
	result := operations.DivideBy5629(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5630(t *testing.T) {
	result := operations.DivideBy5630(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5631(t *testing.T) {
	result := operations.DivideBy5631(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5632(t *testing.T) {
	result := operations.DivideBy5632(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5633(t *testing.T) {
	result := operations.DivideBy5633(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5634(t *testing.T) {
	result := operations.DivideBy5634(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5635(t *testing.T) {
	result := operations.DivideBy5635(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5636(t *testing.T) {
	result := operations.DivideBy5636(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5637(t *testing.T) {
	result := operations.DivideBy5637(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5638(t *testing.T) {
	result := operations.DivideBy5638(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5639(t *testing.T) {
	result := operations.DivideBy5639(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5640(t *testing.T) {
	result := operations.DivideBy5640(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5641(t *testing.T) {
	result := operations.DivideBy5641(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5642(t *testing.T) {
	result := operations.DivideBy5642(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5643(t *testing.T) {
	result := operations.DivideBy5643(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5644(t *testing.T) {
	result := operations.DivideBy5644(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5645(t *testing.T) {
	result := operations.DivideBy5645(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5646(t *testing.T) {
	result := operations.DivideBy5646(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5647(t *testing.T) {
	result := operations.DivideBy5647(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5648(t *testing.T) {
	result := operations.DivideBy5648(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5649(t *testing.T) {
	result := operations.DivideBy5649(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5650(t *testing.T) {
	result := operations.DivideBy5650(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5651(t *testing.T) {
	result := operations.DivideBy5651(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5652(t *testing.T) {
	result := operations.DivideBy5652(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5653(t *testing.T) {
	result := operations.DivideBy5653(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5654(t *testing.T) {
	result := operations.DivideBy5654(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5655(t *testing.T) {
	result := operations.DivideBy5655(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5656(t *testing.T) {
	result := operations.DivideBy5656(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5657(t *testing.T) {
	result := operations.DivideBy5657(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5658(t *testing.T) {
	result := operations.DivideBy5658(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5659(t *testing.T) {
	result := operations.DivideBy5659(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5660(t *testing.T) {
	result := operations.DivideBy5660(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5661(t *testing.T) {
	result := operations.DivideBy5661(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5662(t *testing.T) {
	result := operations.DivideBy5662(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5663(t *testing.T) {
	result := operations.DivideBy5663(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5664(t *testing.T) {
	result := operations.DivideBy5664(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5665(t *testing.T) {
	result := operations.DivideBy5665(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5666(t *testing.T) {
	result := operations.DivideBy5666(17000)
	
	if result != 3 {
		t.Errorf("Expected 3 but got %d", result)
	}
}

func TestDivideBy5667(t *testing.T) {
	result := operations.DivideBy5667(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5668(t *testing.T) {
	result := operations.DivideBy5668(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5669(t *testing.T) {
	result := operations.DivideBy5669(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5670(t *testing.T) {
	result := operations.DivideBy5670(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5671(t *testing.T) {
	result := operations.DivideBy5671(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5672(t *testing.T) {
	result := operations.DivideBy5672(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5673(t *testing.T) {
	result := operations.DivideBy5673(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5674(t *testing.T) {
	result := operations.DivideBy5674(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5675(t *testing.T) {
	result := operations.DivideBy5675(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5676(t *testing.T) {
	result := operations.DivideBy5676(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5677(t *testing.T) {
	result := operations.DivideBy5677(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5678(t *testing.T) {
	result := operations.DivideBy5678(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5679(t *testing.T) {
	result := operations.DivideBy5679(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5680(t *testing.T) {
	result := operations.DivideBy5680(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5681(t *testing.T) {
	result := operations.DivideBy5681(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5682(t *testing.T) {
	result := operations.DivideBy5682(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5683(t *testing.T) {
	result := operations.DivideBy5683(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5684(t *testing.T) {
	result := operations.DivideBy5684(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5685(t *testing.T) {
	result := operations.DivideBy5685(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5686(t *testing.T) {
	result := operations.DivideBy5686(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5687(t *testing.T) {
	result := operations.DivideBy5687(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5688(t *testing.T) {
	result := operations.DivideBy5688(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5689(t *testing.T) {
	result := operations.DivideBy5689(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5690(t *testing.T) {
	result := operations.DivideBy5690(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5691(t *testing.T) {
	result := operations.DivideBy5691(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5692(t *testing.T) {
	result := operations.DivideBy5692(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5693(t *testing.T) {
	result := operations.DivideBy5693(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5694(t *testing.T) {
	result := operations.DivideBy5694(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5695(t *testing.T) {
	result := operations.DivideBy5695(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5696(t *testing.T) {
	result := operations.DivideBy5696(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5697(t *testing.T) {
	result := operations.DivideBy5697(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5698(t *testing.T) {
	result := operations.DivideBy5698(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5699(t *testing.T) {
	result := operations.DivideBy5699(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5700(t *testing.T) {
	result := operations.DivideBy5700(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5701(t *testing.T) {
	result := operations.DivideBy5701(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5702(t *testing.T) {
	result := operations.DivideBy5702(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5703(t *testing.T) {
	result := operations.DivideBy5703(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5704(t *testing.T) {
	result := operations.DivideBy5704(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5705(t *testing.T) {
	result := operations.DivideBy5705(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5706(t *testing.T) {
	result := operations.DivideBy5706(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5707(t *testing.T) {
	result := operations.DivideBy5707(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5708(t *testing.T) {
	result := operations.DivideBy5708(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5709(t *testing.T) {
	result := operations.DivideBy5709(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5710(t *testing.T) {
	result := operations.DivideBy5710(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5711(t *testing.T) {
	result := operations.DivideBy5711(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5712(t *testing.T) {
	result := operations.DivideBy5712(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5713(t *testing.T) {
	result := operations.DivideBy5713(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5714(t *testing.T) {
	result := operations.DivideBy5714(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5715(t *testing.T) {
	result := operations.DivideBy5715(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5716(t *testing.T) {
	result := operations.DivideBy5716(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5717(t *testing.T) {
	result := operations.DivideBy5717(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5718(t *testing.T) {
	result := operations.DivideBy5718(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5719(t *testing.T) {
	result := operations.DivideBy5719(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5720(t *testing.T) {
	result := operations.DivideBy5720(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5721(t *testing.T) {
	result := operations.DivideBy5721(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5722(t *testing.T) {
	result := operations.DivideBy5722(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5723(t *testing.T) {
	result := operations.DivideBy5723(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5724(t *testing.T) {
	result := operations.DivideBy5724(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5725(t *testing.T) {
	result := operations.DivideBy5725(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5726(t *testing.T) {
	result := operations.DivideBy5726(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5727(t *testing.T) {
	result := operations.DivideBy5727(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5728(t *testing.T) {
	result := operations.DivideBy5728(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5729(t *testing.T) {
	result := operations.DivideBy5729(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5730(t *testing.T) {
	result := operations.DivideBy5730(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5731(t *testing.T) {
	result := operations.DivideBy5731(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5732(t *testing.T) {
	result := operations.DivideBy5732(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5733(t *testing.T) {
	result := operations.DivideBy5733(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5734(t *testing.T) {
	result := operations.DivideBy5734(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5735(t *testing.T) {
	result := operations.DivideBy5735(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5736(t *testing.T) {
	result := operations.DivideBy5736(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5737(t *testing.T) {
	result := operations.DivideBy5737(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5738(t *testing.T) {
	result := operations.DivideBy5738(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5739(t *testing.T) {
	result := operations.DivideBy5739(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5740(t *testing.T) {
	result := operations.DivideBy5740(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5741(t *testing.T) {
	result := operations.DivideBy5741(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5742(t *testing.T) {
	result := operations.DivideBy5742(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5743(t *testing.T) {
	result := operations.DivideBy5743(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5744(t *testing.T) {
	result := operations.DivideBy5744(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5745(t *testing.T) {
	result := operations.DivideBy5745(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5746(t *testing.T) {
	result := operations.DivideBy5746(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5747(t *testing.T) {
	result := operations.DivideBy5747(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5748(t *testing.T) {
	result := operations.DivideBy5748(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5749(t *testing.T) {
	result := operations.DivideBy5749(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5750(t *testing.T) {
	result := operations.DivideBy5750(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5751(t *testing.T) {
	result := operations.DivideBy5751(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5752(t *testing.T) {
	result := operations.DivideBy5752(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5753(t *testing.T) {
	result := operations.DivideBy5753(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5754(t *testing.T) {
	result := operations.DivideBy5754(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5755(t *testing.T) {
	result := operations.DivideBy5755(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5756(t *testing.T) {
	result := operations.DivideBy5756(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5757(t *testing.T) {
	result := operations.DivideBy5757(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5758(t *testing.T) {
	result := operations.DivideBy5758(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5759(t *testing.T) {
	result := operations.DivideBy5759(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5760(t *testing.T) {
	result := operations.DivideBy5760(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5761(t *testing.T) {
	result := operations.DivideBy5761(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5762(t *testing.T) {
	result := operations.DivideBy5762(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5763(t *testing.T) {
	result := operations.DivideBy5763(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5764(t *testing.T) {
	result := operations.DivideBy5764(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5765(t *testing.T) {
	result := operations.DivideBy5765(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5766(t *testing.T) {
	result := operations.DivideBy5766(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5767(t *testing.T) {
	result := operations.DivideBy5767(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5768(t *testing.T) {
	result := operations.DivideBy5768(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5769(t *testing.T) {
	result := operations.DivideBy5769(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5770(t *testing.T) {
	result := operations.DivideBy5770(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5771(t *testing.T) {
	result := operations.DivideBy5771(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5772(t *testing.T) {
	result := operations.DivideBy5772(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5773(t *testing.T) {
	result := operations.DivideBy5773(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5774(t *testing.T) {
	result := operations.DivideBy5774(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5775(t *testing.T) {
	result := operations.DivideBy5775(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5776(t *testing.T) {
	result := operations.DivideBy5776(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5777(t *testing.T) {
	result := operations.DivideBy5777(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5778(t *testing.T) {
	result := operations.DivideBy5778(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5779(t *testing.T) {
	result := operations.DivideBy5779(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5780(t *testing.T) {
	result := operations.DivideBy5780(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5781(t *testing.T) {
	result := operations.DivideBy5781(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5782(t *testing.T) {
	result := operations.DivideBy5782(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5783(t *testing.T) {
	result := operations.DivideBy5783(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5784(t *testing.T) {
	result := operations.DivideBy5784(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5785(t *testing.T) {
	result := operations.DivideBy5785(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5786(t *testing.T) {
	result := operations.DivideBy5786(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5787(t *testing.T) {
	result := operations.DivideBy5787(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5788(t *testing.T) {
	result := operations.DivideBy5788(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5789(t *testing.T) {
	result := operations.DivideBy5789(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5790(t *testing.T) {
	result := operations.DivideBy5790(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5791(t *testing.T) {
	result := operations.DivideBy5791(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5792(t *testing.T) {
	result := operations.DivideBy5792(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5793(t *testing.T) {
	result := operations.DivideBy5793(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5794(t *testing.T) {
	result := operations.DivideBy5794(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5795(t *testing.T) {
	result := operations.DivideBy5795(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5796(t *testing.T) {
	result := operations.DivideBy5796(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5797(t *testing.T) {
	result := operations.DivideBy5797(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5798(t *testing.T) {
	result := operations.DivideBy5798(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5799(t *testing.T) {
	result := operations.DivideBy5799(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5800(t *testing.T) {
	result := operations.DivideBy5800(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5801(t *testing.T) {
	result := operations.DivideBy5801(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5802(t *testing.T) {
	result := operations.DivideBy5802(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5803(t *testing.T) {
	result := operations.DivideBy5803(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5804(t *testing.T) {
	result := operations.DivideBy5804(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5805(t *testing.T) {
	result := operations.DivideBy5805(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5806(t *testing.T) {
	result := operations.DivideBy5806(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5807(t *testing.T) {
	result := operations.DivideBy5807(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5808(t *testing.T) {
	result := operations.DivideBy5808(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5809(t *testing.T) {
	result := operations.DivideBy5809(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5810(t *testing.T) {
	result := operations.DivideBy5810(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5811(t *testing.T) {
	result := operations.DivideBy5811(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5812(t *testing.T) {
	result := operations.DivideBy5812(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5813(t *testing.T) {
	result := operations.DivideBy5813(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5814(t *testing.T) {
	result := operations.DivideBy5814(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5815(t *testing.T) {
	result := operations.DivideBy5815(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5816(t *testing.T) {
	result := operations.DivideBy5816(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5817(t *testing.T) {
	result := operations.DivideBy5817(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5818(t *testing.T) {
	result := operations.DivideBy5818(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5819(t *testing.T) {
	result := operations.DivideBy5819(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5820(t *testing.T) {
	result := operations.DivideBy5820(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5821(t *testing.T) {
	result := operations.DivideBy5821(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5822(t *testing.T) {
	result := operations.DivideBy5822(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5823(t *testing.T) {
	result := operations.DivideBy5823(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5824(t *testing.T) {
	result := operations.DivideBy5824(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5825(t *testing.T) {
	result := operations.DivideBy5825(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5826(t *testing.T) {
	result := operations.DivideBy5826(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5827(t *testing.T) {
	result := operations.DivideBy5827(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5828(t *testing.T) {
	result := operations.DivideBy5828(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5829(t *testing.T) {
	result := operations.DivideBy5829(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5830(t *testing.T) {
	result := operations.DivideBy5830(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5831(t *testing.T) {
	result := operations.DivideBy5831(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5832(t *testing.T) {
	result := operations.DivideBy5832(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5833(t *testing.T) {
	result := operations.DivideBy5833(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5834(t *testing.T) {
	result := operations.DivideBy5834(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5835(t *testing.T) {
	result := operations.DivideBy5835(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5836(t *testing.T) {
	result := operations.DivideBy5836(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5837(t *testing.T) {
	result := operations.DivideBy5837(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5838(t *testing.T) {
	result := operations.DivideBy5838(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5839(t *testing.T) {
	result := operations.DivideBy5839(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5840(t *testing.T) {
	result := operations.DivideBy5840(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5841(t *testing.T) {
	result := operations.DivideBy5841(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5842(t *testing.T) {
	result := operations.DivideBy5842(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5843(t *testing.T) {
	result := operations.DivideBy5843(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5844(t *testing.T) {
	result := operations.DivideBy5844(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5845(t *testing.T) {
	result := operations.DivideBy5845(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5846(t *testing.T) {
	result := operations.DivideBy5846(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5847(t *testing.T) {
	result := operations.DivideBy5847(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5848(t *testing.T) {
	result := operations.DivideBy5848(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5849(t *testing.T) {
	result := operations.DivideBy5849(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5850(t *testing.T) {
	result := operations.DivideBy5850(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5851(t *testing.T) {
	result := operations.DivideBy5851(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5852(t *testing.T) {
	result := operations.DivideBy5852(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5853(t *testing.T) {
	result := operations.DivideBy5853(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5854(t *testing.T) {
	result := operations.DivideBy5854(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5855(t *testing.T) {
	result := operations.DivideBy5855(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5856(t *testing.T) {
	result := operations.DivideBy5856(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5857(t *testing.T) {
	result := operations.DivideBy5857(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5858(t *testing.T) {
	result := operations.DivideBy5858(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5859(t *testing.T) {
	result := operations.DivideBy5859(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5860(t *testing.T) {
	result := operations.DivideBy5860(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5861(t *testing.T) {
	result := operations.DivideBy5861(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5862(t *testing.T) {
	result := operations.DivideBy5862(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5863(t *testing.T) {
	result := operations.DivideBy5863(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5864(t *testing.T) {
	result := operations.DivideBy5864(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5865(t *testing.T) {
	result := operations.DivideBy5865(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5866(t *testing.T) {
	result := operations.DivideBy5866(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5867(t *testing.T) {
	result := operations.DivideBy5867(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5868(t *testing.T) {
	result := operations.DivideBy5868(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5869(t *testing.T) {
	result := operations.DivideBy5869(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5870(t *testing.T) {
	result := operations.DivideBy5870(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5871(t *testing.T) {
	result := operations.DivideBy5871(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5872(t *testing.T) {
	result := operations.DivideBy5872(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5873(t *testing.T) {
	result := operations.DivideBy5873(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5874(t *testing.T) {
	result := operations.DivideBy5874(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5875(t *testing.T) {
	result := operations.DivideBy5875(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5876(t *testing.T) {
	result := operations.DivideBy5876(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5877(t *testing.T) {
	result := operations.DivideBy5877(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5878(t *testing.T) {
	result := operations.DivideBy5878(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5879(t *testing.T) {
	result := operations.DivideBy5879(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5880(t *testing.T) {
	result := operations.DivideBy5880(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5881(t *testing.T) {
	result := operations.DivideBy5881(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5882(t *testing.T) {
	result := operations.DivideBy5882(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5883(t *testing.T) {
	result := operations.DivideBy5883(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5884(t *testing.T) {
	result := operations.DivideBy5884(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5885(t *testing.T) {
	result := operations.DivideBy5885(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5886(t *testing.T) {
	result := operations.DivideBy5886(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5887(t *testing.T) {
	result := operations.DivideBy5887(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5888(t *testing.T) {
	result := operations.DivideBy5888(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5889(t *testing.T) {
	result := operations.DivideBy5889(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5890(t *testing.T) {
	result := operations.DivideBy5890(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5891(t *testing.T) {
	result := operations.DivideBy5891(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5892(t *testing.T) {
	result := operations.DivideBy5892(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5893(t *testing.T) {
	result := operations.DivideBy5893(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5894(t *testing.T) {
	result := operations.DivideBy5894(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5895(t *testing.T) {
	result := operations.DivideBy5895(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5896(t *testing.T) {
	result := operations.DivideBy5896(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5897(t *testing.T) {
	result := operations.DivideBy5897(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5898(t *testing.T) {
	result := operations.DivideBy5898(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5899(t *testing.T) {
	result := operations.DivideBy5899(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5900(t *testing.T) {
	result := operations.DivideBy5900(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5901(t *testing.T) {
	result := operations.DivideBy5901(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5902(t *testing.T) {
	result := operations.DivideBy5902(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5903(t *testing.T) {
	result := operations.DivideBy5903(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5904(t *testing.T) {
	result := operations.DivideBy5904(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5905(t *testing.T) {
	result := operations.DivideBy5905(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5906(t *testing.T) {
	result := operations.DivideBy5906(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5907(t *testing.T) {
	result := operations.DivideBy5907(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5908(t *testing.T) {
	result := operations.DivideBy5908(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5909(t *testing.T) {
	result := operations.DivideBy5909(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5910(t *testing.T) {
	result := operations.DivideBy5910(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5911(t *testing.T) {
	result := operations.DivideBy5911(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5912(t *testing.T) {
	result := operations.DivideBy5912(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5913(t *testing.T) {
	result := operations.DivideBy5913(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5914(t *testing.T) {
	result := operations.DivideBy5914(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5915(t *testing.T) {
	result := operations.DivideBy5915(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5916(t *testing.T) {
	result := operations.DivideBy5916(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5917(t *testing.T) {
	result := operations.DivideBy5917(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5918(t *testing.T) {
	result := operations.DivideBy5918(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5919(t *testing.T) {
	result := operations.DivideBy5919(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5920(t *testing.T) {
	result := operations.DivideBy5920(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5921(t *testing.T) {
	result := operations.DivideBy5921(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5922(t *testing.T) {
	result := operations.DivideBy5922(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5923(t *testing.T) {
	result := operations.DivideBy5923(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5924(t *testing.T) {
	result := operations.DivideBy5924(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5925(t *testing.T) {
	result := operations.DivideBy5925(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5926(t *testing.T) {
	result := operations.DivideBy5926(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5927(t *testing.T) {
	result := operations.DivideBy5927(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5928(t *testing.T) {
	result := operations.DivideBy5928(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5929(t *testing.T) {
	result := operations.DivideBy5929(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5930(t *testing.T) {
	result := operations.DivideBy5930(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5931(t *testing.T) {
	result := operations.DivideBy5931(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5932(t *testing.T) {
	result := operations.DivideBy5932(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5933(t *testing.T) {
	result := operations.DivideBy5933(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5934(t *testing.T) {
	result := operations.DivideBy5934(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5935(t *testing.T) {
	result := operations.DivideBy5935(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5936(t *testing.T) {
	result := operations.DivideBy5936(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5937(t *testing.T) {
	result := operations.DivideBy5937(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5938(t *testing.T) {
	result := operations.DivideBy5938(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5939(t *testing.T) {
	result := operations.DivideBy5939(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5940(t *testing.T) {
	result := operations.DivideBy5940(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5941(t *testing.T) {
	result := operations.DivideBy5941(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5942(t *testing.T) {
	result := operations.DivideBy5942(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5943(t *testing.T) {
	result := operations.DivideBy5943(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5944(t *testing.T) {
	result := operations.DivideBy5944(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5945(t *testing.T) {
	result := operations.DivideBy5945(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5946(t *testing.T) {
	result := operations.DivideBy5946(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5947(t *testing.T) {
	result := operations.DivideBy5947(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5948(t *testing.T) {
	result := operations.DivideBy5948(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5949(t *testing.T) {
	result := operations.DivideBy5949(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5950(t *testing.T) {
	result := operations.DivideBy5950(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5951(t *testing.T) {
	result := operations.DivideBy5951(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5952(t *testing.T) {
	result := operations.DivideBy5952(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5953(t *testing.T) {
	result := operations.DivideBy5953(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5954(t *testing.T) {
	result := operations.DivideBy5954(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5955(t *testing.T) {
	result := operations.DivideBy5955(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5956(t *testing.T) {
	result := operations.DivideBy5956(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5957(t *testing.T) {
	result := operations.DivideBy5957(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5958(t *testing.T) {
	result := operations.DivideBy5958(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5959(t *testing.T) {
	result := operations.DivideBy5959(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5960(t *testing.T) {
	result := operations.DivideBy5960(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5961(t *testing.T) {
	result := operations.DivideBy5961(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5962(t *testing.T) {
	result := operations.DivideBy5962(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5963(t *testing.T) {
	result := operations.DivideBy5963(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5964(t *testing.T) {
	result := operations.DivideBy5964(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5965(t *testing.T) {
	result := operations.DivideBy5965(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5966(t *testing.T) {
	result := operations.DivideBy5966(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5967(t *testing.T) {
	result := operations.DivideBy5967(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5968(t *testing.T) {
	result := operations.DivideBy5968(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5969(t *testing.T) {
	result := operations.DivideBy5969(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5970(t *testing.T) {
	result := operations.DivideBy5970(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5971(t *testing.T) {
	result := operations.DivideBy5971(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5972(t *testing.T) {
	result := operations.DivideBy5972(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5973(t *testing.T) {
	result := operations.DivideBy5973(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5974(t *testing.T) {
	result := operations.DivideBy5974(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5975(t *testing.T) {
	result := operations.DivideBy5975(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5976(t *testing.T) {
	result := operations.DivideBy5976(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5977(t *testing.T) {
	result := operations.DivideBy5977(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5978(t *testing.T) {
	result := operations.DivideBy5978(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5979(t *testing.T) {
	result := operations.DivideBy5979(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5980(t *testing.T) {
	result := operations.DivideBy5980(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5981(t *testing.T) {
	result := operations.DivideBy5981(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5982(t *testing.T) {
	result := operations.DivideBy5982(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5983(t *testing.T) {
	result := operations.DivideBy5983(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5984(t *testing.T) {
	result := operations.DivideBy5984(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5985(t *testing.T) {
	result := operations.DivideBy5985(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5986(t *testing.T) {
	result := operations.DivideBy5986(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5987(t *testing.T) {
	result := operations.DivideBy5987(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5988(t *testing.T) {
	result := operations.DivideBy5988(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5989(t *testing.T) {
	result := operations.DivideBy5989(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5990(t *testing.T) {
	result := operations.DivideBy5990(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5991(t *testing.T) {
	result := operations.DivideBy5991(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5992(t *testing.T) {
	result := operations.DivideBy5992(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5993(t *testing.T) {
	result := operations.DivideBy5993(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5994(t *testing.T) {
	result := operations.DivideBy5994(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5995(t *testing.T) {
	result := operations.DivideBy5995(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5996(t *testing.T) {
	result := operations.DivideBy5996(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5997(t *testing.T) {
	result := operations.DivideBy5997(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5998(t *testing.T) {
	result := operations.DivideBy5998(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy5999(t *testing.T) {
	result := operations.DivideBy5999(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6000(t *testing.T) {
	result := operations.DivideBy6000(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6001(t *testing.T) {
	result := operations.DivideBy6001(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6002(t *testing.T) {
	result := operations.DivideBy6002(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6003(t *testing.T) {
	result := operations.DivideBy6003(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6004(t *testing.T) {
	result := operations.DivideBy6004(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6005(t *testing.T) {
	result := operations.DivideBy6005(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6006(t *testing.T) {
	result := operations.DivideBy6006(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6007(t *testing.T) {
	result := operations.DivideBy6007(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6008(t *testing.T) {
	result := operations.DivideBy6008(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6009(t *testing.T) {
	result := operations.DivideBy6009(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6010(t *testing.T) {
	result := operations.DivideBy6010(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6011(t *testing.T) {
	result := operations.DivideBy6011(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6012(t *testing.T) {
	result := operations.DivideBy6012(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6013(t *testing.T) {
	result := operations.DivideBy6013(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6014(t *testing.T) {
	result := operations.DivideBy6014(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6015(t *testing.T) {
	result := operations.DivideBy6015(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6016(t *testing.T) {
	result := operations.DivideBy6016(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6017(t *testing.T) {
	result := operations.DivideBy6017(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6018(t *testing.T) {
	result := operations.DivideBy6018(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6019(t *testing.T) {
	result := operations.DivideBy6019(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6020(t *testing.T) {
	result := operations.DivideBy6020(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6021(t *testing.T) {
	result := operations.DivideBy6021(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6022(t *testing.T) {
	result := operations.DivideBy6022(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6023(t *testing.T) {
	result := operations.DivideBy6023(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6024(t *testing.T) {
	result := operations.DivideBy6024(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6025(t *testing.T) {
	result := operations.DivideBy6025(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6026(t *testing.T) {
	result := operations.DivideBy6026(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6027(t *testing.T) {
	result := operations.DivideBy6027(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6028(t *testing.T) {
	result := operations.DivideBy6028(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6029(t *testing.T) {
	result := operations.DivideBy6029(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6030(t *testing.T) {
	result := operations.DivideBy6030(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6031(t *testing.T) {
	result := operations.DivideBy6031(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6032(t *testing.T) {
	result := operations.DivideBy6032(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6033(t *testing.T) {
	result := operations.DivideBy6033(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6034(t *testing.T) {
	result := operations.DivideBy6034(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6035(t *testing.T) {
	result := operations.DivideBy6035(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6036(t *testing.T) {
	result := operations.DivideBy6036(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6037(t *testing.T) {
	result := operations.DivideBy6037(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6038(t *testing.T) {
	result := operations.DivideBy6038(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6039(t *testing.T) {
	result := operations.DivideBy6039(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6040(t *testing.T) {
	result := operations.DivideBy6040(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6041(t *testing.T) {
	result := operations.DivideBy6041(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6042(t *testing.T) {
	result := operations.DivideBy6042(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6043(t *testing.T) {
	result := operations.DivideBy6043(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6044(t *testing.T) {
	result := operations.DivideBy6044(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6045(t *testing.T) {
	result := operations.DivideBy6045(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6046(t *testing.T) {
	result := operations.DivideBy6046(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6047(t *testing.T) {
	result := operations.DivideBy6047(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6048(t *testing.T) {
	result := operations.DivideBy6048(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6049(t *testing.T) {
	result := operations.DivideBy6049(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6050(t *testing.T) {
	result := operations.DivideBy6050(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6051(t *testing.T) {
	result := operations.DivideBy6051(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6052(t *testing.T) {
	result := operations.DivideBy6052(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6053(t *testing.T) {
	result := operations.DivideBy6053(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6054(t *testing.T) {
	result := operations.DivideBy6054(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6055(t *testing.T) {
	result := operations.DivideBy6055(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6056(t *testing.T) {
	result := operations.DivideBy6056(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6057(t *testing.T) {
	result := operations.DivideBy6057(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6058(t *testing.T) {
	result := operations.DivideBy6058(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6059(t *testing.T) {
	result := operations.DivideBy6059(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6060(t *testing.T) {
	result := operations.DivideBy6060(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6061(t *testing.T) {
	result := operations.DivideBy6061(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6062(t *testing.T) {
	result := operations.DivideBy6062(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6063(t *testing.T) {
	result := operations.DivideBy6063(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6064(t *testing.T) {
	result := operations.DivideBy6064(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6065(t *testing.T) {
	result := operations.DivideBy6065(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6066(t *testing.T) {
	result := operations.DivideBy6066(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6067(t *testing.T) {
	result := operations.DivideBy6067(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6068(t *testing.T) {
	result := operations.DivideBy6068(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6069(t *testing.T) {
	result := operations.DivideBy6069(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6070(t *testing.T) {
	result := operations.DivideBy6070(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6071(t *testing.T) {
	result := operations.DivideBy6071(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6072(t *testing.T) {
	result := operations.DivideBy6072(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6073(t *testing.T) {
	result := operations.DivideBy6073(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6074(t *testing.T) {
	result := operations.DivideBy6074(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6075(t *testing.T) {
	result := operations.DivideBy6075(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6076(t *testing.T) {
	result := operations.DivideBy6076(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6077(t *testing.T) {
	result := operations.DivideBy6077(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6078(t *testing.T) {
	result := operations.DivideBy6078(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6079(t *testing.T) {
	result := operations.DivideBy6079(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6080(t *testing.T) {
	result := operations.DivideBy6080(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6081(t *testing.T) {
	result := operations.DivideBy6081(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6082(t *testing.T) {
	result := operations.DivideBy6082(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6083(t *testing.T) {
	result := operations.DivideBy6083(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6084(t *testing.T) {
	result := operations.DivideBy6084(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6085(t *testing.T) {
	result := operations.DivideBy6085(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6086(t *testing.T) {
	result := operations.DivideBy6086(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6087(t *testing.T) {
	result := operations.DivideBy6087(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6088(t *testing.T) {
	result := operations.DivideBy6088(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6089(t *testing.T) {
	result := operations.DivideBy6089(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6090(t *testing.T) {
	result := operations.DivideBy6090(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6091(t *testing.T) {
	result := operations.DivideBy6091(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6092(t *testing.T) {
	result := operations.DivideBy6092(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6093(t *testing.T) {
	result := operations.DivideBy6093(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6094(t *testing.T) {
	result := operations.DivideBy6094(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6095(t *testing.T) {
	result := operations.DivideBy6095(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6096(t *testing.T) {
	result := operations.DivideBy6096(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6097(t *testing.T) {
	result := operations.DivideBy6097(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6098(t *testing.T) {
	result := operations.DivideBy6098(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6099(t *testing.T) {
	result := operations.DivideBy6099(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6100(t *testing.T) {
	result := operations.DivideBy6100(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6101(t *testing.T) {
	result := operations.DivideBy6101(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6102(t *testing.T) {
	result := operations.DivideBy6102(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6103(t *testing.T) {
	result := operations.DivideBy6103(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6104(t *testing.T) {
	result := operations.DivideBy6104(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6105(t *testing.T) {
	result := operations.DivideBy6105(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6106(t *testing.T) {
	result := operations.DivideBy6106(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6107(t *testing.T) {
	result := operations.DivideBy6107(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6108(t *testing.T) {
	result := operations.DivideBy6108(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6109(t *testing.T) {
	result := operations.DivideBy6109(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6110(t *testing.T) {
	result := operations.DivideBy6110(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6111(t *testing.T) {
	result := operations.DivideBy6111(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6112(t *testing.T) {
	result := operations.DivideBy6112(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6113(t *testing.T) {
	result := operations.DivideBy6113(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6114(t *testing.T) {
	result := operations.DivideBy6114(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6115(t *testing.T) {
	result := operations.DivideBy6115(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6116(t *testing.T) {
	result := operations.DivideBy6116(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6117(t *testing.T) {
	result := operations.DivideBy6117(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6118(t *testing.T) {
	result := operations.DivideBy6118(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6119(t *testing.T) {
	result := operations.DivideBy6119(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6120(t *testing.T) {
	result := operations.DivideBy6120(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6121(t *testing.T) {
	result := operations.DivideBy6121(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6122(t *testing.T) {
	result := operations.DivideBy6122(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6123(t *testing.T) {
	result := operations.DivideBy6123(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6124(t *testing.T) {
	result := operations.DivideBy6124(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6125(t *testing.T) {
	result := operations.DivideBy6125(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6126(t *testing.T) {
	result := operations.DivideBy6126(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6127(t *testing.T) {
	result := operations.DivideBy6127(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6128(t *testing.T) {
	result := operations.DivideBy6128(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6129(t *testing.T) {
	result := operations.DivideBy6129(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6130(t *testing.T) {
	result := operations.DivideBy6130(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6131(t *testing.T) {
	result := operations.DivideBy6131(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6132(t *testing.T) {
	result := operations.DivideBy6132(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6133(t *testing.T) {
	result := operations.DivideBy6133(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6134(t *testing.T) {
	result := operations.DivideBy6134(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6135(t *testing.T) {
	result := operations.DivideBy6135(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6136(t *testing.T) {
	result := operations.DivideBy6136(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6137(t *testing.T) {
	result := operations.DivideBy6137(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6138(t *testing.T) {
	result := operations.DivideBy6138(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6139(t *testing.T) {
	result := operations.DivideBy6139(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6140(t *testing.T) {
	result := operations.DivideBy6140(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6141(t *testing.T) {
	result := operations.DivideBy6141(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6142(t *testing.T) {
	result := operations.DivideBy6142(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6143(t *testing.T) {
	result := operations.DivideBy6143(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6144(t *testing.T) {
	result := operations.DivideBy6144(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6145(t *testing.T) {
	result := operations.DivideBy6145(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6146(t *testing.T) {
	result := operations.DivideBy6146(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6147(t *testing.T) {
	result := operations.DivideBy6147(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6148(t *testing.T) {
	result := operations.DivideBy6148(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6149(t *testing.T) {
	result := operations.DivideBy6149(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6150(t *testing.T) {
	result := operations.DivideBy6150(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6151(t *testing.T) {
	result := operations.DivideBy6151(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6152(t *testing.T) {
	result := operations.DivideBy6152(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6153(t *testing.T) {
	result := operations.DivideBy6153(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6154(t *testing.T) {
	result := operations.DivideBy6154(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6155(t *testing.T) {
	result := operations.DivideBy6155(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6156(t *testing.T) {
	result := operations.DivideBy6156(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6157(t *testing.T) {
	result := operations.DivideBy6157(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6158(t *testing.T) {
	result := operations.DivideBy6158(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6159(t *testing.T) {
	result := operations.DivideBy6159(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6160(t *testing.T) {
	result := operations.DivideBy6160(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6161(t *testing.T) {
	result := operations.DivideBy6161(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6162(t *testing.T) {
	result := operations.DivideBy6162(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6163(t *testing.T) {
	result := operations.DivideBy6163(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6164(t *testing.T) {
	result := operations.DivideBy6164(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6165(t *testing.T) {
	result := operations.DivideBy6165(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6166(t *testing.T) {
	result := operations.DivideBy6166(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6167(t *testing.T) {
	result := operations.DivideBy6167(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6168(t *testing.T) {
	result := operations.DivideBy6168(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6169(t *testing.T) {
	result := operations.DivideBy6169(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6170(t *testing.T) {
	result := operations.DivideBy6170(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6171(t *testing.T) {
	result := operations.DivideBy6171(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6172(t *testing.T) {
	result := operations.DivideBy6172(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6173(t *testing.T) {
	result := operations.DivideBy6173(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6174(t *testing.T) {
	result := operations.DivideBy6174(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6175(t *testing.T) {
	result := operations.DivideBy6175(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6176(t *testing.T) {
	result := operations.DivideBy6176(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6177(t *testing.T) {
	result := operations.DivideBy6177(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6178(t *testing.T) {
	result := operations.DivideBy6178(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6179(t *testing.T) {
	result := operations.DivideBy6179(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6180(t *testing.T) {
	result := operations.DivideBy6180(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6181(t *testing.T) {
	result := operations.DivideBy6181(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6182(t *testing.T) {
	result := operations.DivideBy6182(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6183(t *testing.T) {
	result := operations.DivideBy6183(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6184(t *testing.T) {
	result := operations.DivideBy6184(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6185(t *testing.T) {
	result := operations.DivideBy6185(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6186(t *testing.T) {
	result := operations.DivideBy6186(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6187(t *testing.T) {
	result := operations.DivideBy6187(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6188(t *testing.T) {
	result := operations.DivideBy6188(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6189(t *testing.T) {
	result := operations.DivideBy6189(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6190(t *testing.T) {
	result := operations.DivideBy6190(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6191(t *testing.T) {
	result := operations.DivideBy6191(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6192(t *testing.T) {
	result := operations.DivideBy6192(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6193(t *testing.T) {
	result := operations.DivideBy6193(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6194(t *testing.T) {
	result := operations.DivideBy6194(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6195(t *testing.T) {
	result := operations.DivideBy6195(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6196(t *testing.T) {
	result := operations.DivideBy6196(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6197(t *testing.T) {
	result := operations.DivideBy6197(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6198(t *testing.T) {
	result := operations.DivideBy6198(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6199(t *testing.T) {
	result := operations.DivideBy6199(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6200(t *testing.T) {
	result := operations.DivideBy6200(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6201(t *testing.T) {
	result := operations.DivideBy6201(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6202(t *testing.T) {
	result := operations.DivideBy6202(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6203(t *testing.T) {
	result := operations.DivideBy6203(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6204(t *testing.T) {
	result := operations.DivideBy6204(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6205(t *testing.T) {
	result := operations.DivideBy6205(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6206(t *testing.T) {
	result := operations.DivideBy6206(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6207(t *testing.T) {
	result := operations.DivideBy6207(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6208(t *testing.T) {
	result := operations.DivideBy6208(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6209(t *testing.T) {
	result := operations.DivideBy6209(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6210(t *testing.T) {
	result := operations.DivideBy6210(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6211(t *testing.T) {
	result := operations.DivideBy6211(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6212(t *testing.T) {
	result := operations.DivideBy6212(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6213(t *testing.T) {
	result := operations.DivideBy6213(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6214(t *testing.T) {
	result := operations.DivideBy6214(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6215(t *testing.T) {
	result := operations.DivideBy6215(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6216(t *testing.T) {
	result := operations.DivideBy6216(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6217(t *testing.T) {
	result := operations.DivideBy6217(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6218(t *testing.T) {
	result := operations.DivideBy6218(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6219(t *testing.T) {
	result := operations.DivideBy6219(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6220(t *testing.T) {
	result := operations.DivideBy6220(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6221(t *testing.T) {
	result := operations.DivideBy6221(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6222(t *testing.T) {
	result := operations.DivideBy6222(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6223(t *testing.T) {
	result := operations.DivideBy6223(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6224(t *testing.T) {
	result := operations.DivideBy6224(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6225(t *testing.T) {
	result := operations.DivideBy6225(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6226(t *testing.T) {
	result := operations.DivideBy6226(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6227(t *testing.T) {
	result := operations.DivideBy6227(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6228(t *testing.T) {
	result := operations.DivideBy6228(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6229(t *testing.T) {
	result := operations.DivideBy6229(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6230(t *testing.T) {
	result := operations.DivideBy6230(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6231(t *testing.T) {
	result := operations.DivideBy6231(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6232(t *testing.T) {
	result := operations.DivideBy6232(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6233(t *testing.T) {
	result := operations.DivideBy6233(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6234(t *testing.T) {
	result := operations.DivideBy6234(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6235(t *testing.T) {
	result := operations.DivideBy6235(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6236(t *testing.T) {
	result := operations.DivideBy6236(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6237(t *testing.T) {
	result := operations.DivideBy6237(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6238(t *testing.T) {
	result := operations.DivideBy6238(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6239(t *testing.T) {
	result := operations.DivideBy6239(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6240(t *testing.T) {
	result := operations.DivideBy6240(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6241(t *testing.T) {
	result := operations.DivideBy6241(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6242(t *testing.T) {
	result := operations.DivideBy6242(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6243(t *testing.T) {
	result := operations.DivideBy6243(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6244(t *testing.T) {
	result := operations.DivideBy6244(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6245(t *testing.T) {
	result := operations.DivideBy6245(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6246(t *testing.T) {
	result := operations.DivideBy6246(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6247(t *testing.T) {
	result := operations.DivideBy6247(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6248(t *testing.T) {
	result := operations.DivideBy6248(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6249(t *testing.T) {
	result := operations.DivideBy6249(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6250(t *testing.T) {
	result := operations.DivideBy6250(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6251(t *testing.T) {
	result := operations.DivideBy6251(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6252(t *testing.T) {
	result := operations.DivideBy6252(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6253(t *testing.T) {
	result := operations.DivideBy6253(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6254(t *testing.T) {
	result := operations.DivideBy6254(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6255(t *testing.T) {
	result := operations.DivideBy6255(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6256(t *testing.T) {
	result := operations.DivideBy6256(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6257(t *testing.T) {
	result := operations.DivideBy6257(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6258(t *testing.T) {
	result := operations.DivideBy6258(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6259(t *testing.T) {
	result := operations.DivideBy6259(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6260(t *testing.T) {
	result := operations.DivideBy6260(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6261(t *testing.T) {
	result := operations.DivideBy6261(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6262(t *testing.T) {
	result := operations.DivideBy6262(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6263(t *testing.T) {
	result := operations.DivideBy6263(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6264(t *testing.T) {
	result := operations.DivideBy6264(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6265(t *testing.T) {
	result := operations.DivideBy6265(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6266(t *testing.T) {
	result := operations.DivideBy6266(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6267(t *testing.T) {
	result := operations.DivideBy6267(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6268(t *testing.T) {
	result := operations.DivideBy6268(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6269(t *testing.T) {
	result := operations.DivideBy6269(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6270(t *testing.T) {
	result := operations.DivideBy6270(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6271(t *testing.T) {
	result := operations.DivideBy6271(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6272(t *testing.T) {
	result := operations.DivideBy6272(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6273(t *testing.T) {
	result := operations.DivideBy6273(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6274(t *testing.T) {
	result := operations.DivideBy6274(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6275(t *testing.T) {
	result := operations.DivideBy6275(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6276(t *testing.T) {
	result := operations.DivideBy6276(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6277(t *testing.T) {
	result := operations.DivideBy6277(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6278(t *testing.T) {
	result := operations.DivideBy6278(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6279(t *testing.T) {
	result := operations.DivideBy6279(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6280(t *testing.T) {
	result := operations.DivideBy6280(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6281(t *testing.T) {
	result := operations.DivideBy6281(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6282(t *testing.T) {
	result := operations.DivideBy6282(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6283(t *testing.T) {
	result := operations.DivideBy6283(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6284(t *testing.T) {
	result := operations.DivideBy6284(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6285(t *testing.T) {
	result := operations.DivideBy6285(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6286(t *testing.T) {
	result := operations.DivideBy6286(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6287(t *testing.T) {
	result := operations.DivideBy6287(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6288(t *testing.T) {
	result := operations.DivideBy6288(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6289(t *testing.T) {
	result := operations.DivideBy6289(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6290(t *testing.T) {
	result := operations.DivideBy6290(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6291(t *testing.T) {
	result := operations.DivideBy6291(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6292(t *testing.T) {
	result := operations.DivideBy6292(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6293(t *testing.T) {
	result := operations.DivideBy6293(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6294(t *testing.T) {
	result := operations.DivideBy6294(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6295(t *testing.T) {
	result := operations.DivideBy6295(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6296(t *testing.T) {
	result := operations.DivideBy6296(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6297(t *testing.T) {
	result := operations.DivideBy6297(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6298(t *testing.T) {
	result := operations.DivideBy6298(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6299(t *testing.T) {
	result := operations.DivideBy6299(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6300(t *testing.T) {
	result := operations.DivideBy6300(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6301(t *testing.T) {
	result := operations.DivideBy6301(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6302(t *testing.T) {
	result := operations.DivideBy6302(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6303(t *testing.T) {
	result := operations.DivideBy6303(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6304(t *testing.T) {
	result := operations.DivideBy6304(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6305(t *testing.T) {
	result := operations.DivideBy6305(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6306(t *testing.T) {
	result := operations.DivideBy6306(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6307(t *testing.T) {
	result := operations.DivideBy6307(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6308(t *testing.T) {
	result := operations.DivideBy6308(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6309(t *testing.T) {
	result := operations.DivideBy6309(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6310(t *testing.T) {
	result := operations.DivideBy6310(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6311(t *testing.T) {
	result := operations.DivideBy6311(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6312(t *testing.T) {
	result := operations.DivideBy6312(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6313(t *testing.T) {
	result := operations.DivideBy6313(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6314(t *testing.T) {
	result := operations.DivideBy6314(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6315(t *testing.T) {
	result := operations.DivideBy6315(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6316(t *testing.T) {
	result := operations.DivideBy6316(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6317(t *testing.T) {
	result := operations.DivideBy6317(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6318(t *testing.T) {
	result := operations.DivideBy6318(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6319(t *testing.T) {
	result := operations.DivideBy6319(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6320(t *testing.T) {
	result := operations.DivideBy6320(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6321(t *testing.T) {
	result := operations.DivideBy6321(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6322(t *testing.T) {
	result := operations.DivideBy6322(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6323(t *testing.T) {
	result := operations.DivideBy6323(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6324(t *testing.T) {
	result := operations.DivideBy6324(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6325(t *testing.T) {
	result := operations.DivideBy6325(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6326(t *testing.T) {
	result := operations.DivideBy6326(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6327(t *testing.T) {
	result := operations.DivideBy6327(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6328(t *testing.T) {
	result := operations.DivideBy6328(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6329(t *testing.T) {
	result := operations.DivideBy6329(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6330(t *testing.T) {
	result := operations.DivideBy6330(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6331(t *testing.T) {
	result := operations.DivideBy6331(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6332(t *testing.T) {
	result := operations.DivideBy6332(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6333(t *testing.T) {
	result := operations.DivideBy6333(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6334(t *testing.T) {
	result := operations.DivideBy6334(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6335(t *testing.T) {
	result := operations.DivideBy6335(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6336(t *testing.T) {
	result := operations.DivideBy6336(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6337(t *testing.T) {
	result := operations.DivideBy6337(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6338(t *testing.T) {
	result := operations.DivideBy6338(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6339(t *testing.T) {
	result := operations.DivideBy6339(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6340(t *testing.T) {
	result := operations.DivideBy6340(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6341(t *testing.T) {
	result := operations.DivideBy6341(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6342(t *testing.T) {
	result := operations.DivideBy6342(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6343(t *testing.T) {
	result := operations.DivideBy6343(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6344(t *testing.T) {
	result := operations.DivideBy6344(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6345(t *testing.T) {
	result := operations.DivideBy6345(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6346(t *testing.T) {
	result := operations.DivideBy6346(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6347(t *testing.T) {
	result := operations.DivideBy6347(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6348(t *testing.T) {
	result := operations.DivideBy6348(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6349(t *testing.T) {
	result := operations.DivideBy6349(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6350(t *testing.T) {
	result := operations.DivideBy6350(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6351(t *testing.T) {
	result := operations.DivideBy6351(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6352(t *testing.T) {
	result := operations.DivideBy6352(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6353(t *testing.T) {
	result := operations.DivideBy6353(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6354(t *testing.T) {
	result := operations.DivideBy6354(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6355(t *testing.T) {
	result := operations.DivideBy6355(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6356(t *testing.T) {
	result := operations.DivideBy6356(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6357(t *testing.T) {
	result := operations.DivideBy6357(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6358(t *testing.T) {
	result := operations.DivideBy6358(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6359(t *testing.T) {
	result := operations.DivideBy6359(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6360(t *testing.T) {
	result := operations.DivideBy6360(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6361(t *testing.T) {
	result := operations.DivideBy6361(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6362(t *testing.T) {
	result := operations.DivideBy6362(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6363(t *testing.T) {
	result := operations.DivideBy6363(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6364(t *testing.T) {
	result := operations.DivideBy6364(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6365(t *testing.T) {
	result := operations.DivideBy6365(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6366(t *testing.T) {
	result := operations.DivideBy6366(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6367(t *testing.T) {
	result := operations.DivideBy6367(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6368(t *testing.T) {
	result := operations.DivideBy6368(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6369(t *testing.T) {
	result := operations.DivideBy6369(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6370(t *testing.T) {
	result := operations.DivideBy6370(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6371(t *testing.T) {
	result := operations.DivideBy6371(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6372(t *testing.T) {
	result := operations.DivideBy6372(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6373(t *testing.T) {
	result := operations.DivideBy6373(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6374(t *testing.T) {
	result := operations.DivideBy6374(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6375(t *testing.T) {
	result := operations.DivideBy6375(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6376(t *testing.T) {
	result := operations.DivideBy6376(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6377(t *testing.T) {
	result := operations.DivideBy6377(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6378(t *testing.T) {
	result := operations.DivideBy6378(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6379(t *testing.T) {
	result := operations.DivideBy6379(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6380(t *testing.T) {
	result := operations.DivideBy6380(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6381(t *testing.T) {
	result := operations.DivideBy6381(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6382(t *testing.T) {
	result := operations.DivideBy6382(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6383(t *testing.T) {
	result := operations.DivideBy6383(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6384(t *testing.T) {
	result := operations.DivideBy6384(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6385(t *testing.T) {
	result := operations.DivideBy6385(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6386(t *testing.T) {
	result := operations.DivideBy6386(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6387(t *testing.T) {
	result := operations.DivideBy6387(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6388(t *testing.T) {
	result := operations.DivideBy6388(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6389(t *testing.T) {
	result := operations.DivideBy6389(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6390(t *testing.T) {
	result := operations.DivideBy6390(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6391(t *testing.T) {
	result := operations.DivideBy6391(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6392(t *testing.T) {
	result := operations.DivideBy6392(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6393(t *testing.T) {
	result := operations.DivideBy6393(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6394(t *testing.T) {
	result := operations.DivideBy6394(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6395(t *testing.T) {
	result := operations.DivideBy6395(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6396(t *testing.T) {
	result := operations.DivideBy6396(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6397(t *testing.T) {
	result := operations.DivideBy6397(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6398(t *testing.T) {
	result := operations.DivideBy6398(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6399(t *testing.T) {
	result := operations.DivideBy6399(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6400(t *testing.T) {
	result := operations.DivideBy6400(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6401(t *testing.T) {
	result := operations.DivideBy6401(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6402(t *testing.T) {
	result := operations.DivideBy6402(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6403(t *testing.T) {
	result := operations.DivideBy6403(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6404(t *testing.T) {
	result := operations.DivideBy6404(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6405(t *testing.T) {
	result := operations.DivideBy6405(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6406(t *testing.T) {
	result := operations.DivideBy6406(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6407(t *testing.T) {
	result := operations.DivideBy6407(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6408(t *testing.T) {
	result := operations.DivideBy6408(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6409(t *testing.T) {
	result := operations.DivideBy6409(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6410(t *testing.T) {
	result := operations.DivideBy6410(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6411(t *testing.T) {
	result := operations.DivideBy6411(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6412(t *testing.T) {
	result := operations.DivideBy6412(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6413(t *testing.T) {
	result := operations.DivideBy6413(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6414(t *testing.T) {
	result := operations.DivideBy6414(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6415(t *testing.T) {
	result := operations.DivideBy6415(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6416(t *testing.T) {
	result := operations.DivideBy6416(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6417(t *testing.T) {
	result := operations.DivideBy6417(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6418(t *testing.T) {
	result := operations.DivideBy6418(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6419(t *testing.T) {
	result := operations.DivideBy6419(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6420(t *testing.T) {
	result := operations.DivideBy6420(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6421(t *testing.T) {
	result := operations.DivideBy6421(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6422(t *testing.T) {
	result := operations.DivideBy6422(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6423(t *testing.T) {
	result := operations.DivideBy6423(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6424(t *testing.T) {
	result := operations.DivideBy6424(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6425(t *testing.T) {
	result := operations.DivideBy6425(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6426(t *testing.T) {
	result := operations.DivideBy6426(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6427(t *testing.T) {
	result := operations.DivideBy6427(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6428(t *testing.T) {
	result := operations.DivideBy6428(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6429(t *testing.T) {
	result := operations.DivideBy6429(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6430(t *testing.T) {
	result := operations.DivideBy6430(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6431(t *testing.T) {
	result := operations.DivideBy6431(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6432(t *testing.T) {
	result := operations.DivideBy6432(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6433(t *testing.T) {
	result := operations.DivideBy6433(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6434(t *testing.T) {
	result := operations.DivideBy6434(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6435(t *testing.T) {
	result := operations.DivideBy6435(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6436(t *testing.T) {
	result := operations.DivideBy6436(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6437(t *testing.T) {
	result := operations.DivideBy6437(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6438(t *testing.T) {
	result := operations.DivideBy6438(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6439(t *testing.T) {
	result := operations.DivideBy6439(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6440(t *testing.T) {
	result := operations.DivideBy6440(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6441(t *testing.T) {
	result := operations.DivideBy6441(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6442(t *testing.T) {
	result := operations.DivideBy6442(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6443(t *testing.T) {
	result := operations.DivideBy6443(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6444(t *testing.T) {
	result := operations.DivideBy6444(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6445(t *testing.T) {
	result := operations.DivideBy6445(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6446(t *testing.T) {
	result := operations.DivideBy6446(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6447(t *testing.T) {
	result := operations.DivideBy6447(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6448(t *testing.T) {
	result := operations.DivideBy6448(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6449(t *testing.T) {
	result := operations.DivideBy6449(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6450(t *testing.T) {
	result := operations.DivideBy6450(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6451(t *testing.T) {
	result := operations.DivideBy6451(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6452(t *testing.T) {
	result := operations.DivideBy6452(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6453(t *testing.T) {
	result := operations.DivideBy6453(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6454(t *testing.T) {
	result := operations.DivideBy6454(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6455(t *testing.T) {
	result := operations.DivideBy6455(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6456(t *testing.T) {
	result := operations.DivideBy6456(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6457(t *testing.T) {
	result := operations.DivideBy6457(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6458(t *testing.T) {
	result := operations.DivideBy6458(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6459(t *testing.T) {
	result := operations.DivideBy6459(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6460(t *testing.T) {
	result := operations.DivideBy6460(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6461(t *testing.T) {
	result := operations.DivideBy6461(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6462(t *testing.T) {
	result := operations.DivideBy6462(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6463(t *testing.T) {
	result := operations.DivideBy6463(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6464(t *testing.T) {
	result := operations.DivideBy6464(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6465(t *testing.T) {
	result := operations.DivideBy6465(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6466(t *testing.T) {
	result := operations.DivideBy6466(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6467(t *testing.T) {
	result := operations.DivideBy6467(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6468(t *testing.T) {
	result := operations.DivideBy6468(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6469(t *testing.T) {
	result := operations.DivideBy6469(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6470(t *testing.T) {
	result := operations.DivideBy6470(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6471(t *testing.T) {
	result := operations.DivideBy6471(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6472(t *testing.T) {
	result := operations.DivideBy6472(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6473(t *testing.T) {
	result := operations.DivideBy6473(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6474(t *testing.T) {
	result := operations.DivideBy6474(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6475(t *testing.T) {
	result := operations.DivideBy6475(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6476(t *testing.T) {
	result := operations.DivideBy6476(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6477(t *testing.T) {
	result := operations.DivideBy6477(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6478(t *testing.T) {
	result := operations.DivideBy6478(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6479(t *testing.T) {
	result := operations.DivideBy6479(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6480(t *testing.T) {
	result := operations.DivideBy6480(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6481(t *testing.T) {
	result := operations.DivideBy6481(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6482(t *testing.T) {
	result := operations.DivideBy6482(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6483(t *testing.T) {
	result := operations.DivideBy6483(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6484(t *testing.T) {
	result := operations.DivideBy6484(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6485(t *testing.T) {
	result := operations.DivideBy6485(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6486(t *testing.T) {
	result := operations.DivideBy6486(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6487(t *testing.T) {
	result := operations.DivideBy6487(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6488(t *testing.T) {
	result := operations.DivideBy6488(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6489(t *testing.T) {
	result := operations.DivideBy6489(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6490(t *testing.T) {
	result := operations.DivideBy6490(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6491(t *testing.T) {
	result := operations.DivideBy6491(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6492(t *testing.T) {
	result := operations.DivideBy6492(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6493(t *testing.T) {
	result := operations.DivideBy6493(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6494(t *testing.T) {
	result := operations.DivideBy6494(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6495(t *testing.T) {
	result := operations.DivideBy6495(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6496(t *testing.T) {
	result := operations.DivideBy6496(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6497(t *testing.T) {
	result := operations.DivideBy6497(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6498(t *testing.T) {
	result := operations.DivideBy6498(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6499(t *testing.T) {
	result := operations.DivideBy6499(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6500(t *testing.T) {
	result := operations.DivideBy6500(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6501(t *testing.T) {
	result := operations.DivideBy6501(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6502(t *testing.T) {
	result := operations.DivideBy6502(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6503(t *testing.T) {
	result := operations.DivideBy6503(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6504(t *testing.T) {
	result := operations.DivideBy6504(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6505(t *testing.T) {
	result := operations.DivideBy6505(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6506(t *testing.T) {
	result := operations.DivideBy6506(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6507(t *testing.T) {
	result := operations.DivideBy6507(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6508(t *testing.T) {
	result := operations.DivideBy6508(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6509(t *testing.T) {
	result := operations.DivideBy6509(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6510(t *testing.T) {
	result := operations.DivideBy6510(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6511(t *testing.T) {
	result := operations.DivideBy6511(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6512(t *testing.T) {
	result := operations.DivideBy6512(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6513(t *testing.T) {
	result := operations.DivideBy6513(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6514(t *testing.T) {
	result := operations.DivideBy6514(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6515(t *testing.T) {
	result := operations.DivideBy6515(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6516(t *testing.T) {
	result := operations.DivideBy6516(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6517(t *testing.T) {
	result := operations.DivideBy6517(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6518(t *testing.T) {
	result := operations.DivideBy6518(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6519(t *testing.T) {
	result := operations.DivideBy6519(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6520(t *testing.T) {
	result := operations.DivideBy6520(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6521(t *testing.T) {
	result := operations.DivideBy6521(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6522(t *testing.T) {
	result := operations.DivideBy6522(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6523(t *testing.T) {
	result := operations.DivideBy6523(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6524(t *testing.T) {
	result := operations.DivideBy6524(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6525(t *testing.T) {
	result := operations.DivideBy6525(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6526(t *testing.T) {
	result := operations.DivideBy6526(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6527(t *testing.T) {
	result := operations.DivideBy6527(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6528(t *testing.T) {
	result := operations.DivideBy6528(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6529(t *testing.T) {
	result := operations.DivideBy6529(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6530(t *testing.T) {
	result := operations.DivideBy6530(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6531(t *testing.T) {
	result := operations.DivideBy6531(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6532(t *testing.T) {
	result := operations.DivideBy6532(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6533(t *testing.T) {
	result := operations.DivideBy6533(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6534(t *testing.T) {
	result := operations.DivideBy6534(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6535(t *testing.T) {
	result := operations.DivideBy6535(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6536(t *testing.T) {
	result := operations.DivideBy6536(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6537(t *testing.T) {
	result := operations.DivideBy6537(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6538(t *testing.T) {
	result := operations.DivideBy6538(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6539(t *testing.T) {
	result := operations.DivideBy6539(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6540(t *testing.T) {
	result := operations.DivideBy6540(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6541(t *testing.T) {
	result := operations.DivideBy6541(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6542(t *testing.T) {
	result := operations.DivideBy6542(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6543(t *testing.T) {
	result := operations.DivideBy6543(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6544(t *testing.T) {
	result := operations.DivideBy6544(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6545(t *testing.T) {
	result := operations.DivideBy6545(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6546(t *testing.T) {
	result := operations.DivideBy6546(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6547(t *testing.T) {
	result := operations.DivideBy6547(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6548(t *testing.T) {
	result := operations.DivideBy6548(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6549(t *testing.T) {
	result := operations.DivideBy6549(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6550(t *testing.T) {
	result := operations.DivideBy6550(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6551(t *testing.T) {
	result := operations.DivideBy6551(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6552(t *testing.T) {
	result := operations.DivideBy6552(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6553(t *testing.T) {
	result := operations.DivideBy6553(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6554(t *testing.T) {
	result := operations.DivideBy6554(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6555(t *testing.T) {
	result := operations.DivideBy6555(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6556(t *testing.T) {
	result := operations.DivideBy6556(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6557(t *testing.T) {
	result := operations.DivideBy6557(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6558(t *testing.T) {
	result := operations.DivideBy6558(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6559(t *testing.T) {
	result := operations.DivideBy6559(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6560(t *testing.T) {
	result := operations.DivideBy6560(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6561(t *testing.T) {
	result := operations.DivideBy6561(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6562(t *testing.T) {
	result := operations.DivideBy6562(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6563(t *testing.T) {
	result := operations.DivideBy6563(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6564(t *testing.T) {
	result := operations.DivideBy6564(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6565(t *testing.T) {
	result := operations.DivideBy6565(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6566(t *testing.T) {
	result := operations.DivideBy6566(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6567(t *testing.T) {
	result := operations.DivideBy6567(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6568(t *testing.T) {
	result := operations.DivideBy6568(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6569(t *testing.T) {
	result := operations.DivideBy6569(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6570(t *testing.T) {
	result := operations.DivideBy6570(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6571(t *testing.T) {
	result := operations.DivideBy6571(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6572(t *testing.T) {
	result := operations.DivideBy6572(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6573(t *testing.T) {
	result := operations.DivideBy6573(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6574(t *testing.T) {
	result := operations.DivideBy6574(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6575(t *testing.T) {
	result := operations.DivideBy6575(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6576(t *testing.T) {
	result := operations.DivideBy6576(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6577(t *testing.T) {
	result := operations.DivideBy6577(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6578(t *testing.T) {
	result := operations.DivideBy6578(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6579(t *testing.T) {
	result := operations.DivideBy6579(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6580(t *testing.T) {
	result := operations.DivideBy6580(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6581(t *testing.T) {
	result := operations.DivideBy6581(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6582(t *testing.T) {
	result := operations.DivideBy6582(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6583(t *testing.T) {
	result := operations.DivideBy6583(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6584(t *testing.T) {
	result := operations.DivideBy6584(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6585(t *testing.T) {
	result := operations.DivideBy6585(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6586(t *testing.T) {
	result := operations.DivideBy6586(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6587(t *testing.T) {
	result := operations.DivideBy6587(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6588(t *testing.T) {
	result := operations.DivideBy6588(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6589(t *testing.T) {
	result := operations.DivideBy6589(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6590(t *testing.T) {
	result := operations.DivideBy6590(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6591(t *testing.T) {
	result := operations.DivideBy6591(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6592(t *testing.T) {
	result := operations.DivideBy6592(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6593(t *testing.T) {
	result := operations.DivideBy6593(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6594(t *testing.T) {
	result := operations.DivideBy6594(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6595(t *testing.T) {
	result := operations.DivideBy6595(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6596(t *testing.T) {
	result := operations.DivideBy6596(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6597(t *testing.T) {
	result := operations.DivideBy6597(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6598(t *testing.T) {
	result := operations.DivideBy6598(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6599(t *testing.T) {
	result := operations.DivideBy6599(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6600(t *testing.T) {
	result := operations.DivideBy6600(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6601(t *testing.T) {
	result := operations.DivideBy6601(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6602(t *testing.T) {
	result := operations.DivideBy6602(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6603(t *testing.T) {
	result := operations.DivideBy6603(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6604(t *testing.T) {
	result := operations.DivideBy6604(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6605(t *testing.T) {
	result := operations.DivideBy6605(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6606(t *testing.T) {
	result := operations.DivideBy6606(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6607(t *testing.T) {
	result := operations.DivideBy6607(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6608(t *testing.T) {
	result := operations.DivideBy6608(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6609(t *testing.T) {
	result := operations.DivideBy6609(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6610(t *testing.T) {
	result := operations.DivideBy6610(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6611(t *testing.T) {
	result := operations.DivideBy6611(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6612(t *testing.T) {
	result := operations.DivideBy6612(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6613(t *testing.T) {
	result := operations.DivideBy6613(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6614(t *testing.T) {
	result := operations.DivideBy6614(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6615(t *testing.T) {
	result := operations.DivideBy6615(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6616(t *testing.T) {
	result := operations.DivideBy6616(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6617(t *testing.T) {
	result := operations.DivideBy6617(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6618(t *testing.T) {
	result := operations.DivideBy6618(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6619(t *testing.T) {
	result := operations.DivideBy6619(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6620(t *testing.T) {
	result := operations.DivideBy6620(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6621(t *testing.T) {
	result := operations.DivideBy6621(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6622(t *testing.T) {
	result := operations.DivideBy6622(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6623(t *testing.T) {
	result := operations.DivideBy6623(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6624(t *testing.T) {
	result := operations.DivideBy6624(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6625(t *testing.T) {
	result := operations.DivideBy6625(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6626(t *testing.T) {
	result := operations.DivideBy6626(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6627(t *testing.T) {
	result := operations.DivideBy6627(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6628(t *testing.T) {
	result := operations.DivideBy6628(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6629(t *testing.T) {
	result := operations.DivideBy6629(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6630(t *testing.T) {
	result := operations.DivideBy6630(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6631(t *testing.T) {
	result := operations.DivideBy6631(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6632(t *testing.T) {
	result := operations.DivideBy6632(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6633(t *testing.T) {
	result := operations.DivideBy6633(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6634(t *testing.T) {
	result := operations.DivideBy6634(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6635(t *testing.T) {
	result := operations.DivideBy6635(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6636(t *testing.T) {
	result := operations.DivideBy6636(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6637(t *testing.T) {
	result := operations.DivideBy6637(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6638(t *testing.T) {
	result := operations.DivideBy6638(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6639(t *testing.T) {
	result := operations.DivideBy6639(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6640(t *testing.T) {
	result := operations.DivideBy6640(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6641(t *testing.T) {
	result := operations.DivideBy6641(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6642(t *testing.T) {
	result := operations.DivideBy6642(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6643(t *testing.T) {
	result := operations.DivideBy6643(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6644(t *testing.T) {
	result := operations.DivideBy6644(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6645(t *testing.T) {
	result := operations.DivideBy6645(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6646(t *testing.T) {
	result := operations.DivideBy6646(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6647(t *testing.T) {
	result := operations.DivideBy6647(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6648(t *testing.T) {
	result := operations.DivideBy6648(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6649(t *testing.T) {
	result := operations.DivideBy6649(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6650(t *testing.T) {
	result := operations.DivideBy6650(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6651(t *testing.T) {
	result := operations.DivideBy6651(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6652(t *testing.T) {
	result := operations.DivideBy6652(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6653(t *testing.T) {
	result := operations.DivideBy6653(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6654(t *testing.T) {
	result := operations.DivideBy6654(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6655(t *testing.T) {
	result := operations.DivideBy6655(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6656(t *testing.T) {
	result := operations.DivideBy6656(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6657(t *testing.T) {
	result := operations.DivideBy6657(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6658(t *testing.T) {
	result := operations.DivideBy6658(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6659(t *testing.T) {
	result := operations.DivideBy6659(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6660(t *testing.T) {
	result := operations.DivideBy6660(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6661(t *testing.T) {
	result := operations.DivideBy6661(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6662(t *testing.T) {
	result := operations.DivideBy6662(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6663(t *testing.T) {
	result := operations.DivideBy6663(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6664(t *testing.T) {
	result := operations.DivideBy6664(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6665(t *testing.T) {
	result := operations.DivideBy6665(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6666(t *testing.T) {
	result := operations.DivideBy6666(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6667(t *testing.T) {
	result := operations.DivideBy6667(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6668(t *testing.T) {
	result := operations.DivideBy6668(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6669(t *testing.T) {
	result := operations.DivideBy6669(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6670(t *testing.T) {
	result := operations.DivideBy6670(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6671(t *testing.T) {
	result := operations.DivideBy6671(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6672(t *testing.T) {
	result := operations.DivideBy6672(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6673(t *testing.T) {
	result := operations.DivideBy6673(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6674(t *testing.T) {
	result := operations.DivideBy6674(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6675(t *testing.T) {
	result := operations.DivideBy6675(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6676(t *testing.T) {
	result := operations.DivideBy6676(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6677(t *testing.T) {
	result := operations.DivideBy6677(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6678(t *testing.T) {
	result := operations.DivideBy6678(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6679(t *testing.T) {
	result := operations.DivideBy6679(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6680(t *testing.T) {
	result := operations.DivideBy6680(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6681(t *testing.T) {
	result := operations.DivideBy6681(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6682(t *testing.T) {
	result := operations.DivideBy6682(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6683(t *testing.T) {
	result := operations.DivideBy6683(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6684(t *testing.T) {
	result := operations.DivideBy6684(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6685(t *testing.T) {
	result := operations.DivideBy6685(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6686(t *testing.T) {
	result := operations.DivideBy6686(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6687(t *testing.T) {
	result := operations.DivideBy6687(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6688(t *testing.T) {
	result := operations.DivideBy6688(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6689(t *testing.T) {
	result := operations.DivideBy6689(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6690(t *testing.T) {
	result := operations.DivideBy6690(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6691(t *testing.T) {
	result := operations.DivideBy6691(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6692(t *testing.T) {
	result := operations.DivideBy6692(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6693(t *testing.T) {
	result := operations.DivideBy6693(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6694(t *testing.T) {
	result := operations.DivideBy6694(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6695(t *testing.T) {
	result := operations.DivideBy6695(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6696(t *testing.T) {
	result := operations.DivideBy6696(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6697(t *testing.T) {
	result := operations.DivideBy6697(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6698(t *testing.T) {
	result := operations.DivideBy6698(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6699(t *testing.T) {
	result := operations.DivideBy6699(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6700(t *testing.T) {
	result := operations.DivideBy6700(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6701(t *testing.T) {
	result := operations.DivideBy6701(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6702(t *testing.T) {
	result := operations.DivideBy6702(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6703(t *testing.T) {
	result := operations.DivideBy6703(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6704(t *testing.T) {
	result := operations.DivideBy6704(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6705(t *testing.T) {
	result := operations.DivideBy6705(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6706(t *testing.T) {
	result := operations.DivideBy6706(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6707(t *testing.T) {
	result := operations.DivideBy6707(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6708(t *testing.T) {
	result := operations.DivideBy6708(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6709(t *testing.T) {
	result := operations.DivideBy6709(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6710(t *testing.T) {
	result := operations.DivideBy6710(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6711(t *testing.T) {
	result := operations.DivideBy6711(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6712(t *testing.T) {
	result := operations.DivideBy6712(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6713(t *testing.T) {
	result := operations.DivideBy6713(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6714(t *testing.T) {
	result := operations.DivideBy6714(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6715(t *testing.T) {
	result := operations.DivideBy6715(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6716(t *testing.T) {
	result := operations.DivideBy6716(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6717(t *testing.T) {
	result := operations.DivideBy6717(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6718(t *testing.T) {
	result := operations.DivideBy6718(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6719(t *testing.T) {
	result := operations.DivideBy6719(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6720(t *testing.T) {
	result := operations.DivideBy6720(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6721(t *testing.T) {
	result := operations.DivideBy6721(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6722(t *testing.T) {
	result := operations.DivideBy6722(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6723(t *testing.T) {
	result := operations.DivideBy6723(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6724(t *testing.T) {
	result := operations.DivideBy6724(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6725(t *testing.T) {
	result := operations.DivideBy6725(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6726(t *testing.T) {
	result := operations.DivideBy6726(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6727(t *testing.T) {
	result := operations.DivideBy6727(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6728(t *testing.T) {
	result := operations.DivideBy6728(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6729(t *testing.T) {
	result := operations.DivideBy6729(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6730(t *testing.T) {
	result := operations.DivideBy6730(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6731(t *testing.T) {
	result := operations.DivideBy6731(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6732(t *testing.T) {
	result := operations.DivideBy6732(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6733(t *testing.T) {
	result := operations.DivideBy6733(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6734(t *testing.T) {
	result := operations.DivideBy6734(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6735(t *testing.T) {
	result := operations.DivideBy6735(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6736(t *testing.T) {
	result := operations.DivideBy6736(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6737(t *testing.T) {
	result := operations.DivideBy6737(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6738(t *testing.T) {
	result := operations.DivideBy6738(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6739(t *testing.T) {
	result := operations.DivideBy6739(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6740(t *testing.T) {
	result := operations.DivideBy6740(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6741(t *testing.T) {
	result := operations.DivideBy6741(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6742(t *testing.T) {
	result := operations.DivideBy6742(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6743(t *testing.T) {
	result := operations.DivideBy6743(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6744(t *testing.T) {
	result := operations.DivideBy6744(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6745(t *testing.T) {
	result := operations.DivideBy6745(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6746(t *testing.T) {
	result := operations.DivideBy6746(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6747(t *testing.T) {
	result := operations.DivideBy6747(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6748(t *testing.T) {
	result := operations.DivideBy6748(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6749(t *testing.T) {
	result := operations.DivideBy6749(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6750(t *testing.T) {
	result := operations.DivideBy6750(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6751(t *testing.T) {
	result := operations.DivideBy6751(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6752(t *testing.T) {
	result := operations.DivideBy6752(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6753(t *testing.T) {
	result := operations.DivideBy6753(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6754(t *testing.T) {
	result := operations.DivideBy6754(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6755(t *testing.T) {
	result := operations.DivideBy6755(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6756(t *testing.T) {
	result := operations.DivideBy6756(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6757(t *testing.T) {
	result := operations.DivideBy6757(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6758(t *testing.T) {
	result := operations.DivideBy6758(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6759(t *testing.T) {
	result := operations.DivideBy6759(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6760(t *testing.T) {
	result := operations.DivideBy6760(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6761(t *testing.T) {
	result := operations.DivideBy6761(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6762(t *testing.T) {
	result := operations.DivideBy6762(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6763(t *testing.T) {
	result := operations.DivideBy6763(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6764(t *testing.T) {
	result := operations.DivideBy6764(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6765(t *testing.T) {
	result := operations.DivideBy6765(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6766(t *testing.T) {
	result := operations.DivideBy6766(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6767(t *testing.T) {
	result := operations.DivideBy6767(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6768(t *testing.T) {
	result := operations.DivideBy6768(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6769(t *testing.T) {
	result := operations.DivideBy6769(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6770(t *testing.T) {
	result := operations.DivideBy6770(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6771(t *testing.T) {
	result := operations.DivideBy6771(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6772(t *testing.T) {
	result := operations.DivideBy6772(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6773(t *testing.T) {
	result := operations.DivideBy6773(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6774(t *testing.T) {
	result := operations.DivideBy6774(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6775(t *testing.T) {
	result := operations.DivideBy6775(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6776(t *testing.T) {
	result := operations.DivideBy6776(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6777(t *testing.T) {
	result := operations.DivideBy6777(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6778(t *testing.T) {
	result := operations.DivideBy6778(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6779(t *testing.T) {
	result := operations.DivideBy6779(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6780(t *testing.T) {
	result := operations.DivideBy6780(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6781(t *testing.T) {
	result := operations.DivideBy6781(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6782(t *testing.T) {
	result := operations.DivideBy6782(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6783(t *testing.T) {
	result := operations.DivideBy6783(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6784(t *testing.T) {
	result := operations.DivideBy6784(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6785(t *testing.T) {
	result := operations.DivideBy6785(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6786(t *testing.T) {
	result := operations.DivideBy6786(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6787(t *testing.T) {
	result := operations.DivideBy6787(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6788(t *testing.T) {
	result := operations.DivideBy6788(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6789(t *testing.T) {
	result := operations.DivideBy6789(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6790(t *testing.T) {
	result := operations.DivideBy6790(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6791(t *testing.T) {
	result := operations.DivideBy6791(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6792(t *testing.T) {
	result := operations.DivideBy6792(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6793(t *testing.T) {
	result := operations.DivideBy6793(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6794(t *testing.T) {
	result := operations.DivideBy6794(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6795(t *testing.T) {
	result := operations.DivideBy6795(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6796(t *testing.T) {
	result := operations.DivideBy6796(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6797(t *testing.T) {
	result := operations.DivideBy6797(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6798(t *testing.T) {
	result := operations.DivideBy6798(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6799(t *testing.T) {
	result := operations.DivideBy6799(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6800(t *testing.T) {
	result := operations.DivideBy6800(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6801(t *testing.T) {
	result := operations.DivideBy6801(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6802(t *testing.T) {
	result := operations.DivideBy6802(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6803(t *testing.T) {
	result := operations.DivideBy6803(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6804(t *testing.T) {
	result := operations.DivideBy6804(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6805(t *testing.T) {
	result := operations.DivideBy6805(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6806(t *testing.T) {
	result := operations.DivideBy6806(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6807(t *testing.T) {
	result := operations.DivideBy6807(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6808(t *testing.T) {
	result := operations.DivideBy6808(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6809(t *testing.T) {
	result := operations.DivideBy6809(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6810(t *testing.T) {
	result := operations.DivideBy6810(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6811(t *testing.T) {
	result := operations.DivideBy6811(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6812(t *testing.T) {
	result := operations.DivideBy6812(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6813(t *testing.T) {
	result := operations.DivideBy6813(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6814(t *testing.T) {
	result := operations.DivideBy6814(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6815(t *testing.T) {
	result := operations.DivideBy6815(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6816(t *testing.T) {
	result := operations.DivideBy6816(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6817(t *testing.T) {
	result := operations.DivideBy6817(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6818(t *testing.T) {
	result := operations.DivideBy6818(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6819(t *testing.T) {
	result := operations.DivideBy6819(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6820(t *testing.T) {
	result := operations.DivideBy6820(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6821(t *testing.T) {
	result := operations.DivideBy6821(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6822(t *testing.T) {
	result := operations.DivideBy6822(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6823(t *testing.T) {
	result := operations.DivideBy6823(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6824(t *testing.T) {
	result := operations.DivideBy6824(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6825(t *testing.T) {
	result := operations.DivideBy6825(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6826(t *testing.T) {
	result := operations.DivideBy6826(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6827(t *testing.T) {
	result := operations.DivideBy6827(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6828(t *testing.T) {
	result := operations.DivideBy6828(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6829(t *testing.T) {
	result := operations.DivideBy6829(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6830(t *testing.T) {
	result := operations.DivideBy6830(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6831(t *testing.T) {
	result := operations.DivideBy6831(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6832(t *testing.T) {
	result := operations.DivideBy6832(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6833(t *testing.T) {
	result := operations.DivideBy6833(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6834(t *testing.T) {
	result := operations.DivideBy6834(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6835(t *testing.T) {
	result := operations.DivideBy6835(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6836(t *testing.T) {
	result := operations.DivideBy6836(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6837(t *testing.T) {
	result := operations.DivideBy6837(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6838(t *testing.T) {
	result := operations.DivideBy6838(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6839(t *testing.T) {
	result := operations.DivideBy6839(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6840(t *testing.T) {
	result := operations.DivideBy6840(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6841(t *testing.T) {
	result := operations.DivideBy6841(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6842(t *testing.T) {
	result := operations.DivideBy6842(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6843(t *testing.T) {
	result := operations.DivideBy6843(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6844(t *testing.T) {
	result := operations.DivideBy6844(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6845(t *testing.T) {
	result := operations.DivideBy6845(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6846(t *testing.T) {
	result := operations.DivideBy6846(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6847(t *testing.T) {
	result := operations.DivideBy6847(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6848(t *testing.T) {
	result := operations.DivideBy6848(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6849(t *testing.T) {
	result := operations.DivideBy6849(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6850(t *testing.T) {
	result := operations.DivideBy6850(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6851(t *testing.T) {
	result := operations.DivideBy6851(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6852(t *testing.T) {
	result := operations.DivideBy6852(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6853(t *testing.T) {
	result := operations.DivideBy6853(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6854(t *testing.T) {
	result := operations.DivideBy6854(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6855(t *testing.T) {
	result := operations.DivideBy6855(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6856(t *testing.T) {
	result := operations.DivideBy6856(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6857(t *testing.T) {
	result := operations.DivideBy6857(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6858(t *testing.T) {
	result := operations.DivideBy6858(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6859(t *testing.T) {
	result := operations.DivideBy6859(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6860(t *testing.T) {
	result := operations.DivideBy6860(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6861(t *testing.T) {
	result := operations.DivideBy6861(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6862(t *testing.T) {
	result := operations.DivideBy6862(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6863(t *testing.T) {
	result := operations.DivideBy6863(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6864(t *testing.T) {
	result := operations.DivideBy6864(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6865(t *testing.T) {
	result := operations.DivideBy6865(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6866(t *testing.T) {
	result := operations.DivideBy6866(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6867(t *testing.T) {
	result := operations.DivideBy6867(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6868(t *testing.T) {
	result := operations.DivideBy6868(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6869(t *testing.T) {
	result := operations.DivideBy6869(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6870(t *testing.T) {
	result := operations.DivideBy6870(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6871(t *testing.T) {
	result := operations.DivideBy6871(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6872(t *testing.T) {
	result := operations.DivideBy6872(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6873(t *testing.T) {
	result := operations.DivideBy6873(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6874(t *testing.T) {
	result := operations.DivideBy6874(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6875(t *testing.T) {
	result := operations.DivideBy6875(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6876(t *testing.T) {
	result := operations.DivideBy6876(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6877(t *testing.T) {
	result := operations.DivideBy6877(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6878(t *testing.T) {
	result := operations.DivideBy6878(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6879(t *testing.T) {
	result := operations.DivideBy6879(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6880(t *testing.T) {
	result := operations.DivideBy6880(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6881(t *testing.T) {
	result := operations.DivideBy6881(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6882(t *testing.T) {
	result := operations.DivideBy6882(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6883(t *testing.T) {
	result := operations.DivideBy6883(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6884(t *testing.T) {
	result := operations.DivideBy6884(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6885(t *testing.T) {
	result := operations.DivideBy6885(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6886(t *testing.T) {
	result := operations.DivideBy6886(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6887(t *testing.T) {
	result := operations.DivideBy6887(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6888(t *testing.T) {
	result := operations.DivideBy6888(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6889(t *testing.T) {
	result := operations.DivideBy6889(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6890(t *testing.T) {
	result := operations.DivideBy6890(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6891(t *testing.T) {
	result := operations.DivideBy6891(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6892(t *testing.T) {
	result := operations.DivideBy6892(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6893(t *testing.T) {
	result := operations.DivideBy6893(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6894(t *testing.T) {
	result := operations.DivideBy6894(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6895(t *testing.T) {
	result := operations.DivideBy6895(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6896(t *testing.T) {
	result := operations.DivideBy6896(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6897(t *testing.T) {
	result := operations.DivideBy6897(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6898(t *testing.T) {
	result := operations.DivideBy6898(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6899(t *testing.T) {
	result := operations.DivideBy6899(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6900(t *testing.T) {
	result := operations.DivideBy6900(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6901(t *testing.T) {
	result := operations.DivideBy6901(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6902(t *testing.T) {
	result := operations.DivideBy6902(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6903(t *testing.T) {
	result := operations.DivideBy6903(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6904(t *testing.T) {
	result := operations.DivideBy6904(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6905(t *testing.T) {
	result := operations.DivideBy6905(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6906(t *testing.T) {
	result := operations.DivideBy6906(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6907(t *testing.T) {
	result := operations.DivideBy6907(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6908(t *testing.T) {
	result := operations.DivideBy6908(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6909(t *testing.T) {
	result := operations.DivideBy6909(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6910(t *testing.T) {
	result := operations.DivideBy6910(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6911(t *testing.T) {
	result := operations.DivideBy6911(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6912(t *testing.T) {
	result := operations.DivideBy6912(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6913(t *testing.T) {
	result := operations.DivideBy6913(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6914(t *testing.T) {
	result := operations.DivideBy6914(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6915(t *testing.T) {
	result := operations.DivideBy6915(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6916(t *testing.T) {
	result := operations.DivideBy6916(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6917(t *testing.T) {
	result := operations.DivideBy6917(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6918(t *testing.T) {
	result := operations.DivideBy6918(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6919(t *testing.T) {
	result := operations.DivideBy6919(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6920(t *testing.T) {
	result := operations.DivideBy6920(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6921(t *testing.T) {
	result := operations.DivideBy6921(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6922(t *testing.T) {
	result := operations.DivideBy6922(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6923(t *testing.T) {
	result := operations.DivideBy6923(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6924(t *testing.T) {
	result := operations.DivideBy6924(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6925(t *testing.T) {
	result := operations.DivideBy6925(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6926(t *testing.T) {
	result := operations.DivideBy6926(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6927(t *testing.T) {
	result := operations.DivideBy6927(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6928(t *testing.T) {
	result := operations.DivideBy6928(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6929(t *testing.T) {
	result := operations.DivideBy6929(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6930(t *testing.T) {
	result := operations.DivideBy6930(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6931(t *testing.T) {
	result := operations.DivideBy6931(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6932(t *testing.T) {
	result := operations.DivideBy6932(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6933(t *testing.T) {
	result := operations.DivideBy6933(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6934(t *testing.T) {
	result := operations.DivideBy6934(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6935(t *testing.T) {
	result := operations.DivideBy6935(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6936(t *testing.T) {
	result := operations.DivideBy6936(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6937(t *testing.T) {
	result := operations.DivideBy6937(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6938(t *testing.T) {
	result := operations.DivideBy6938(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6939(t *testing.T) {
	result := operations.DivideBy6939(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6940(t *testing.T) {
	result := operations.DivideBy6940(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6941(t *testing.T) {
	result := operations.DivideBy6941(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6942(t *testing.T) {
	result := operations.DivideBy6942(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6943(t *testing.T) {
	result := operations.DivideBy6943(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6944(t *testing.T) {
	result := operations.DivideBy6944(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6945(t *testing.T) {
	result := operations.DivideBy6945(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6946(t *testing.T) {
	result := operations.DivideBy6946(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6947(t *testing.T) {
	result := operations.DivideBy6947(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6948(t *testing.T) {
	result := operations.DivideBy6948(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6949(t *testing.T) {
	result := operations.DivideBy6949(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6950(t *testing.T) {
	result := operations.DivideBy6950(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6951(t *testing.T) {
	result := operations.DivideBy6951(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6952(t *testing.T) {
	result := operations.DivideBy6952(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6953(t *testing.T) {
	result := operations.DivideBy6953(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6954(t *testing.T) {
	result := operations.DivideBy6954(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6955(t *testing.T) {
	result := operations.DivideBy6955(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6956(t *testing.T) {
	result := operations.DivideBy6956(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6957(t *testing.T) {
	result := operations.DivideBy6957(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6958(t *testing.T) {
	result := operations.DivideBy6958(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6959(t *testing.T) {
	result := operations.DivideBy6959(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6960(t *testing.T) {
	result := operations.DivideBy6960(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6961(t *testing.T) {
	result := operations.DivideBy6961(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6962(t *testing.T) {
	result := operations.DivideBy6962(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6963(t *testing.T) {
	result := operations.DivideBy6963(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6964(t *testing.T) {
	result := operations.DivideBy6964(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6965(t *testing.T) {
	result := operations.DivideBy6965(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6966(t *testing.T) {
	result := operations.DivideBy6966(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6967(t *testing.T) {
	result := operations.DivideBy6967(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6968(t *testing.T) {
	result := operations.DivideBy6968(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6969(t *testing.T) {
	result := operations.DivideBy6969(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6970(t *testing.T) {
	result := operations.DivideBy6970(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6971(t *testing.T) {
	result := operations.DivideBy6971(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6972(t *testing.T) {
	result := operations.DivideBy6972(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6973(t *testing.T) {
	result := operations.DivideBy6973(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6974(t *testing.T) {
	result := operations.DivideBy6974(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6975(t *testing.T) {
	result := operations.DivideBy6975(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6976(t *testing.T) {
	result := operations.DivideBy6976(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6977(t *testing.T) {
	result := operations.DivideBy6977(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6978(t *testing.T) {
	result := operations.DivideBy6978(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6979(t *testing.T) {
	result := operations.DivideBy6979(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6980(t *testing.T) {
	result := operations.DivideBy6980(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6981(t *testing.T) {
	result := operations.DivideBy6981(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6982(t *testing.T) {
	result := operations.DivideBy6982(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6983(t *testing.T) {
	result := operations.DivideBy6983(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6984(t *testing.T) {
	result := operations.DivideBy6984(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6985(t *testing.T) {
	result := operations.DivideBy6985(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6986(t *testing.T) {
	result := operations.DivideBy6986(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6987(t *testing.T) {
	result := operations.DivideBy6987(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6988(t *testing.T) {
	result := operations.DivideBy6988(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6989(t *testing.T) {
	result := operations.DivideBy6989(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6990(t *testing.T) {
	result := operations.DivideBy6990(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6991(t *testing.T) {
	result := operations.DivideBy6991(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6992(t *testing.T) {
	result := operations.DivideBy6992(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6993(t *testing.T) {
	result := operations.DivideBy6993(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6994(t *testing.T) {
	result := operations.DivideBy6994(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6995(t *testing.T) {
	result := operations.DivideBy6995(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6996(t *testing.T) {
	result := operations.DivideBy6996(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6997(t *testing.T) {
	result := operations.DivideBy6997(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6998(t *testing.T) {
	result := operations.DivideBy6998(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy6999(t *testing.T) {
	result := operations.DivideBy6999(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7000(t *testing.T) {
	result := operations.DivideBy7000(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7001(t *testing.T) {
	result := operations.DivideBy7001(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7002(t *testing.T) {
	result := operations.DivideBy7002(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7003(t *testing.T) {
	result := operations.DivideBy7003(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7004(t *testing.T) {
	result := operations.DivideBy7004(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7005(t *testing.T) {
	result := operations.DivideBy7005(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7006(t *testing.T) {
	result := operations.DivideBy7006(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7007(t *testing.T) {
	result := operations.DivideBy7007(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7008(t *testing.T) {
	result := operations.DivideBy7008(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7009(t *testing.T) {
	result := operations.DivideBy7009(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7010(t *testing.T) {
	result := operations.DivideBy7010(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7011(t *testing.T) {
	result := operations.DivideBy7011(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7012(t *testing.T) {
	result := operations.DivideBy7012(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7013(t *testing.T) {
	result := operations.DivideBy7013(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7014(t *testing.T) {
	result := operations.DivideBy7014(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7015(t *testing.T) {
	result := operations.DivideBy7015(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7016(t *testing.T) {
	result := operations.DivideBy7016(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7017(t *testing.T) {
	result := operations.DivideBy7017(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7018(t *testing.T) {
	result := operations.DivideBy7018(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7019(t *testing.T) {
	result := operations.DivideBy7019(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7020(t *testing.T) {
	result := operations.DivideBy7020(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7021(t *testing.T) {
	result := operations.DivideBy7021(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7022(t *testing.T) {
	result := operations.DivideBy7022(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7023(t *testing.T) {
	result := operations.DivideBy7023(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7024(t *testing.T) {
	result := operations.DivideBy7024(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7025(t *testing.T) {
	result := operations.DivideBy7025(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7026(t *testing.T) {
	result := operations.DivideBy7026(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7027(t *testing.T) {
	result := operations.DivideBy7027(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7028(t *testing.T) {
	result := operations.DivideBy7028(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7029(t *testing.T) {
	result := operations.DivideBy7029(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7030(t *testing.T) {
	result := operations.DivideBy7030(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7031(t *testing.T) {
	result := operations.DivideBy7031(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7032(t *testing.T) {
	result := operations.DivideBy7032(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7033(t *testing.T) {
	result := operations.DivideBy7033(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7034(t *testing.T) {
	result := operations.DivideBy7034(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7035(t *testing.T) {
	result := operations.DivideBy7035(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7036(t *testing.T) {
	result := operations.DivideBy7036(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7037(t *testing.T) {
	result := operations.DivideBy7037(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7038(t *testing.T) {
	result := operations.DivideBy7038(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7039(t *testing.T) {
	result := operations.DivideBy7039(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7040(t *testing.T) {
	result := operations.DivideBy7040(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7041(t *testing.T) {
	result := operations.DivideBy7041(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7042(t *testing.T) {
	result := operations.DivideBy7042(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7043(t *testing.T) {
	result := operations.DivideBy7043(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7044(t *testing.T) {
	result := operations.DivideBy7044(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7045(t *testing.T) {
	result := operations.DivideBy7045(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7046(t *testing.T) {
	result := operations.DivideBy7046(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7047(t *testing.T) {
	result := operations.DivideBy7047(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7048(t *testing.T) {
	result := operations.DivideBy7048(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7049(t *testing.T) {
	result := operations.DivideBy7049(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7050(t *testing.T) {
	result := operations.DivideBy7050(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7051(t *testing.T) {
	result := operations.DivideBy7051(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7052(t *testing.T) {
	result := operations.DivideBy7052(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7053(t *testing.T) {
	result := operations.DivideBy7053(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7054(t *testing.T) {
	result := operations.DivideBy7054(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7055(t *testing.T) {
	result := operations.DivideBy7055(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7056(t *testing.T) {
	result := operations.DivideBy7056(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7057(t *testing.T) {
	result := operations.DivideBy7057(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7058(t *testing.T) {
	result := operations.DivideBy7058(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7059(t *testing.T) {
	result := operations.DivideBy7059(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7060(t *testing.T) {
	result := operations.DivideBy7060(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7061(t *testing.T) {
	result := operations.DivideBy7061(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7062(t *testing.T) {
	result := operations.DivideBy7062(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7063(t *testing.T) {
	result := operations.DivideBy7063(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7064(t *testing.T) {
	result := operations.DivideBy7064(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7065(t *testing.T) {
	result := operations.DivideBy7065(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7066(t *testing.T) {
	result := operations.DivideBy7066(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7067(t *testing.T) {
	result := operations.DivideBy7067(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7068(t *testing.T) {
	result := operations.DivideBy7068(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7069(t *testing.T) {
	result := operations.DivideBy7069(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7070(t *testing.T) {
	result := operations.DivideBy7070(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7071(t *testing.T) {
	result := operations.DivideBy7071(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7072(t *testing.T) {
	result := operations.DivideBy7072(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7073(t *testing.T) {
	result := operations.DivideBy7073(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7074(t *testing.T) {
	result := operations.DivideBy7074(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7075(t *testing.T) {
	result := operations.DivideBy7075(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7076(t *testing.T) {
	result := operations.DivideBy7076(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7077(t *testing.T) {
	result := operations.DivideBy7077(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7078(t *testing.T) {
	result := operations.DivideBy7078(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7079(t *testing.T) {
	result := operations.DivideBy7079(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7080(t *testing.T) {
	result := operations.DivideBy7080(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7081(t *testing.T) {
	result := operations.DivideBy7081(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7082(t *testing.T) {
	result := operations.DivideBy7082(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7083(t *testing.T) {
	result := operations.DivideBy7083(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7084(t *testing.T) {
	result := operations.DivideBy7084(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7085(t *testing.T) {
	result := operations.DivideBy7085(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7086(t *testing.T) {
	result := operations.DivideBy7086(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7087(t *testing.T) {
	result := operations.DivideBy7087(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7088(t *testing.T) {
	result := operations.DivideBy7088(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7089(t *testing.T) {
	result := operations.DivideBy7089(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7090(t *testing.T) {
	result := operations.DivideBy7090(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7091(t *testing.T) {
	result := operations.DivideBy7091(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7092(t *testing.T) {
	result := operations.DivideBy7092(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7093(t *testing.T) {
	result := operations.DivideBy7093(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7094(t *testing.T) {
	result := operations.DivideBy7094(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7095(t *testing.T) {
	result := operations.DivideBy7095(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7096(t *testing.T) {
	result := operations.DivideBy7096(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7097(t *testing.T) {
	result := operations.DivideBy7097(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7098(t *testing.T) {
	result := operations.DivideBy7098(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7099(t *testing.T) {
	result := operations.DivideBy7099(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7100(t *testing.T) {
	result := operations.DivideBy7100(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7101(t *testing.T) {
	result := operations.DivideBy7101(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7102(t *testing.T) {
	result := operations.DivideBy7102(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7103(t *testing.T) {
	result := operations.DivideBy7103(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7104(t *testing.T) {
	result := operations.DivideBy7104(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7105(t *testing.T) {
	result := operations.DivideBy7105(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7106(t *testing.T) {
	result := operations.DivideBy7106(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7107(t *testing.T) {
	result := operations.DivideBy7107(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7108(t *testing.T) {
	result := operations.DivideBy7108(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7109(t *testing.T) {
	result := operations.DivideBy7109(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7110(t *testing.T) {
	result := operations.DivideBy7110(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7111(t *testing.T) {
	result := operations.DivideBy7111(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7112(t *testing.T) {
	result := operations.DivideBy7112(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7113(t *testing.T) {
	result := operations.DivideBy7113(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7114(t *testing.T) {
	result := operations.DivideBy7114(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7115(t *testing.T) {
	result := operations.DivideBy7115(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7116(t *testing.T) {
	result := operations.DivideBy7116(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7117(t *testing.T) {
	result := operations.DivideBy7117(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7118(t *testing.T) {
	result := operations.DivideBy7118(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7119(t *testing.T) {
	result := operations.DivideBy7119(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7120(t *testing.T) {
	result := operations.DivideBy7120(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7121(t *testing.T) {
	result := operations.DivideBy7121(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7122(t *testing.T) {
	result := operations.DivideBy7122(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7123(t *testing.T) {
	result := operations.DivideBy7123(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7124(t *testing.T) {
	result := operations.DivideBy7124(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7125(t *testing.T) {
	result := operations.DivideBy7125(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7126(t *testing.T) {
	result := operations.DivideBy7126(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7127(t *testing.T) {
	result := operations.DivideBy7127(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7128(t *testing.T) {
	result := operations.DivideBy7128(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7129(t *testing.T) {
	result := operations.DivideBy7129(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7130(t *testing.T) {
	result := operations.DivideBy7130(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7131(t *testing.T) {
	result := operations.DivideBy7131(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7132(t *testing.T) {
	result := operations.DivideBy7132(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7133(t *testing.T) {
	result := operations.DivideBy7133(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7134(t *testing.T) {
	result := operations.DivideBy7134(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7135(t *testing.T) {
	result := operations.DivideBy7135(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7136(t *testing.T) {
	result := operations.DivideBy7136(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7137(t *testing.T) {
	result := operations.DivideBy7137(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7138(t *testing.T) {
	result := operations.DivideBy7138(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7139(t *testing.T) {
	result := operations.DivideBy7139(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7140(t *testing.T) {
	result := operations.DivideBy7140(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7141(t *testing.T) {
	result := operations.DivideBy7141(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7142(t *testing.T) {
	result := operations.DivideBy7142(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7143(t *testing.T) {
	result := operations.DivideBy7143(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7144(t *testing.T) {
	result := operations.DivideBy7144(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7145(t *testing.T) {
	result := operations.DivideBy7145(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7146(t *testing.T) {
	result := operations.DivideBy7146(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7147(t *testing.T) {
	result := operations.DivideBy7147(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7148(t *testing.T) {
	result := operations.DivideBy7148(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7149(t *testing.T) {
	result := operations.DivideBy7149(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7150(t *testing.T) {
	result := operations.DivideBy7150(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7151(t *testing.T) {
	result := operations.DivideBy7151(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7152(t *testing.T) {
	result := operations.DivideBy7152(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7153(t *testing.T) {
	result := operations.DivideBy7153(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7154(t *testing.T) {
	result := operations.DivideBy7154(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7155(t *testing.T) {
	result := operations.DivideBy7155(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7156(t *testing.T) {
	result := operations.DivideBy7156(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7157(t *testing.T) {
	result := operations.DivideBy7157(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7158(t *testing.T) {
	result := operations.DivideBy7158(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7159(t *testing.T) {
	result := operations.DivideBy7159(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7160(t *testing.T) {
	result := operations.DivideBy7160(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7161(t *testing.T) {
	result := operations.DivideBy7161(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7162(t *testing.T) {
	result := operations.DivideBy7162(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7163(t *testing.T) {
	result := operations.DivideBy7163(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7164(t *testing.T) {
	result := operations.DivideBy7164(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7165(t *testing.T) {
	result := operations.DivideBy7165(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7166(t *testing.T) {
	result := operations.DivideBy7166(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7167(t *testing.T) {
	result := operations.DivideBy7167(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7168(t *testing.T) {
	result := operations.DivideBy7168(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7169(t *testing.T) {
	result := operations.DivideBy7169(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7170(t *testing.T) {
	result := operations.DivideBy7170(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7171(t *testing.T) {
	result := operations.DivideBy7171(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7172(t *testing.T) {
	result := operations.DivideBy7172(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7173(t *testing.T) {
	result := operations.DivideBy7173(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7174(t *testing.T) {
	result := operations.DivideBy7174(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7175(t *testing.T) {
	result := operations.DivideBy7175(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7176(t *testing.T) {
	result := operations.DivideBy7176(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7177(t *testing.T) {
	result := operations.DivideBy7177(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7178(t *testing.T) {
	result := operations.DivideBy7178(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7179(t *testing.T) {
	result := operations.DivideBy7179(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7180(t *testing.T) {
	result := operations.DivideBy7180(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7181(t *testing.T) {
	result := operations.DivideBy7181(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7182(t *testing.T) {
	result := operations.DivideBy7182(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7183(t *testing.T) {
	result := operations.DivideBy7183(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7184(t *testing.T) {
	result := operations.DivideBy7184(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7185(t *testing.T) {
	result := operations.DivideBy7185(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7186(t *testing.T) {
	result := operations.DivideBy7186(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7187(t *testing.T) {
	result := operations.DivideBy7187(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7188(t *testing.T) {
	result := operations.DivideBy7188(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7189(t *testing.T) {
	result := operations.DivideBy7189(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7190(t *testing.T) {
	result := operations.DivideBy7190(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7191(t *testing.T) {
	result := operations.DivideBy7191(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7192(t *testing.T) {
	result := operations.DivideBy7192(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7193(t *testing.T) {
	result := operations.DivideBy7193(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7194(t *testing.T) {
	result := operations.DivideBy7194(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7195(t *testing.T) {
	result := operations.DivideBy7195(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7196(t *testing.T) {
	result := operations.DivideBy7196(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7197(t *testing.T) {
	result := operations.DivideBy7197(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7198(t *testing.T) {
	result := operations.DivideBy7198(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7199(t *testing.T) {
	result := operations.DivideBy7199(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7200(t *testing.T) {
	result := operations.DivideBy7200(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7201(t *testing.T) {
	result := operations.DivideBy7201(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7202(t *testing.T) {
	result := operations.DivideBy7202(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7203(t *testing.T) {
	result := operations.DivideBy7203(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7204(t *testing.T) {
	result := operations.DivideBy7204(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7205(t *testing.T) {
	result := operations.DivideBy7205(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7206(t *testing.T) {
	result := operations.DivideBy7206(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7207(t *testing.T) {
	result := operations.DivideBy7207(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7208(t *testing.T) {
	result := operations.DivideBy7208(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7209(t *testing.T) {
	result := operations.DivideBy7209(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7210(t *testing.T) {
	result := operations.DivideBy7210(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7211(t *testing.T) {
	result := operations.DivideBy7211(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7212(t *testing.T) {
	result := operations.DivideBy7212(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7213(t *testing.T) {
	result := operations.DivideBy7213(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7214(t *testing.T) {
	result := operations.DivideBy7214(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7215(t *testing.T) {
	result := operations.DivideBy7215(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7216(t *testing.T) {
	result := operations.DivideBy7216(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7217(t *testing.T) {
	result := operations.DivideBy7217(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7218(t *testing.T) {
	result := operations.DivideBy7218(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7219(t *testing.T) {
	result := operations.DivideBy7219(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7220(t *testing.T) {
	result := operations.DivideBy7220(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7221(t *testing.T) {
	result := operations.DivideBy7221(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7222(t *testing.T) {
	result := operations.DivideBy7222(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7223(t *testing.T) {
	result := operations.DivideBy7223(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7224(t *testing.T) {
	result := operations.DivideBy7224(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7225(t *testing.T) {
	result := operations.DivideBy7225(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7226(t *testing.T) {
	result := operations.DivideBy7226(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7227(t *testing.T) {
	result := operations.DivideBy7227(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7228(t *testing.T) {
	result := operations.DivideBy7228(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7229(t *testing.T) {
	result := operations.DivideBy7229(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7230(t *testing.T) {
	result := operations.DivideBy7230(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7231(t *testing.T) {
	result := operations.DivideBy7231(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7232(t *testing.T) {
	result := operations.DivideBy7232(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7233(t *testing.T) {
	result := operations.DivideBy7233(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7234(t *testing.T) {
	result := operations.DivideBy7234(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7235(t *testing.T) {
	result := operations.DivideBy7235(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7236(t *testing.T) {
	result := operations.DivideBy7236(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7237(t *testing.T) {
	result := operations.DivideBy7237(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7238(t *testing.T) {
	result := operations.DivideBy7238(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7239(t *testing.T) {
	result := operations.DivideBy7239(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7240(t *testing.T) {
	result := operations.DivideBy7240(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7241(t *testing.T) {
	result := operations.DivideBy7241(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7242(t *testing.T) {
	result := operations.DivideBy7242(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7243(t *testing.T) {
	result := operations.DivideBy7243(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7244(t *testing.T) {
	result := operations.DivideBy7244(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7245(t *testing.T) {
	result := operations.DivideBy7245(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7246(t *testing.T) {
	result := operations.DivideBy7246(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7247(t *testing.T) {
	result := operations.DivideBy7247(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7248(t *testing.T) {
	result := operations.DivideBy7248(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7249(t *testing.T) {
	result := operations.DivideBy7249(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7250(t *testing.T) {
	result := operations.DivideBy7250(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7251(t *testing.T) {
	result := operations.DivideBy7251(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7252(t *testing.T) {
	result := operations.DivideBy7252(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7253(t *testing.T) {
	result := operations.DivideBy7253(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7254(t *testing.T) {
	result := operations.DivideBy7254(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7255(t *testing.T) {
	result := operations.DivideBy7255(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7256(t *testing.T) {
	result := operations.DivideBy7256(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7257(t *testing.T) {
	result := operations.DivideBy7257(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7258(t *testing.T) {
	result := operations.DivideBy7258(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7259(t *testing.T) {
	result := operations.DivideBy7259(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7260(t *testing.T) {
	result := operations.DivideBy7260(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7261(t *testing.T) {
	result := operations.DivideBy7261(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7262(t *testing.T) {
	result := operations.DivideBy7262(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7263(t *testing.T) {
	result := operations.DivideBy7263(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7264(t *testing.T) {
	result := operations.DivideBy7264(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7265(t *testing.T) {
	result := operations.DivideBy7265(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7266(t *testing.T) {
	result := operations.DivideBy7266(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7267(t *testing.T) {
	result := operations.DivideBy7267(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7268(t *testing.T) {
	result := operations.DivideBy7268(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7269(t *testing.T) {
	result := operations.DivideBy7269(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7270(t *testing.T) {
	result := operations.DivideBy7270(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7271(t *testing.T) {
	result := operations.DivideBy7271(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7272(t *testing.T) {
	result := operations.DivideBy7272(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7273(t *testing.T) {
	result := operations.DivideBy7273(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7274(t *testing.T) {
	result := operations.DivideBy7274(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7275(t *testing.T) {
	result := operations.DivideBy7275(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7276(t *testing.T) {
	result := operations.DivideBy7276(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7277(t *testing.T) {
	result := operations.DivideBy7277(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7278(t *testing.T) {
	result := operations.DivideBy7278(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7279(t *testing.T) {
	result := operations.DivideBy7279(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7280(t *testing.T) {
	result := operations.DivideBy7280(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7281(t *testing.T) {
	result := operations.DivideBy7281(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7282(t *testing.T) {
	result := operations.DivideBy7282(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7283(t *testing.T) {
	result := operations.DivideBy7283(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7284(t *testing.T) {
	result := operations.DivideBy7284(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7285(t *testing.T) {
	result := operations.DivideBy7285(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7286(t *testing.T) {
	result := operations.DivideBy7286(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7287(t *testing.T) {
	result := operations.DivideBy7287(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7288(t *testing.T) {
	result := operations.DivideBy7288(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7289(t *testing.T) {
	result := operations.DivideBy7289(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7290(t *testing.T) {
	result := operations.DivideBy7290(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7291(t *testing.T) {
	result := operations.DivideBy7291(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7292(t *testing.T) {
	result := operations.DivideBy7292(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7293(t *testing.T) {
	result := operations.DivideBy7293(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7294(t *testing.T) {
	result := operations.DivideBy7294(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7295(t *testing.T) {
	result := operations.DivideBy7295(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7296(t *testing.T) {
	result := operations.DivideBy7296(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7297(t *testing.T) {
	result := operations.DivideBy7297(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7298(t *testing.T) {
	result := operations.DivideBy7298(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7299(t *testing.T) {
	result := operations.DivideBy7299(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7300(t *testing.T) {
	result := operations.DivideBy7300(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7301(t *testing.T) {
	result := operations.DivideBy7301(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7302(t *testing.T) {
	result := operations.DivideBy7302(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7303(t *testing.T) {
	result := operations.DivideBy7303(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7304(t *testing.T) {
	result := operations.DivideBy7304(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7305(t *testing.T) {
	result := operations.DivideBy7305(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7306(t *testing.T) {
	result := operations.DivideBy7306(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7307(t *testing.T) {
	result := operations.DivideBy7307(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7308(t *testing.T) {
	result := operations.DivideBy7308(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7309(t *testing.T) {
	result := operations.DivideBy7309(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7310(t *testing.T) {
	result := operations.DivideBy7310(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7311(t *testing.T) {
	result := operations.DivideBy7311(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7312(t *testing.T) {
	result := operations.DivideBy7312(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7313(t *testing.T) {
	result := operations.DivideBy7313(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7314(t *testing.T) {
	result := operations.DivideBy7314(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7315(t *testing.T) {
	result := operations.DivideBy7315(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7316(t *testing.T) {
	result := operations.DivideBy7316(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7317(t *testing.T) {
	result := operations.DivideBy7317(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7318(t *testing.T) {
	result := operations.DivideBy7318(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7319(t *testing.T) {
	result := operations.DivideBy7319(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7320(t *testing.T) {
	result := operations.DivideBy7320(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7321(t *testing.T) {
	result := operations.DivideBy7321(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7322(t *testing.T) {
	result := operations.DivideBy7322(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7323(t *testing.T) {
	result := operations.DivideBy7323(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7324(t *testing.T) {
	result := operations.DivideBy7324(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7325(t *testing.T) {
	result := operations.DivideBy7325(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7326(t *testing.T) {
	result := operations.DivideBy7326(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7327(t *testing.T) {
	result := operations.DivideBy7327(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7328(t *testing.T) {
	result := operations.DivideBy7328(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7329(t *testing.T) {
	result := operations.DivideBy7329(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7330(t *testing.T) {
	result := operations.DivideBy7330(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7331(t *testing.T) {
	result := operations.DivideBy7331(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7332(t *testing.T) {
	result := operations.DivideBy7332(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7333(t *testing.T) {
	result := operations.DivideBy7333(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7334(t *testing.T) {
	result := operations.DivideBy7334(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7335(t *testing.T) {
	result := operations.DivideBy7335(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7336(t *testing.T) {
	result := operations.DivideBy7336(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7337(t *testing.T) {
	result := operations.DivideBy7337(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7338(t *testing.T) {
	result := operations.DivideBy7338(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7339(t *testing.T) {
	result := operations.DivideBy7339(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7340(t *testing.T) {
	result := operations.DivideBy7340(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7341(t *testing.T) {
	result := operations.DivideBy7341(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7342(t *testing.T) {
	result := operations.DivideBy7342(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7343(t *testing.T) {
	result := operations.DivideBy7343(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7344(t *testing.T) {
	result := operations.DivideBy7344(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7345(t *testing.T) {
	result := operations.DivideBy7345(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7346(t *testing.T) {
	result := operations.DivideBy7346(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7347(t *testing.T) {
	result := operations.DivideBy7347(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7348(t *testing.T) {
	result := operations.DivideBy7348(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7349(t *testing.T) {
	result := operations.DivideBy7349(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7350(t *testing.T) {
	result := operations.DivideBy7350(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7351(t *testing.T) {
	result := operations.DivideBy7351(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7352(t *testing.T) {
	result := operations.DivideBy7352(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7353(t *testing.T) {
	result := operations.DivideBy7353(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7354(t *testing.T) {
	result := operations.DivideBy7354(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7355(t *testing.T) {
	result := operations.DivideBy7355(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7356(t *testing.T) {
	result := operations.DivideBy7356(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7357(t *testing.T) {
	result := operations.DivideBy7357(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7358(t *testing.T) {
	result := operations.DivideBy7358(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7359(t *testing.T) {
	result := operations.DivideBy7359(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7360(t *testing.T) {
	result := operations.DivideBy7360(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7361(t *testing.T) {
	result := operations.DivideBy7361(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7362(t *testing.T) {
	result := operations.DivideBy7362(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7363(t *testing.T) {
	result := operations.DivideBy7363(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7364(t *testing.T) {
	result := operations.DivideBy7364(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7365(t *testing.T) {
	result := operations.DivideBy7365(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7366(t *testing.T) {
	result := operations.DivideBy7366(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7367(t *testing.T) {
	result := operations.DivideBy7367(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7368(t *testing.T) {
	result := operations.DivideBy7368(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7369(t *testing.T) {
	result := operations.DivideBy7369(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7370(t *testing.T) {
	result := operations.DivideBy7370(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7371(t *testing.T) {
	result := operations.DivideBy7371(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7372(t *testing.T) {
	result := operations.DivideBy7372(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7373(t *testing.T) {
	result := operations.DivideBy7373(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7374(t *testing.T) {
	result := operations.DivideBy7374(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7375(t *testing.T) {
	result := operations.DivideBy7375(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7376(t *testing.T) {
	result := operations.DivideBy7376(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7377(t *testing.T) {
	result := operations.DivideBy7377(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7378(t *testing.T) {
	result := operations.DivideBy7378(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7379(t *testing.T) {
	result := operations.DivideBy7379(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7380(t *testing.T) {
	result := operations.DivideBy7380(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7381(t *testing.T) {
	result := operations.DivideBy7381(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7382(t *testing.T) {
	result := operations.DivideBy7382(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7383(t *testing.T) {
	result := operations.DivideBy7383(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7384(t *testing.T) {
	result := operations.DivideBy7384(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7385(t *testing.T) {
	result := operations.DivideBy7385(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7386(t *testing.T) {
	result := operations.DivideBy7386(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7387(t *testing.T) {
	result := operations.DivideBy7387(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7388(t *testing.T) {
	result := operations.DivideBy7388(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7389(t *testing.T) {
	result := operations.DivideBy7389(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7390(t *testing.T) {
	result := operations.DivideBy7390(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7391(t *testing.T) {
	result := operations.DivideBy7391(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7392(t *testing.T) {
	result := operations.DivideBy7392(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7393(t *testing.T) {
	result := operations.DivideBy7393(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7394(t *testing.T) {
	result := operations.DivideBy7394(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7395(t *testing.T) {
	result := operations.DivideBy7395(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7396(t *testing.T) {
	result := operations.DivideBy7396(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7397(t *testing.T) {
	result := operations.DivideBy7397(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7398(t *testing.T) {
	result := operations.DivideBy7398(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7399(t *testing.T) {
	result := operations.DivideBy7399(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7400(t *testing.T) {
	result := operations.DivideBy7400(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7401(t *testing.T) {
	result := operations.DivideBy7401(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7402(t *testing.T) {
	result := operations.DivideBy7402(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7403(t *testing.T) {
	result := operations.DivideBy7403(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7404(t *testing.T) {
	result := operations.DivideBy7404(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7405(t *testing.T) {
	result := operations.DivideBy7405(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7406(t *testing.T) {
	result := operations.DivideBy7406(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7407(t *testing.T) {
	result := operations.DivideBy7407(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7408(t *testing.T) {
	result := operations.DivideBy7408(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7409(t *testing.T) {
	result := operations.DivideBy7409(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7410(t *testing.T) {
	result := operations.DivideBy7410(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7411(t *testing.T) {
	result := operations.DivideBy7411(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7412(t *testing.T) {
	result := operations.DivideBy7412(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7413(t *testing.T) {
	result := operations.DivideBy7413(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7414(t *testing.T) {
	result := operations.DivideBy7414(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7415(t *testing.T) {
	result := operations.DivideBy7415(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7416(t *testing.T) {
	result := operations.DivideBy7416(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7417(t *testing.T) {
	result := operations.DivideBy7417(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7418(t *testing.T) {
	result := operations.DivideBy7418(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7419(t *testing.T) {
	result := operations.DivideBy7419(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7420(t *testing.T) {
	result := operations.DivideBy7420(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7421(t *testing.T) {
	result := operations.DivideBy7421(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7422(t *testing.T) {
	result := operations.DivideBy7422(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7423(t *testing.T) {
	result := operations.DivideBy7423(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7424(t *testing.T) {
	result := operations.DivideBy7424(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7425(t *testing.T) {
	result := operations.DivideBy7425(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7426(t *testing.T) {
	result := operations.DivideBy7426(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7427(t *testing.T) {
	result := operations.DivideBy7427(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7428(t *testing.T) {
	result := operations.DivideBy7428(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7429(t *testing.T) {
	result := operations.DivideBy7429(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7430(t *testing.T) {
	result := operations.DivideBy7430(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7431(t *testing.T) {
	result := operations.DivideBy7431(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7432(t *testing.T) {
	result := operations.DivideBy7432(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7433(t *testing.T) {
	result := operations.DivideBy7433(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7434(t *testing.T) {
	result := operations.DivideBy7434(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7435(t *testing.T) {
	result := operations.DivideBy7435(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7436(t *testing.T) {
	result := operations.DivideBy7436(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7437(t *testing.T) {
	result := operations.DivideBy7437(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7438(t *testing.T) {
	result := operations.DivideBy7438(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7439(t *testing.T) {
	result := operations.DivideBy7439(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7440(t *testing.T) {
	result := operations.DivideBy7440(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7441(t *testing.T) {
	result := operations.DivideBy7441(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7442(t *testing.T) {
	result := operations.DivideBy7442(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7443(t *testing.T) {
	result := operations.DivideBy7443(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7444(t *testing.T) {
	result := operations.DivideBy7444(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7445(t *testing.T) {
	result := operations.DivideBy7445(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7446(t *testing.T) {
	result := operations.DivideBy7446(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7447(t *testing.T) {
	result := operations.DivideBy7447(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7448(t *testing.T) {
	result := operations.DivideBy7448(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7449(t *testing.T) {
	result := operations.DivideBy7449(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7450(t *testing.T) {
	result := operations.DivideBy7450(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7451(t *testing.T) {
	result := operations.DivideBy7451(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7452(t *testing.T) {
	result := operations.DivideBy7452(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7453(t *testing.T) {
	result := operations.DivideBy7453(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7454(t *testing.T) {
	result := operations.DivideBy7454(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7455(t *testing.T) {
	result := operations.DivideBy7455(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7456(t *testing.T) {
	result := operations.DivideBy7456(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7457(t *testing.T) {
	result := operations.DivideBy7457(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7458(t *testing.T) {
	result := operations.DivideBy7458(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7459(t *testing.T) {
	result := operations.DivideBy7459(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7460(t *testing.T) {
	result := operations.DivideBy7460(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7461(t *testing.T) {
	result := operations.DivideBy7461(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7462(t *testing.T) {
	result := operations.DivideBy7462(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7463(t *testing.T) {
	result := operations.DivideBy7463(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7464(t *testing.T) {
	result := operations.DivideBy7464(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7465(t *testing.T) {
	result := operations.DivideBy7465(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7466(t *testing.T) {
	result := operations.DivideBy7466(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7467(t *testing.T) {
	result := operations.DivideBy7467(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7468(t *testing.T) {
	result := operations.DivideBy7468(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7469(t *testing.T) {
	result := operations.DivideBy7469(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7470(t *testing.T) {
	result := operations.DivideBy7470(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7471(t *testing.T) {
	result := operations.DivideBy7471(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7472(t *testing.T) {
	result := operations.DivideBy7472(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7473(t *testing.T) {
	result := operations.DivideBy7473(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7474(t *testing.T) {
	result := operations.DivideBy7474(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7475(t *testing.T) {
	result := operations.DivideBy7475(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7476(t *testing.T) {
	result := operations.DivideBy7476(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7477(t *testing.T) {
	result := operations.DivideBy7477(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7478(t *testing.T) {
	result := operations.DivideBy7478(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7479(t *testing.T) {
	result := operations.DivideBy7479(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7480(t *testing.T) {
	result := operations.DivideBy7480(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7481(t *testing.T) {
	result := operations.DivideBy7481(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7482(t *testing.T) {
	result := operations.DivideBy7482(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7483(t *testing.T) {
	result := operations.DivideBy7483(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7484(t *testing.T) {
	result := operations.DivideBy7484(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7485(t *testing.T) {
	result := operations.DivideBy7485(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7486(t *testing.T) {
	result := operations.DivideBy7486(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7487(t *testing.T) {
	result := operations.DivideBy7487(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7488(t *testing.T) {
	result := operations.DivideBy7488(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7489(t *testing.T) {
	result := operations.DivideBy7489(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7490(t *testing.T) {
	result := operations.DivideBy7490(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7491(t *testing.T) {
	result := operations.DivideBy7491(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7492(t *testing.T) {
	result := operations.DivideBy7492(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7493(t *testing.T) {
	result := operations.DivideBy7493(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7494(t *testing.T) {
	result := operations.DivideBy7494(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7495(t *testing.T) {
	result := operations.DivideBy7495(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7496(t *testing.T) {
	result := operations.DivideBy7496(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7497(t *testing.T) {
	result := operations.DivideBy7497(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7498(t *testing.T) {
	result := operations.DivideBy7498(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7499(t *testing.T) {
	result := operations.DivideBy7499(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7500(t *testing.T) {
	result := operations.DivideBy7500(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7501(t *testing.T) {
	result := operations.DivideBy7501(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7502(t *testing.T) {
	result := operations.DivideBy7502(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7503(t *testing.T) {
	result := operations.DivideBy7503(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7504(t *testing.T) {
	result := operations.DivideBy7504(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7505(t *testing.T) {
	result := operations.DivideBy7505(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7506(t *testing.T) {
	result := operations.DivideBy7506(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7507(t *testing.T) {
	result := operations.DivideBy7507(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7508(t *testing.T) {
	result := operations.DivideBy7508(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7509(t *testing.T) {
	result := operations.DivideBy7509(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7510(t *testing.T) {
	result := operations.DivideBy7510(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7511(t *testing.T) {
	result := operations.DivideBy7511(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7512(t *testing.T) {
	result := operations.DivideBy7512(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7513(t *testing.T) {
	result := operations.DivideBy7513(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7514(t *testing.T) {
	result := operations.DivideBy7514(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7515(t *testing.T) {
	result := operations.DivideBy7515(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7516(t *testing.T) {
	result := operations.DivideBy7516(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7517(t *testing.T) {
	result := operations.DivideBy7517(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7518(t *testing.T) {
	result := operations.DivideBy7518(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7519(t *testing.T) {
	result := operations.DivideBy7519(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7520(t *testing.T) {
	result := operations.DivideBy7520(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7521(t *testing.T) {
	result := operations.DivideBy7521(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7522(t *testing.T) {
	result := operations.DivideBy7522(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7523(t *testing.T) {
	result := operations.DivideBy7523(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7524(t *testing.T) {
	result := operations.DivideBy7524(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7525(t *testing.T) {
	result := operations.DivideBy7525(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7526(t *testing.T) {
	result := operations.DivideBy7526(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7527(t *testing.T) {
	result := operations.DivideBy7527(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7528(t *testing.T) {
	result := operations.DivideBy7528(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7529(t *testing.T) {
	result := operations.DivideBy7529(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7530(t *testing.T) {
	result := operations.DivideBy7530(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7531(t *testing.T) {
	result := operations.DivideBy7531(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7532(t *testing.T) {
	result := operations.DivideBy7532(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7533(t *testing.T) {
	result := operations.DivideBy7533(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7534(t *testing.T) {
	result := operations.DivideBy7534(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7535(t *testing.T) {
	result := operations.DivideBy7535(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7536(t *testing.T) {
	result := operations.DivideBy7536(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7537(t *testing.T) {
	result := operations.DivideBy7537(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7538(t *testing.T) {
	result := operations.DivideBy7538(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7539(t *testing.T) {
	result := operations.DivideBy7539(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7540(t *testing.T) {
	result := operations.DivideBy7540(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7541(t *testing.T) {
	result := operations.DivideBy7541(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7542(t *testing.T) {
	result := operations.DivideBy7542(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7543(t *testing.T) {
	result := operations.DivideBy7543(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7544(t *testing.T) {
	result := operations.DivideBy7544(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7545(t *testing.T) {
	result := operations.DivideBy7545(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7546(t *testing.T) {
	result := operations.DivideBy7546(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7547(t *testing.T) {
	result := operations.DivideBy7547(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7548(t *testing.T) {
	result := operations.DivideBy7548(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7549(t *testing.T) {
	result := operations.DivideBy7549(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7550(t *testing.T) {
	result := operations.DivideBy7550(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7551(t *testing.T) {
	result := operations.DivideBy7551(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7552(t *testing.T) {
	result := operations.DivideBy7552(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7553(t *testing.T) {
	result := operations.DivideBy7553(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7554(t *testing.T) {
	result := operations.DivideBy7554(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7555(t *testing.T) {
	result := operations.DivideBy7555(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7556(t *testing.T) {
	result := operations.DivideBy7556(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7557(t *testing.T) {
	result := operations.DivideBy7557(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7558(t *testing.T) {
	result := operations.DivideBy7558(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7559(t *testing.T) {
	result := operations.DivideBy7559(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7560(t *testing.T) {
	result := operations.DivideBy7560(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7561(t *testing.T) {
	result := operations.DivideBy7561(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7562(t *testing.T) {
	result := operations.DivideBy7562(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7563(t *testing.T) {
	result := operations.DivideBy7563(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7564(t *testing.T) {
	result := operations.DivideBy7564(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7565(t *testing.T) {
	result := operations.DivideBy7565(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7566(t *testing.T) {
	result := operations.DivideBy7566(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7567(t *testing.T) {
	result := operations.DivideBy7567(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7568(t *testing.T) {
	result := operations.DivideBy7568(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7569(t *testing.T) {
	result := operations.DivideBy7569(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7570(t *testing.T) {
	result := operations.DivideBy7570(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7571(t *testing.T) {
	result := operations.DivideBy7571(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7572(t *testing.T) {
	result := operations.DivideBy7572(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7573(t *testing.T) {
	result := operations.DivideBy7573(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7574(t *testing.T) {
	result := operations.DivideBy7574(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7575(t *testing.T) {
	result := operations.DivideBy7575(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7576(t *testing.T) {
	result := operations.DivideBy7576(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7577(t *testing.T) {
	result := operations.DivideBy7577(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7578(t *testing.T) {
	result := operations.DivideBy7578(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7579(t *testing.T) {
	result := operations.DivideBy7579(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7580(t *testing.T) {
	result := operations.DivideBy7580(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7581(t *testing.T) {
	result := operations.DivideBy7581(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7582(t *testing.T) {
	result := operations.DivideBy7582(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7583(t *testing.T) {
	result := operations.DivideBy7583(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7584(t *testing.T) {
	result := operations.DivideBy7584(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7585(t *testing.T) {
	result := operations.DivideBy7585(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7586(t *testing.T) {
	result := operations.DivideBy7586(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7587(t *testing.T) {
	result := operations.DivideBy7587(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7588(t *testing.T) {
	result := operations.DivideBy7588(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7589(t *testing.T) {
	result := operations.DivideBy7589(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7590(t *testing.T) {
	result := operations.DivideBy7590(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7591(t *testing.T) {
	result := operations.DivideBy7591(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7592(t *testing.T) {
	result := operations.DivideBy7592(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7593(t *testing.T) {
	result := operations.DivideBy7593(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7594(t *testing.T) {
	result := operations.DivideBy7594(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7595(t *testing.T) {
	result := operations.DivideBy7595(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7596(t *testing.T) {
	result := operations.DivideBy7596(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7597(t *testing.T) {
	result := operations.DivideBy7597(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7598(t *testing.T) {
	result := operations.DivideBy7598(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7599(t *testing.T) {
	result := operations.DivideBy7599(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7600(t *testing.T) {
	result := operations.DivideBy7600(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7601(t *testing.T) {
	result := operations.DivideBy7601(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7602(t *testing.T) {
	result := operations.DivideBy7602(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7603(t *testing.T) {
	result := operations.DivideBy7603(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7604(t *testing.T) {
	result := operations.DivideBy7604(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7605(t *testing.T) {
	result := operations.DivideBy7605(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7606(t *testing.T) {
	result := operations.DivideBy7606(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7607(t *testing.T) {
	result := operations.DivideBy7607(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7608(t *testing.T) {
	result := operations.DivideBy7608(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7609(t *testing.T) {
	result := operations.DivideBy7609(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7610(t *testing.T) {
	result := operations.DivideBy7610(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7611(t *testing.T) {
	result := operations.DivideBy7611(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7612(t *testing.T) {
	result := operations.DivideBy7612(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7613(t *testing.T) {
	result := operations.DivideBy7613(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7614(t *testing.T) {
	result := operations.DivideBy7614(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7615(t *testing.T) {
	result := operations.DivideBy7615(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7616(t *testing.T) {
	result := operations.DivideBy7616(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7617(t *testing.T) {
	result := operations.DivideBy7617(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7618(t *testing.T) {
	result := operations.DivideBy7618(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7619(t *testing.T) {
	result := operations.DivideBy7619(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7620(t *testing.T) {
	result := operations.DivideBy7620(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7621(t *testing.T) {
	result := operations.DivideBy7621(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7622(t *testing.T) {
	result := operations.DivideBy7622(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7623(t *testing.T) {
	result := operations.DivideBy7623(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7624(t *testing.T) {
	result := operations.DivideBy7624(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7625(t *testing.T) {
	result := operations.DivideBy7625(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7626(t *testing.T) {
	result := operations.DivideBy7626(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7627(t *testing.T) {
	result := operations.DivideBy7627(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7628(t *testing.T) {
	result := operations.DivideBy7628(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7629(t *testing.T) {
	result := operations.DivideBy7629(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7630(t *testing.T) {
	result := operations.DivideBy7630(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7631(t *testing.T) {
	result := operations.DivideBy7631(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7632(t *testing.T) {
	result := operations.DivideBy7632(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7633(t *testing.T) {
	result := operations.DivideBy7633(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7634(t *testing.T) {
	result := operations.DivideBy7634(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7635(t *testing.T) {
	result := operations.DivideBy7635(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7636(t *testing.T) {
	result := operations.DivideBy7636(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7637(t *testing.T) {
	result := operations.DivideBy7637(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7638(t *testing.T) {
	result := operations.DivideBy7638(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7639(t *testing.T) {
	result := operations.DivideBy7639(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7640(t *testing.T) {
	result := operations.DivideBy7640(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7641(t *testing.T) {
	result := operations.DivideBy7641(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7642(t *testing.T) {
	result := operations.DivideBy7642(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7643(t *testing.T) {
	result := operations.DivideBy7643(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7644(t *testing.T) {
	result := operations.DivideBy7644(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7645(t *testing.T) {
	result := operations.DivideBy7645(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7646(t *testing.T) {
	result := operations.DivideBy7646(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7647(t *testing.T) {
	result := operations.DivideBy7647(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7648(t *testing.T) {
	result := operations.DivideBy7648(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7649(t *testing.T) {
	result := operations.DivideBy7649(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7650(t *testing.T) {
	result := operations.DivideBy7650(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7651(t *testing.T) {
	result := operations.DivideBy7651(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7652(t *testing.T) {
	result := operations.DivideBy7652(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7653(t *testing.T) {
	result := operations.DivideBy7653(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7654(t *testing.T) {
	result := operations.DivideBy7654(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7655(t *testing.T) {
	result := operations.DivideBy7655(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7656(t *testing.T) {
	result := operations.DivideBy7656(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7657(t *testing.T) {
	result := operations.DivideBy7657(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7658(t *testing.T) {
	result := operations.DivideBy7658(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7659(t *testing.T) {
	result := operations.DivideBy7659(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7660(t *testing.T) {
	result := operations.DivideBy7660(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7661(t *testing.T) {
	result := operations.DivideBy7661(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7662(t *testing.T) {
	result := operations.DivideBy7662(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7663(t *testing.T) {
	result := operations.DivideBy7663(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7664(t *testing.T) {
	result := operations.DivideBy7664(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7665(t *testing.T) {
	result := operations.DivideBy7665(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7666(t *testing.T) {
	result := operations.DivideBy7666(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7667(t *testing.T) {
	result := operations.DivideBy7667(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7668(t *testing.T) {
	result := operations.DivideBy7668(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7669(t *testing.T) {
	result := operations.DivideBy7669(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7670(t *testing.T) {
	result := operations.DivideBy7670(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7671(t *testing.T) {
	result := operations.DivideBy7671(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7672(t *testing.T) {
	result := operations.DivideBy7672(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7673(t *testing.T) {
	result := operations.DivideBy7673(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7674(t *testing.T) {
	result := operations.DivideBy7674(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7675(t *testing.T) {
	result := operations.DivideBy7675(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7676(t *testing.T) {
	result := operations.DivideBy7676(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7677(t *testing.T) {
	result := operations.DivideBy7677(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7678(t *testing.T) {
	result := operations.DivideBy7678(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7679(t *testing.T) {
	result := operations.DivideBy7679(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7680(t *testing.T) {
	result := operations.DivideBy7680(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7681(t *testing.T) {
	result := operations.DivideBy7681(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7682(t *testing.T) {
	result := operations.DivideBy7682(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7683(t *testing.T) {
	result := operations.DivideBy7683(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7684(t *testing.T) {
	result := operations.DivideBy7684(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7685(t *testing.T) {
	result := operations.DivideBy7685(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7686(t *testing.T) {
	result := operations.DivideBy7686(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7687(t *testing.T) {
	result := operations.DivideBy7687(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7688(t *testing.T) {
	result := operations.DivideBy7688(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7689(t *testing.T) {
	result := operations.DivideBy7689(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7690(t *testing.T) {
	result := operations.DivideBy7690(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7691(t *testing.T) {
	result := operations.DivideBy7691(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7692(t *testing.T) {
	result := operations.DivideBy7692(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7693(t *testing.T) {
	result := operations.DivideBy7693(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7694(t *testing.T) {
	result := operations.DivideBy7694(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7695(t *testing.T) {
	result := operations.DivideBy7695(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7696(t *testing.T) {
	result := operations.DivideBy7696(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7697(t *testing.T) {
	result := operations.DivideBy7697(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7698(t *testing.T) {
	result := operations.DivideBy7698(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7699(t *testing.T) {
	result := operations.DivideBy7699(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7700(t *testing.T) {
	result := operations.DivideBy7700(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7701(t *testing.T) {
	result := operations.DivideBy7701(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7702(t *testing.T) {
	result := operations.DivideBy7702(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7703(t *testing.T) {
	result := operations.DivideBy7703(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7704(t *testing.T) {
	result := operations.DivideBy7704(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7705(t *testing.T) {
	result := operations.DivideBy7705(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7706(t *testing.T) {
	result := operations.DivideBy7706(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7707(t *testing.T) {
	result := operations.DivideBy7707(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7708(t *testing.T) {
	result := operations.DivideBy7708(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7709(t *testing.T) {
	result := operations.DivideBy7709(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7710(t *testing.T) {
	result := operations.DivideBy7710(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7711(t *testing.T) {
	result := operations.DivideBy7711(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7712(t *testing.T) {
	result := operations.DivideBy7712(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7713(t *testing.T) {
	result := operations.DivideBy7713(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7714(t *testing.T) {
	result := operations.DivideBy7714(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7715(t *testing.T) {
	result := operations.DivideBy7715(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7716(t *testing.T) {
	result := operations.DivideBy7716(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7717(t *testing.T) {
	result := operations.DivideBy7717(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7718(t *testing.T) {
	result := operations.DivideBy7718(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7719(t *testing.T) {
	result := operations.DivideBy7719(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7720(t *testing.T) {
	result := operations.DivideBy7720(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7721(t *testing.T) {
	result := operations.DivideBy7721(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7722(t *testing.T) {
	result := operations.DivideBy7722(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7723(t *testing.T) {
	result := operations.DivideBy7723(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7724(t *testing.T) {
	result := operations.DivideBy7724(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7725(t *testing.T) {
	result := operations.DivideBy7725(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7726(t *testing.T) {
	result := operations.DivideBy7726(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7727(t *testing.T) {
	result := operations.DivideBy7727(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7728(t *testing.T) {
	result := operations.DivideBy7728(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7729(t *testing.T) {
	result := operations.DivideBy7729(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7730(t *testing.T) {
	result := operations.DivideBy7730(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7731(t *testing.T) {
	result := operations.DivideBy7731(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7732(t *testing.T) {
	result := operations.DivideBy7732(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7733(t *testing.T) {
	result := operations.DivideBy7733(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7734(t *testing.T) {
	result := operations.DivideBy7734(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7735(t *testing.T) {
	result := operations.DivideBy7735(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7736(t *testing.T) {
	result := operations.DivideBy7736(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7737(t *testing.T) {
	result := operations.DivideBy7737(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7738(t *testing.T) {
	result := operations.DivideBy7738(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7739(t *testing.T) {
	result := operations.DivideBy7739(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7740(t *testing.T) {
	result := operations.DivideBy7740(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7741(t *testing.T) {
	result := operations.DivideBy7741(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7742(t *testing.T) {
	result := operations.DivideBy7742(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7743(t *testing.T) {
	result := operations.DivideBy7743(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7744(t *testing.T) {
	result := operations.DivideBy7744(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7745(t *testing.T) {
	result := operations.DivideBy7745(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7746(t *testing.T) {
	result := operations.DivideBy7746(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7747(t *testing.T) {
	result := operations.DivideBy7747(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7748(t *testing.T) {
	result := operations.DivideBy7748(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7749(t *testing.T) {
	result := operations.DivideBy7749(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7750(t *testing.T) {
	result := operations.DivideBy7750(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7751(t *testing.T) {
	result := operations.DivideBy7751(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7752(t *testing.T) {
	result := operations.DivideBy7752(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7753(t *testing.T) {
	result := operations.DivideBy7753(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7754(t *testing.T) {
	result := operations.DivideBy7754(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7755(t *testing.T) {
	result := operations.DivideBy7755(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7756(t *testing.T) {
	result := operations.DivideBy7756(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7757(t *testing.T) {
	result := operations.DivideBy7757(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7758(t *testing.T) {
	result := operations.DivideBy7758(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7759(t *testing.T) {
	result := operations.DivideBy7759(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7760(t *testing.T) {
	result := operations.DivideBy7760(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7761(t *testing.T) {
	result := operations.DivideBy7761(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7762(t *testing.T) {
	result := operations.DivideBy7762(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7763(t *testing.T) {
	result := operations.DivideBy7763(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7764(t *testing.T) {
	result := operations.DivideBy7764(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7765(t *testing.T) {
	result := operations.DivideBy7765(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7766(t *testing.T) {
	result := operations.DivideBy7766(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7767(t *testing.T) {
	result := operations.DivideBy7767(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7768(t *testing.T) {
	result := operations.DivideBy7768(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7769(t *testing.T) {
	result := operations.DivideBy7769(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7770(t *testing.T) {
	result := operations.DivideBy7770(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7771(t *testing.T) {
	result := operations.DivideBy7771(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7772(t *testing.T) {
	result := operations.DivideBy7772(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7773(t *testing.T) {
	result := operations.DivideBy7773(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7774(t *testing.T) {
	result := operations.DivideBy7774(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7775(t *testing.T) {
	result := operations.DivideBy7775(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7776(t *testing.T) {
	result := operations.DivideBy7776(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7777(t *testing.T) {
	result := operations.DivideBy7777(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7778(t *testing.T) {
	result := operations.DivideBy7778(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7779(t *testing.T) {
	result := operations.DivideBy7779(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7780(t *testing.T) {
	result := operations.DivideBy7780(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7781(t *testing.T) {
	result := operations.DivideBy7781(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7782(t *testing.T) {
	result := operations.DivideBy7782(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7783(t *testing.T) {
	result := operations.DivideBy7783(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7784(t *testing.T) {
	result := operations.DivideBy7784(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7785(t *testing.T) {
	result := operations.DivideBy7785(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7786(t *testing.T) {
	result := operations.DivideBy7786(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7787(t *testing.T) {
	result := operations.DivideBy7787(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7788(t *testing.T) {
	result := operations.DivideBy7788(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7789(t *testing.T) {
	result := operations.DivideBy7789(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7790(t *testing.T) {
	result := operations.DivideBy7790(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7791(t *testing.T) {
	result := operations.DivideBy7791(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7792(t *testing.T) {
	result := operations.DivideBy7792(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7793(t *testing.T) {
	result := operations.DivideBy7793(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7794(t *testing.T) {
	result := operations.DivideBy7794(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7795(t *testing.T) {
	result := operations.DivideBy7795(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7796(t *testing.T) {
	result := operations.DivideBy7796(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7797(t *testing.T) {
	result := operations.DivideBy7797(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7798(t *testing.T) {
	result := operations.DivideBy7798(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7799(t *testing.T) {
	result := operations.DivideBy7799(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7800(t *testing.T) {
	result := operations.DivideBy7800(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7801(t *testing.T) {
	result := operations.DivideBy7801(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7802(t *testing.T) {
	result := operations.DivideBy7802(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7803(t *testing.T) {
	result := operations.DivideBy7803(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7804(t *testing.T) {
	result := operations.DivideBy7804(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7805(t *testing.T) {
	result := operations.DivideBy7805(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7806(t *testing.T) {
	result := operations.DivideBy7806(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7807(t *testing.T) {
	result := operations.DivideBy7807(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7808(t *testing.T) {
	result := operations.DivideBy7808(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7809(t *testing.T) {
	result := operations.DivideBy7809(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7810(t *testing.T) {
	result := operations.DivideBy7810(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7811(t *testing.T) {
	result := operations.DivideBy7811(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7812(t *testing.T) {
	result := operations.DivideBy7812(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7813(t *testing.T) {
	result := operations.DivideBy7813(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7814(t *testing.T) {
	result := operations.DivideBy7814(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7815(t *testing.T) {
	result := operations.DivideBy7815(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7816(t *testing.T) {
	result := operations.DivideBy7816(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7817(t *testing.T) {
	result := operations.DivideBy7817(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7818(t *testing.T) {
	result := operations.DivideBy7818(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7819(t *testing.T) {
	result := operations.DivideBy7819(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7820(t *testing.T) {
	result := operations.DivideBy7820(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7821(t *testing.T) {
	result := operations.DivideBy7821(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7822(t *testing.T) {
	result := operations.DivideBy7822(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7823(t *testing.T) {
	result := operations.DivideBy7823(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7824(t *testing.T) {
	result := operations.DivideBy7824(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7825(t *testing.T) {
	result := operations.DivideBy7825(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7826(t *testing.T) {
	result := operations.DivideBy7826(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7827(t *testing.T) {
	result := operations.DivideBy7827(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7828(t *testing.T) {
	result := operations.DivideBy7828(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7829(t *testing.T) {
	result := operations.DivideBy7829(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7830(t *testing.T) {
	result := operations.DivideBy7830(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7831(t *testing.T) {
	result := operations.DivideBy7831(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7832(t *testing.T) {
	result := operations.DivideBy7832(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7833(t *testing.T) {
	result := operations.DivideBy7833(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7834(t *testing.T) {
	result := operations.DivideBy7834(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7835(t *testing.T) {
	result := operations.DivideBy7835(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7836(t *testing.T) {
	result := operations.DivideBy7836(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7837(t *testing.T) {
	result := operations.DivideBy7837(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7838(t *testing.T) {
	result := operations.DivideBy7838(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7839(t *testing.T) {
	result := operations.DivideBy7839(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7840(t *testing.T) {
	result := operations.DivideBy7840(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7841(t *testing.T) {
	result := operations.DivideBy7841(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7842(t *testing.T) {
	result := operations.DivideBy7842(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7843(t *testing.T) {
	result := operations.DivideBy7843(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7844(t *testing.T) {
	result := operations.DivideBy7844(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7845(t *testing.T) {
	result := operations.DivideBy7845(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7846(t *testing.T) {
	result := operations.DivideBy7846(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7847(t *testing.T) {
	result := operations.DivideBy7847(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7848(t *testing.T) {
	result := operations.DivideBy7848(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7849(t *testing.T) {
	result := operations.DivideBy7849(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7850(t *testing.T) {
	result := operations.DivideBy7850(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7851(t *testing.T) {
	result := operations.DivideBy7851(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7852(t *testing.T) {
	result := operations.DivideBy7852(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7853(t *testing.T) {
	result := operations.DivideBy7853(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7854(t *testing.T) {
	result := operations.DivideBy7854(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7855(t *testing.T) {
	result := operations.DivideBy7855(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7856(t *testing.T) {
	result := operations.DivideBy7856(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7857(t *testing.T) {
	result := operations.DivideBy7857(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7858(t *testing.T) {
	result := operations.DivideBy7858(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7859(t *testing.T) {
	result := operations.DivideBy7859(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7860(t *testing.T) {
	result := operations.DivideBy7860(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7861(t *testing.T) {
	result := operations.DivideBy7861(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7862(t *testing.T) {
	result := operations.DivideBy7862(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7863(t *testing.T) {
	result := operations.DivideBy7863(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7864(t *testing.T) {
	result := operations.DivideBy7864(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7865(t *testing.T) {
	result := operations.DivideBy7865(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7866(t *testing.T) {
	result := operations.DivideBy7866(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7867(t *testing.T) {
	result := operations.DivideBy7867(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7868(t *testing.T) {
	result := operations.DivideBy7868(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7869(t *testing.T) {
	result := operations.DivideBy7869(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7870(t *testing.T) {
	result := operations.DivideBy7870(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7871(t *testing.T) {
	result := operations.DivideBy7871(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7872(t *testing.T) {
	result := operations.DivideBy7872(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7873(t *testing.T) {
	result := operations.DivideBy7873(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7874(t *testing.T) {
	result := operations.DivideBy7874(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7875(t *testing.T) {
	result := operations.DivideBy7875(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7876(t *testing.T) {
	result := operations.DivideBy7876(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7877(t *testing.T) {
	result := operations.DivideBy7877(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7878(t *testing.T) {
	result := operations.DivideBy7878(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7879(t *testing.T) {
	result := operations.DivideBy7879(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7880(t *testing.T) {
	result := operations.DivideBy7880(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7881(t *testing.T) {
	result := operations.DivideBy7881(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7882(t *testing.T) {
	result := operations.DivideBy7882(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7883(t *testing.T) {
	result := operations.DivideBy7883(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7884(t *testing.T) {
	result := operations.DivideBy7884(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7885(t *testing.T) {
	result := operations.DivideBy7885(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7886(t *testing.T) {
	result := operations.DivideBy7886(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7887(t *testing.T) {
	result := operations.DivideBy7887(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7888(t *testing.T) {
	result := operations.DivideBy7888(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7889(t *testing.T) {
	result := operations.DivideBy7889(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7890(t *testing.T) {
	result := operations.DivideBy7890(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7891(t *testing.T) {
	result := operations.DivideBy7891(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7892(t *testing.T) {
	result := operations.DivideBy7892(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7893(t *testing.T) {
	result := operations.DivideBy7893(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7894(t *testing.T) {
	result := operations.DivideBy7894(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7895(t *testing.T) {
	result := operations.DivideBy7895(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7896(t *testing.T) {
	result := operations.DivideBy7896(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7897(t *testing.T) {
	result := operations.DivideBy7897(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7898(t *testing.T) {
	result := operations.DivideBy7898(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7899(t *testing.T) {
	result := operations.DivideBy7899(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7900(t *testing.T) {
	result := operations.DivideBy7900(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7901(t *testing.T) {
	result := operations.DivideBy7901(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7902(t *testing.T) {
	result := operations.DivideBy7902(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7903(t *testing.T) {
	result := operations.DivideBy7903(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7904(t *testing.T) {
	result := operations.DivideBy7904(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7905(t *testing.T) {
	result := operations.DivideBy7905(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7906(t *testing.T) {
	result := operations.DivideBy7906(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7907(t *testing.T) {
	result := operations.DivideBy7907(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7908(t *testing.T) {
	result := operations.DivideBy7908(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7909(t *testing.T) {
	result := operations.DivideBy7909(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7910(t *testing.T) {
	result := operations.DivideBy7910(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7911(t *testing.T) {
	result := operations.DivideBy7911(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7912(t *testing.T) {
	result := operations.DivideBy7912(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7913(t *testing.T) {
	result := operations.DivideBy7913(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7914(t *testing.T) {
	result := operations.DivideBy7914(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7915(t *testing.T) {
	result := operations.DivideBy7915(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7916(t *testing.T) {
	result := operations.DivideBy7916(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7917(t *testing.T) {
	result := operations.DivideBy7917(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7918(t *testing.T) {
	result := operations.DivideBy7918(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7919(t *testing.T) {
	result := operations.DivideBy7919(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7920(t *testing.T) {
	result := operations.DivideBy7920(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7921(t *testing.T) {
	result := operations.DivideBy7921(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7922(t *testing.T) {
	result := operations.DivideBy7922(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7923(t *testing.T) {
	result := operations.DivideBy7923(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7924(t *testing.T) {
	result := operations.DivideBy7924(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7925(t *testing.T) {
	result := operations.DivideBy7925(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7926(t *testing.T) {
	result := operations.DivideBy7926(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7927(t *testing.T) {
	result := operations.DivideBy7927(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7928(t *testing.T) {
	result := operations.DivideBy7928(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7929(t *testing.T) {
	result := operations.DivideBy7929(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7930(t *testing.T) {
	result := operations.DivideBy7930(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7931(t *testing.T) {
	result := operations.DivideBy7931(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7932(t *testing.T) {
	result := operations.DivideBy7932(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7933(t *testing.T) {
	result := operations.DivideBy7933(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7934(t *testing.T) {
	result := operations.DivideBy7934(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7935(t *testing.T) {
	result := operations.DivideBy7935(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7936(t *testing.T) {
	result := operations.DivideBy7936(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7937(t *testing.T) {
	result := operations.DivideBy7937(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7938(t *testing.T) {
	result := operations.DivideBy7938(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7939(t *testing.T) {
	result := operations.DivideBy7939(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7940(t *testing.T) {
	result := operations.DivideBy7940(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7941(t *testing.T) {
	result := operations.DivideBy7941(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7942(t *testing.T) {
	result := operations.DivideBy7942(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7943(t *testing.T) {
	result := operations.DivideBy7943(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7944(t *testing.T) {
	result := operations.DivideBy7944(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7945(t *testing.T) {
	result := operations.DivideBy7945(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7946(t *testing.T) {
	result := operations.DivideBy7946(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7947(t *testing.T) {
	result := operations.DivideBy7947(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7948(t *testing.T) {
	result := operations.DivideBy7948(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7949(t *testing.T) {
	result := operations.DivideBy7949(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7950(t *testing.T) {
	result := operations.DivideBy7950(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7951(t *testing.T) {
	result := operations.DivideBy7951(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7952(t *testing.T) {
	result := operations.DivideBy7952(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7953(t *testing.T) {
	result := operations.DivideBy7953(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7954(t *testing.T) {
	result := operations.DivideBy7954(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7955(t *testing.T) {
	result := operations.DivideBy7955(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7956(t *testing.T) {
	result := operations.DivideBy7956(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7957(t *testing.T) {
	result := operations.DivideBy7957(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7958(t *testing.T) {
	result := operations.DivideBy7958(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7959(t *testing.T) {
	result := operations.DivideBy7959(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7960(t *testing.T) {
	result := operations.DivideBy7960(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7961(t *testing.T) {
	result := operations.DivideBy7961(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7962(t *testing.T) {
	result := operations.DivideBy7962(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7963(t *testing.T) {
	result := operations.DivideBy7963(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7964(t *testing.T) {
	result := operations.DivideBy7964(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7965(t *testing.T) {
	result := operations.DivideBy7965(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7966(t *testing.T) {
	result := operations.DivideBy7966(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7967(t *testing.T) {
	result := operations.DivideBy7967(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7968(t *testing.T) {
	result := operations.DivideBy7968(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7969(t *testing.T) {
	result := operations.DivideBy7969(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7970(t *testing.T) {
	result := operations.DivideBy7970(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7971(t *testing.T) {
	result := operations.DivideBy7971(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7972(t *testing.T) {
	result := operations.DivideBy7972(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7973(t *testing.T) {
	result := operations.DivideBy7973(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7974(t *testing.T) {
	result := operations.DivideBy7974(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7975(t *testing.T) {
	result := operations.DivideBy7975(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7976(t *testing.T) {
	result := operations.DivideBy7976(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7977(t *testing.T) {
	result := operations.DivideBy7977(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7978(t *testing.T) {
	result := operations.DivideBy7978(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7979(t *testing.T) {
	result := operations.DivideBy7979(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7980(t *testing.T) {
	result := operations.DivideBy7980(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7981(t *testing.T) {
	result := operations.DivideBy7981(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7982(t *testing.T) {
	result := operations.DivideBy7982(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7983(t *testing.T) {
	result := operations.DivideBy7983(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7984(t *testing.T) {
	result := operations.DivideBy7984(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7985(t *testing.T) {
	result := operations.DivideBy7985(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7986(t *testing.T) {
	result := operations.DivideBy7986(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7987(t *testing.T) {
	result := operations.DivideBy7987(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7988(t *testing.T) {
	result := operations.DivideBy7988(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7989(t *testing.T) {
	result := operations.DivideBy7989(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7990(t *testing.T) {
	result := operations.DivideBy7990(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7991(t *testing.T) {
	result := operations.DivideBy7991(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7992(t *testing.T) {
	result := operations.DivideBy7992(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7993(t *testing.T) {
	result := operations.DivideBy7993(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7994(t *testing.T) {
	result := operations.DivideBy7994(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7995(t *testing.T) {
	result := operations.DivideBy7995(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7996(t *testing.T) {
	result := operations.DivideBy7996(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7997(t *testing.T) {
	result := operations.DivideBy7997(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7998(t *testing.T) {
	result := operations.DivideBy7998(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy7999(t *testing.T) {
	result := operations.DivideBy7999(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8000(t *testing.T) {
	result := operations.DivideBy8000(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8001(t *testing.T) {
	result := operations.DivideBy8001(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8002(t *testing.T) {
	result := operations.DivideBy8002(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8003(t *testing.T) {
	result := operations.DivideBy8003(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8004(t *testing.T) {
	result := operations.DivideBy8004(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8005(t *testing.T) {
	result := operations.DivideBy8005(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8006(t *testing.T) {
	result := operations.DivideBy8006(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8007(t *testing.T) {
	result := operations.DivideBy8007(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8008(t *testing.T) {
	result := operations.DivideBy8008(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8009(t *testing.T) {
	result := operations.DivideBy8009(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8010(t *testing.T) {
	result := operations.DivideBy8010(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8011(t *testing.T) {
	result := operations.DivideBy8011(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8012(t *testing.T) {
	result := operations.DivideBy8012(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8013(t *testing.T) {
	result := operations.DivideBy8013(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8014(t *testing.T) {
	result := operations.DivideBy8014(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8015(t *testing.T) {
	result := operations.DivideBy8015(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8016(t *testing.T) {
	result := operations.DivideBy8016(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8017(t *testing.T) {
	result := operations.DivideBy8017(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8018(t *testing.T) {
	result := operations.DivideBy8018(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8019(t *testing.T) {
	result := operations.DivideBy8019(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8020(t *testing.T) {
	result := operations.DivideBy8020(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8021(t *testing.T) {
	result := operations.DivideBy8021(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8022(t *testing.T) {
	result := operations.DivideBy8022(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8023(t *testing.T) {
	result := operations.DivideBy8023(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8024(t *testing.T) {
	result := operations.DivideBy8024(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8025(t *testing.T) {
	result := operations.DivideBy8025(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8026(t *testing.T) {
	result := operations.DivideBy8026(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8027(t *testing.T) {
	result := operations.DivideBy8027(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8028(t *testing.T) {
	result := operations.DivideBy8028(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8029(t *testing.T) {
	result := operations.DivideBy8029(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8030(t *testing.T) {
	result := operations.DivideBy8030(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8031(t *testing.T) {
	result := operations.DivideBy8031(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8032(t *testing.T) {
	result := operations.DivideBy8032(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8033(t *testing.T) {
	result := operations.DivideBy8033(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8034(t *testing.T) {
	result := operations.DivideBy8034(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8035(t *testing.T) {
	result := operations.DivideBy8035(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8036(t *testing.T) {
	result := operations.DivideBy8036(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8037(t *testing.T) {
	result := operations.DivideBy8037(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8038(t *testing.T) {
	result := operations.DivideBy8038(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8039(t *testing.T) {
	result := operations.DivideBy8039(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8040(t *testing.T) {
	result := operations.DivideBy8040(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8041(t *testing.T) {
	result := operations.DivideBy8041(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8042(t *testing.T) {
	result := operations.DivideBy8042(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8043(t *testing.T) {
	result := operations.DivideBy8043(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8044(t *testing.T) {
	result := operations.DivideBy8044(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8045(t *testing.T) {
	result := operations.DivideBy8045(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8046(t *testing.T) {
	result := operations.DivideBy8046(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8047(t *testing.T) {
	result := operations.DivideBy8047(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8048(t *testing.T) {
	result := operations.DivideBy8048(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8049(t *testing.T) {
	result := operations.DivideBy8049(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8050(t *testing.T) {
	result := operations.DivideBy8050(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8051(t *testing.T) {
	result := operations.DivideBy8051(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8052(t *testing.T) {
	result := operations.DivideBy8052(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8053(t *testing.T) {
	result := operations.DivideBy8053(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8054(t *testing.T) {
	result := operations.DivideBy8054(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8055(t *testing.T) {
	result := operations.DivideBy8055(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8056(t *testing.T) {
	result := operations.DivideBy8056(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8057(t *testing.T) {
	result := operations.DivideBy8057(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8058(t *testing.T) {
	result := operations.DivideBy8058(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8059(t *testing.T) {
	result := operations.DivideBy8059(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8060(t *testing.T) {
	result := operations.DivideBy8060(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8061(t *testing.T) {
	result := operations.DivideBy8061(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8062(t *testing.T) {
	result := operations.DivideBy8062(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8063(t *testing.T) {
	result := operations.DivideBy8063(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8064(t *testing.T) {
	result := operations.DivideBy8064(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8065(t *testing.T) {
	result := operations.DivideBy8065(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8066(t *testing.T) {
	result := operations.DivideBy8066(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8067(t *testing.T) {
	result := operations.DivideBy8067(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8068(t *testing.T) {
	result := operations.DivideBy8068(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8069(t *testing.T) {
	result := operations.DivideBy8069(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8070(t *testing.T) {
	result := operations.DivideBy8070(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8071(t *testing.T) {
	result := operations.DivideBy8071(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8072(t *testing.T) {
	result := operations.DivideBy8072(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8073(t *testing.T) {
	result := operations.DivideBy8073(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8074(t *testing.T) {
	result := operations.DivideBy8074(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8075(t *testing.T) {
	result := operations.DivideBy8075(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8076(t *testing.T) {
	result := operations.DivideBy8076(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8077(t *testing.T) {
	result := operations.DivideBy8077(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8078(t *testing.T) {
	result := operations.DivideBy8078(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8079(t *testing.T) {
	result := operations.DivideBy8079(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8080(t *testing.T) {
	result := operations.DivideBy8080(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8081(t *testing.T) {
	result := operations.DivideBy8081(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8082(t *testing.T) {
	result := operations.DivideBy8082(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8083(t *testing.T) {
	result := operations.DivideBy8083(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8084(t *testing.T) {
	result := operations.DivideBy8084(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8085(t *testing.T) {
	result := operations.DivideBy8085(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8086(t *testing.T) {
	result := operations.DivideBy8086(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8087(t *testing.T) {
	result := operations.DivideBy8087(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8088(t *testing.T) {
	result := operations.DivideBy8088(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8089(t *testing.T) {
	result := operations.DivideBy8089(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8090(t *testing.T) {
	result := operations.DivideBy8090(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8091(t *testing.T) {
	result := operations.DivideBy8091(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8092(t *testing.T) {
	result := operations.DivideBy8092(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8093(t *testing.T) {
	result := operations.DivideBy8093(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8094(t *testing.T) {
	result := operations.DivideBy8094(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8095(t *testing.T) {
	result := operations.DivideBy8095(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8096(t *testing.T) {
	result := operations.DivideBy8096(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8097(t *testing.T) {
	result := operations.DivideBy8097(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8098(t *testing.T) {
	result := operations.DivideBy8098(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8099(t *testing.T) {
	result := operations.DivideBy8099(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8100(t *testing.T) {
	result := operations.DivideBy8100(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8101(t *testing.T) {
	result := operations.DivideBy8101(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8102(t *testing.T) {
	result := operations.DivideBy8102(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8103(t *testing.T) {
	result := operations.DivideBy8103(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8104(t *testing.T) {
	result := operations.DivideBy8104(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8105(t *testing.T) {
	result := operations.DivideBy8105(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8106(t *testing.T) {
	result := operations.DivideBy8106(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8107(t *testing.T) {
	result := operations.DivideBy8107(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8108(t *testing.T) {
	result := operations.DivideBy8108(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8109(t *testing.T) {
	result := operations.DivideBy8109(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8110(t *testing.T) {
	result := operations.DivideBy8110(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8111(t *testing.T) {
	result := operations.DivideBy8111(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8112(t *testing.T) {
	result := operations.DivideBy8112(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8113(t *testing.T) {
	result := operations.DivideBy8113(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8114(t *testing.T) {
	result := operations.DivideBy8114(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8115(t *testing.T) {
	result := operations.DivideBy8115(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8116(t *testing.T) {
	result := operations.DivideBy8116(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8117(t *testing.T) {
	result := operations.DivideBy8117(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8118(t *testing.T) {
	result := operations.DivideBy8118(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8119(t *testing.T) {
	result := operations.DivideBy8119(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8120(t *testing.T) {
	result := operations.DivideBy8120(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8121(t *testing.T) {
	result := operations.DivideBy8121(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8122(t *testing.T) {
	result := operations.DivideBy8122(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8123(t *testing.T) {
	result := operations.DivideBy8123(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8124(t *testing.T) {
	result := operations.DivideBy8124(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8125(t *testing.T) {
	result := operations.DivideBy8125(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8126(t *testing.T) {
	result := operations.DivideBy8126(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8127(t *testing.T) {
	result := operations.DivideBy8127(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8128(t *testing.T) {
	result := operations.DivideBy8128(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8129(t *testing.T) {
	result := operations.DivideBy8129(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8130(t *testing.T) {
	result := operations.DivideBy8130(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8131(t *testing.T) {
	result := operations.DivideBy8131(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8132(t *testing.T) {
	result := operations.DivideBy8132(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8133(t *testing.T) {
	result := operations.DivideBy8133(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8134(t *testing.T) {
	result := operations.DivideBy8134(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8135(t *testing.T) {
	result := operations.DivideBy8135(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8136(t *testing.T) {
	result := operations.DivideBy8136(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8137(t *testing.T) {
	result := operations.DivideBy8137(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8138(t *testing.T) {
	result := operations.DivideBy8138(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8139(t *testing.T) {
	result := operations.DivideBy8139(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8140(t *testing.T) {
	result := operations.DivideBy8140(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8141(t *testing.T) {
	result := operations.DivideBy8141(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8142(t *testing.T) {
	result := operations.DivideBy8142(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8143(t *testing.T) {
	result := operations.DivideBy8143(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8144(t *testing.T) {
	result := operations.DivideBy8144(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8145(t *testing.T) {
	result := operations.DivideBy8145(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8146(t *testing.T) {
	result := operations.DivideBy8146(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8147(t *testing.T) {
	result := operations.DivideBy8147(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8148(t *testing.T) {
	result := operations.DivideBy8148(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8149(t *testing.T) {
	result := operations.DivideBy8149(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8150(t *testing.T) {
	result := operations.DivideBy8150(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8151(t *testing.T) {
	result := operations.DivideBy8151(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8152(t *testing.T) {
	result := operations.DivideBy8152(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8153(t *testing.T) {
	result := operations.DivideBy8153(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8154(t *testing.T) {
	result := operations.DivideBy8154(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8155(t *testing.T) {
	result := operations.DivideBy8155(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8156(t *testing.T) {
	result := operations.DivideBy8156(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8157(t *testing.T) {
	result := operations.DivideBy8157(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8158(t *testing.T) {
	result := operations.DivideBy8158(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8159(t *testing.T) {
	result := operations.DivideBy8159(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8160(t *testing.T) {
	result := operations.DivideBy8160(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8161(t *testing.T) {
	result := operations.DivideBy8161(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8162(t *testing.T) {
	result := operations.DivideBy8162(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8163(t *testing.T) {
	result := operations.DivideBy8163(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8164(t *testing.T) {
	result := operations.DivideBy8164(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8165(t *testing.T) {
	result := operations.DivideBy8165(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8166(t *testing.T) {
	result := operations.DivideBy8166(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8167(t *testing.T) {
	result := operations.DivideBy8167(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8168(t *testing.T) {
	result := operations.DivideBy8168(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8169(t *testing.T) {
	result := operations.DivideBy8169(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8170(t *testing.T) {
	result := operations.DivideBy8170(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8171(t *testing.T) {
	result := operations.DivideBy8171(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8172(t *testing.T) {
	result := operations.DivideBy8172(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8173(t *testing.T) {
	result := operations.DivideBy8173(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8174(t *testing.T) {
	result := operations.DivideBy8174(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8175(t *testing.T) {
	result := operations.DivideBy8175(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8176(t *testing.T) {
	result := operations.DivideBy8176(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8177(t *testing.T) {
	result := operations.DivideBy8177(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8178(t *testing.T) {
	result := operations.DivideBy8178(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8179(t *testing.T) {
	result := operations.DivideBy8179(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8180(t *testing.T) {
	result := operations.DivideBy8180(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8181(t *testing.T) {
	result := operations.DivideBy8181(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8182(t *testing.T) {
	result := operations.DivideBy8182(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8183(t *testing.T) {
	result := operations.DivideBy8183(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8184(t *testing.T) {
	result := operations.DivideBy8184(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8185(t *testing.T) {
	result := operations.DivideBy8185(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8186(t *testing.T) {
	result := operations.DivideBy8186(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8187(t *testing.T) {
	result := operations.DivideBy8187(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8188(t *testing.T) {
	result := operations.DivideBy8188(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8189(t *testing.T) {
	result := operations.DivideBy8189(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8190(t *testing.T) {
	result := operations.DivideBy8190(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8191(t *testing.T) {
	result := operations.DivideBy8191(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8192(t *testing.T) {
	result := operations.DivideBy8192(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8193(t *testing.T) {
	result := operations.DivideBy8193(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8194(t *testing.T) {
	result := operations.DivideBy8194(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8195(t *testing.T) {
	result := operations.DivideBy8195(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8196(t *testing.T) {
	result := operations.DivideBy8196(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8197(t *testing.T) {
	result := operations.DivideBy8197(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8198(t *testing.T) {
	result := operations.DivideBy8198(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8199(t *testing.T) {
	result := operations.DivideBy8199(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8200(t *testing.T) {
	result := operations.DivideBy8200(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8201(t *testing.T) {
	result := operations.DivideBy8201(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8202(t *testing.T) {
	result := operations.DivideBy8202(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8203(t *testing.T) {
	result := operations.DivideBy8203(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8204(t *testing.T) {
	result := operations.DivideBy8204(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8205(t *testing.T) {
	result := operations.DivideBy8205(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8206(t *testing.T) {
	result := operations.DivideBy8206(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8207(t *testing.T) {
	result := operations.DivideBy8207(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8208(t *testing.T) {
	result := operations.DivideBy8208(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8209(t *testing.T) {
	result := operations.DivideBy8209(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8210(t *testing.T) {
	result := operations.DivideBy8210(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8211(t *testing.T) {
	result := operations.DivideBy8211(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8212(t *testing.T) {
	result := operations.DivideBy8212(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8213(t *testing.T) {
	result := operations.DivideBy8213(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8214(t *testing.T) {
	result := operations.DivideBy8214(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8215(t *testing.T) {
	result := operations.DivideBy8215(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8216(t *testing.T) {
	result := operations.DivideBy8216(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8217(t *testing.T) {
	result := operations.DivideBy8217(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8218(t *testing.T) {
	result := operations.DivideBy8218(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8219(t *testing.T) {
	result := operations.DivideBy8219(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8220(t *testing.T) {
	result := operations.DivideBy8220(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8221(t *testing.T) {
	result := operations.DivideBy8221(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8222(t *testing.T) {
	result := operations.DivideBy8222(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8223(t *testing.T) {
	result := operations.DivideBy8223(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8224(t *testing.T) {
	result := operations.DivideBy8224(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8225(t *testing.T) {
	result := operations.DivideBy8225(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8226(t *testing.T) {
	result := operations.DivideBy8226(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8227(t *testing.T) {
	result := operations.DivideBy8227(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8228(t *testing.T) {
	result := operations.DivideBy8228(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8229(t *testing.T) {
	result := operations.DivideBy8229(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8230(t *testing.T) {
	result := operations.DivideBy8230(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8231(t *testing.T) {
	result := operations.DivideBy8231(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8232(t *testing.T) {
	result := operations.DivideBy8232(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8233(t *testing.T) {
	result := operations.DivideBy8233(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8234(t *testing.T) {
	result := operations.DivideBy8234(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8235(t *testing.T) {
	result := operations.DivideBy8235(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8236(t *testing.T) {
	result := operations.DivideBy8236(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8237(t *testing.T) {
	result := operations.DivideBy8237(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8238(t *testing.T) {
	result := operations.DivideBy8238(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8239(t *testing.T) {
	result := operations.DivideBy8239(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8240(t *testing.T) {
	result := operations.DivideBy8240(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8241(t *testing.T) {
	result := operations.DivideBy8241(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8242(t *testing.T) {
	result := operations.DivideBy8242(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8243(t *testing.T) {
	result := operations.DivideBy8243(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8244(t *testing.T) {
	result := operations.DivideBy8244(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8245(t *testing.T) {
	result := operations.DivideBy8245(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8246(t *testing.T) {
	result := operations.DivideBy8246(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8247(t *testing.T) {
	result := operations.DivideBy8247(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8248(t *testing.T) {
	result := operations.DivideBy8248(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8249(t *testing.T) {
	result := operations.DivideBy8249(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8250(t *testing.T) {
	result := operations.DivideBy8250(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8251(t *testing.T) {
	result := operations.DivideBy8251(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8252(t *testing.T) {
	result := operations.DivideBy8252(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8253(t *testing.T) {
	result := operations.DivideBy8253(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8254(t *testing.T) {
	result := operations.DivideBy8254(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8255(t *testing.T) {
	result := operations.DivideBy8255(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8256(t *testing.T) {
	result := operations.DivideBy8256(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8257(t *testing.T) {
	result := operations.DivideBy8257(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8258(t *testing.T) {
	result := operations.DivideBy8258(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8259(t *testing.T) {
	result := operations.DivideBy8259(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8260(t *testing.T) {
	result := operations.DivideBy8260(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8261(t *testing.T) {
	result := operations.DivideBy8261(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8262(t *testing.T) {
	result := operations.DivideBy8262(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8263(t *testing.T) {
	result := operations.DivideBy8263(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8264(t *testing.T) {
	result := operations.DivideBy8264(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8265(t *testing.T) {
	result := operations.DivideBy8265(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8266(t *testing.T) {
	result := operations.DivideBy8266(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8267(t *testing.T) {
	result := operations.DivideBy8267(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8268(t *testing.T) {
	result := operations.DivideBy8268(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8269(t *testing.T) {
	result := operations.DivideBy8269(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8270(t *testing.T) {
	result := operations.DivideBy8270(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8271(t *testing.T) {
	result := operations.DivideBy8271(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8272(t *testing.T) {
	result := operations.DivideBy8272(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8273(t *testing.T) {
	result := operations.DivideBy8273(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8274(t *testing.T) {
	result := operations.DivideBy8274(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8275(t *testing.T) {
	result := operations.DivideBy8275(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8276(t *testing.T) {
	result := operations.DivideBy8276(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8277(t *testing.T) {
	result := operations.DivideBy8277(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8278(t *testing.T) {
	result := operations.DivideBy8278(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8279(t *testing.T) {
	result := operations.DivideBy8279(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8280(t *testing.T) {
	result := operations.DivideBy8280(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8281(t *testing.T) {
	result := operations.DivideBy8281(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8282(t *testing.T) {
	result := operations.DivideBy8282(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8283(t *testing.T) {
	result := operations.DivideBy8283(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8284(t *testing.T) {
	result := operations.DivideBy8284(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8285(t *testing.T) {
	result := operations.DivideBy8285(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8286(t *testing.T) {
	result := operations.DivideBy8286(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8287(t *testing.T) {
	result := operations.DivideBy8287(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8288(t *testing.T) {
	result := operations.DivideBy8288(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8289(t *testing.T) {
	result := operations.DivideBy8289(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8290(t *testing.T) {
	result := operations.DivideBy8290(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8291(t *testing.T) {
	result := operations.DivideBy8291(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8292(t *testing.T) {
	result := operations.DivideBy8292(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8293(t *testing.T) {
	result := operations.DivideBy8293(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8294(t *testing.T) {
	result := operations.DivideBy8294(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8295(t *testing.T) {
	result := operations.DivideBy8295(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8296(t *testing.T) {
	result := operations.DivideBy8296(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8297(t *testing.T) {
	result := operations.DivideBy8297(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8298(t *testing.T) {
	result := operations.DivideBy8298(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8299(t *testing.T) {
	result := operations.DivideBy8299(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8300(t *testing.T) {
	result := operations.DivideBy8300(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8301(t *testing.T) {
	result := operations.DivideBy8301(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8302(t *testing.T) {
	result := operations.DivideBy8302(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8303(t *testing.T) {
	result := operations.DivideBy8303(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8304(t *testing.T) {
	result := operations.DivideBy8304(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8305(t *testing.T) {
	result := operations.DivideBy8305(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8306(t *testing.T) {
	result := operations.DivideBy8306(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8307(t *testing.T) {
	result := operations.DivideBy8307(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8308(t *testing.T) {
	result := operations.DivideBy8308(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8309(t *testing.T) {
	result := operations.DivideBy8309(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8310(t *testing.T) {
	result := operations.DivideBy8310(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8311(t *testing.T) {
	result := operations.DivideBy8311(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8312(t *testing.T) {
	result := operations.DivideBy8312(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8313(t *testing.T) {
	result := operations.DivideBy8313(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8314(t *testing.T) {
	result := operations.DivideBy8314(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8315(t *testing.T) {
	result := operations.DivideBy8315(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8316(t *testing.T) {
	result := operations.DivideBy8316(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8317(t *testing.T) {
	result := operations.DivideBy8317(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8318(t *testing.T) {
	result := operations.DivideBy8318(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8319(t *testing.T) {
	result := operations.DivideBy8319(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8320(t *testing.T) {
	result := operations.DivideBy8320(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8321(t *testing.T) {
	result := operations.DivideBy8321(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8322(t *testing.T) {
	result := operations.DivideBy8322(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8323(t *testing.T) {
	result := operations.DivideBy8323(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8324(t *testing.T) {
	result := operations.DivideBy8324(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8325(t *testing.T) {
	result := operations.DivideBy8325(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8326(t *testing.T) {
	result := operations.DivideBy8326(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8327(t *testing.T) {
	result := operations.DivideBy8327(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8328(t *testing.T) {
	result := operations.DivideBy8328(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8329(t *testing.T) {
	result := operations.DivideBy8329(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8330(t *testing.T) {
	result := operations.DivideBy8330(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8331(t *testing.T) {
	result := operations.DivideBy8331(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8332(t *testing.T) {
	result := operations.DivideBy8332(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8333(t *testing.T) {
	result := operations.DivideBy8333(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8334(t *testing.T) {
	result := operations.DivideBy8334(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8335(t *testing.T) {
	result := operations.DivideBy8335(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8336(t *testing.T) {
	result := operations.DivideBy8336(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8337(t *testing.T) {
	result := operations.DivideBy8337(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8338(t *testing.T) {
	result := operations.DivideBy8338(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8339(t *testing.T) {
	result := operations.DivideBy8339(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8340(t *testing.T) {
	result := operations.DivideBy8340(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8341(t *testing.T) {
	result := operations.DivideBy8341(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8342(t *testing.T) {
	result := operations.DivideBy8342(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8343(t *testing.T) {
	result := operations.DivideBy8343(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8344(t *testing.T) {
	result := operations.DivideBy8344(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8345(t *testing.T) {
	result := operations.DivideBy8345(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8346(t *testing.T) {
	result := operations.DivideBy8346(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8347(t *testing.T) {
	result := operations.DivideBy8347(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8348(t *testing.T) {
	result := operations.DivideBy8348(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8349(t *testing.T) {
	result := operations.DivideBy8349(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8350(t *testing.T) {
	result := operations.DivideBy8350(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8351(t *testing.T) {
	result := operations.DivideBy8351(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8352(t *testing.T) {
	result := operations.DivideBy8352(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8353(t *testing.T) {
	result := operations.DivideBy8353(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8354(t *testing.T) {
	result := operations.DivideBy8354(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8355(t *testing.T) {
	result := operations.DivideBy8355(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8356(t *testing.T) {
	result := operations.DivideBy8356(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8357(t *testing.T) {
	result := operations.DivideBy8357(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8358(t *testing.T) {
	result := operations.DivideBy8358(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8359(t *testing.T) {
	result := operations.DivideBy8359(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8360(t *testing.T) {
	result := operations.DivideBy8360(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8361(t *testing.T) {
	result := operations.DivideBy8361(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8362(t *testing.T) {
	result := operations.DivideBy8362(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8363(t *testing.T) {
	result := operations.DivideBy8363(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8364(t *testing.T) {
	result := operations.DivideBy8364(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8365(t *testing.T) {
	result := operations.DivideBy8365(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8366(t *testing.T) {
	result := operations.DivideBy8366(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8367(t *testing.T) {
	result := operations.DivideBy8367(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8368(t *testing.T) {
	result := operations.DivideBy8368(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8369(t *testing.T) {
	result := operations.DivideBy8369(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8370(t *testing.T) {
	result := operations.DivideBy8370(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8371(t *testing.T) {
	result := operations.DivideBy8371(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8372(t *testing.T) {
	result := operations.DivideBy8372(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8373(t *testing.T) {
	result := operations.DivideBy8373(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8374(t *testing.T) {
	result := operations.DivideBy8374(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8375(t *testing.T) {
	result := operations.DivideBy8375(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8376(t *testing.T) {
	result := operations.DivideBy8376(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8377(t *testing.T) {
	result := operations.DivideBy8377(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8378(t *testing.T) {
	result := operations.DivideBy8378(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8379(t *testing.T) {
	result := operations.DivideBy8379(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8380(t *testing.T) {
	result := operations.DivideBy8380(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8381(t *testing.T) {
	result := operations.DivideBy8381(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8382(t *testing.T) {
	result := operations.DivideBy8382(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8383(t *testing.T) {
	result := operations.DivideBy8383(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8384(t *testing.T) {
	result := operations.DivideBy8384(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8385(t *testing.T) {
	result := operations.DivideBy8385(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8386(t *testing.T) {
	result := operations.DivideBy8386(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8387(t *testing.T) {
	result := operations.DivideBy8387(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8388(t *testing.T) {
	result := operations.DivideBy8388(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8389(t *testing.T) {
	result := operations.DivideBy8389(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8390(t *testing.T) {
	result := operations.DivideBy8390(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8391(t *testing.T) {
	result := operations.DivideBy8391(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8392(t *testing.T) {
	result := operations.DivideBy8392(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8393(t *testing.T) {
	result := operations.DivideBy8393(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8394(t *testing.T) {
	result := operations.DivideBy8394(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8395(t *testing.T) {
	result := operations.DivideBy8395(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8396(t *testing.T) {
	result := operations.DivideBy8396(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8397(t *testing.T) {
	result := operations.DivideBy8397(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8398(t *testing.T) {
	result := operations.DivideBy8398(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8399(t *testing.T) {
	result := operations.DivideBy8399(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8400(t *testing.T) {
	result := operations.DivideBy8400(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8401(t *testing.T) {
	result := operations.DivideBy8401(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8402(t *testing.T) {
	result := operations.DivideBy8402(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8403(t *testing.T) {
	result := operations.DivideBy8403(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8404(t *testing.T) {
	result := operations.DivideBy8404(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8405(t *testing.T) {
	result := operations.DivideBy8405(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8406(t *testing.T) {
	result := operations.DivideBy8406(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8407(t *testing.T) {
	result := operations.DivideBy8407(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8408(t *testing.T) {
	result := operations.DivideBy8408(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8409(t *testing.T) {
	result := operations.DivideBy8409(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8410(t *testing.T) {
	result := operations.DivideBy8410(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8411(t *testing.T) {
	result := operations.DivideBy8411(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8412(t *testing.T) {
	result := operations.DivideBy8412(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8413(t *testing.T) {
	result := operations.DivideBy8413(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8414(t *testing.T) {
	result := operations.DivideBy8414(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8415(t *testing.T) {
	result := operations.DivideBy8415(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8416(t *testing.T) {
	result := operations.DivideBy8416(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8417(t *testing.T) {
	result := operations.DivideBy8417(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8418(t *testing.T) {
	result := operations.DivideBy8418(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8419(t *testing.T) {
	result := operations.DivideBy8419(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8420(t *testing.T) {
	result := operations.DivideBy8420(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8421(t *testing.T) {
	result := operations.DivideBy8421(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8422(t *testing.T) {
	result := operations.DivideBy8422(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8423(t *testing.T) {
	result := operations.DivideBy8423(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8424(t *testing.T) {
	result := operations.DivideBy8424(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8425(t *testing.T) {
	result := operations.DivideBy8425(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8426(t *testing.T) {
	result := operations.DivideBy8426(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8427(t *testing.T) {
	result := operations.DivideBy8427(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8428(t *testing.T) {
	result := operations.DivideBy8428(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8429(t *testing.T) {
	result := operations.DivideBy8429(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8430(t *testing.T) {
	result := operations.DivideBy8430(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8431(t *testing.T) {
	result := operations.DivideBy8431(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8432(t *testing.T) {
	result := operations.DivideBy8432(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8433(t *testing.T) {
	result := operations.DivideBy8433(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8434(t *testing.T) {
	result := operations.DivideBy8434(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8435(t *testing.T) {
	result := operations.DivideBy8435(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8436(t *testing.T) {
	result := operations.DivideBy8436(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8437(t *testing.T) {
	result := operations.DivideBy8437(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8438(t *testing.T) {
	result := operations.DivideBy8438(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8439(t *testing.T) {
	result := operations.DivideBy8439(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8440(t *testing.T) {
	result := operations.DivideBy8440(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8441(t *testing.T) {
	result := operations.DivideBy8441(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8442(t *testing.T) {
	result := operations.DivideBy8442(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8443(t *testing.T) {
	result := operations.DivideBy8443(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8444(t *testing.T) {
	result := operations.DivideBy8444(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8445(t *testing.T) {
	result := operations.DivideBy8445(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8446(t *testing.T) {
	result := operations.DivideBy8446(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8447(t *testing.T) {
	result := operations.DivideBy8447(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8448(t *testing.T) {
	result := operations.DivideBy8448(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8449(t *testing.T) {
	result := operations.DivideBy8449(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8450(t *testing.T) {
	result := operations.DivideBy8450(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8451(t *testing.T) {
	result := operations.DivideBy8451(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8452(t *testing.T) {
	result := operations.DivideBy8452(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8453(t *testing.T) {
	result := operations.DivideBy8453(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8454(t *testing.T) {
	result := operations.DivideBy8454(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8455(t *testing.T) {
	result := operations.DivideBy8455(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8456(t *testing.T) {
	result := operations.DivideBy8456(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8457(t *testing.T) {
	result := operations.DivideBy8457(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8458(t *testing.T) {
	result := operations.DivideBy8458(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8459(t *testing.T) {
	result := operations.DivideBy8459(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8460(t *testing.T) {
	result := operations.DivideBy8460(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8461(t *testing.T) {
	result := operations.DivideBy8461(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8462(t *testing.T) {
	result := operations.DivideBy8462(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8463(t *testing.T) {
	result := operations.DivideBy8463(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8464(t *testing.T) {
	result := operations.DivideBy8464(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8465(t *testing.T) {
	result := operations.DivideBy8465(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8466(t *testing.T) {
	result := operations.DivideBy8466(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8467(t *testing.T) {
	result := operations.DivideBy8467(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8468(t *testing.T) {
	result := operations.DivideBy8468(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8469(t *testing.T) {
	result := operations.DivideBy8469(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8470(t *testing.T) {
	result := operations.DivideBy8470(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8471(t *testing.T) {
	result := operations.DivideBy8471(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8472(t *testing.T) {
	result := operations.DivideBy8472(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8473(t *testing.T) {
	result := operations.DivideBy8473(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8474(t *testing.T) {
	result := operations.DivideBy8474(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8475(t *testing.T) {
	result := operations.DivideBy8475(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8476(t *testing.T) {
	result := operations.DivideBy8476(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8477(t *testing.T) {
	result := operations.DivideBy8477(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8478(t *testing.T) {
	result := operations.DivideBy8478(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8479(t *testing.T) {
	result := operations.DivideBy8479(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8480(t *testing.T) {
	result := operations.DivideBy8480(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8481(t *testing.T) {
	result := operations.DivideBy8481(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8482(t *testing.T) {
	result := operations.DivideBy8482(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8483(t *testing.T) {
	result := operations.DivideBy8483(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8484(t *testing.T) {
	result := operations.DivideBy8484(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8485(t *testing.T) {
	result := operations.DivideBy8485(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8486(t *testing.T) {
	result := operations.DivideBy8486(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8487(t *testing.T) {
	result := operations.DivideBy8487(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8488(t *testing.T) {
	result := operations.DivideBy8488(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8489(t *testing.T) {
	result := operations.DivideBy8489(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8490(t *testing.T) {
	result := operations.DivideBy8490(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8491(t *testing.T) {
	result := operations.DivideBy8491(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8492(t *testing.T) {
	result := operations.DivideBy8492(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8493(t *testing.T) {
	result := operations.DivideBy8493(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8494(t *testing.T) {
	result := operations.DivideBy8494(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8495(t *testing.T) {
	result := operations.DivideBy8495(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8496(t *testing.T) {
	result := operations.DivideBy8496(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8497(t *testing.T) {
	result := operations.DivideBy8497(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8498(t *testing.T) {
	result := operations.DivideBy8498(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8499(t *testing.T) {
	result := operations.DivideBy8499(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8500(t *testing.T) {
	result := operations.DivideBy8500(17000)
	
	if result != 2 {
		t.Errorf("Expected 2 but got %d", result)
	}
}

func TestDivideBy8501(t *testing.T) {
	result := operations.DivideBy8501(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8502(t *testing.T) {
	result := operations.DivideBy8502(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8503(t *testing.T) {
	result := operations.DivideBy8503(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8504(t *testing.T) {
	result := operations.DivideBy8504(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8505(t *testing.T) {
	result := operations.DivideBy8505(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8506(t *testing.T) {
	result := operations.DivideBy8506(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8507(t *testing.T) {
	result := operations.DivideBy8507(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8508(t *testing.T) {
	result := operations.DivideBy8508(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8509(t *testing.T) {
	result := operations.DivideBy8509(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8510(t *testing.T) {
	result := operations.DivideBy8510(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8511(t *testing.T) {
	result := operations.DivideBy8511(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8512(t *testing.T) {
	result := operations.DivideBy8512(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8513(t *testing.T) {
	result := operations.DivideBy8513(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8514(t *testing.T) {
	result := operations.DivideBy8514(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8515(t *testing.T) {
	result := operations.DivideBy8515(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8516(t *testing.T) {
	result := operations.DivideBy8516(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8517(t *testing.T) {
	result := operations.DivideBy8517(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8518(t *testing.T) {
	result := operations.DivideBy8518(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8519(t *testing.T) {
	result := operations.DivideBy8519(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8520(t *testing.T) {
	result := operations.DivideBy8520(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8521(t *testing.T) {
	result := operations.DivideBy8521(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8522(t *testing.T) {
	result := operations.DivideBy8522(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8523(t *testing.T) {
	result := operations.DivideBy8523(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8524(t *testing.T) {
	result := operations.DivideBy8524(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8525(t *testing.T) {
	result := operations.DivideBy8525(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8526(t *testing.T) {
	result := operations.DivideBy8526(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8527(t *testing.T) {
	result := operations.DivideBy8527(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8528(t *testing.T) {
	result := operations.DivideBy8528(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8529(t *testing.T) {
	result := operations.DivideBy8529(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8530(t *testing.T) {
	result := operations.DivideBy8530(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8531(t *testing.T) {
	result := operations.DivideBy8531(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8532(t *testing.T) {
	result := operations.DivideBy8532(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8533(t *testing.T) {
	result := operations.DivideBy8533(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8534(t *testing.T) {
	result := operations.DivideBy8534(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8535(t *testing.T) {
	result := operations.DivideBy8535(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8536(t *testing.T) {
	result := operations.DivideBy8536(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8537(t *testing.T) {
	result := operations.DivideBy8537(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8538(t *testing.T) {
	result := operations.DivideBy8538(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8539(t *testing.T) {
	result := operations.DivideBy8539(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8540(t *testing.T) {
	result := operations.DivideBy8540(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8541(t *testing.T) {
	result := operations.DivideBy8541(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8542(t *testing.T) {
	result := operations.DivideBy8542(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8543(t *testing.T) {
	result := operations.DivideBy8543(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8544(t *testing.T) {
	result := operations.DivideBy8544(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8545(t *testing.T) {
	result := operations.DivideBy8545(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8546(t *testing.T) {
	result := operations.DivideBy8546(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8547(t *testing.T) {
	result := operations.DivideBy8547(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8548(t *testing.T) {
	result := operations.DivideBy8548(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8549(t *testing.T) {
	result := operations.DivideBy8549(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8550(t *testing.T) {
	result := operations.DivideBy8550(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8551(t *testing.T) {
	result := operations.DivideBy8551(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8552(t *testing.T) {
	result := operations.DivideBy8552(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8553(t *testing.T) {
	result := operations.DivideBy8553(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8554(t *testing.T) {
	result := operations.DivideBy8554(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8555(t *testing.T) {
	result := operations.DivideBy8555(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8556(t *testing.T) {
	result := operations.DivideBy8556(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8557(t *testing.T) {
	result := operations.DivideBy8557(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8558(t *testing.T) {
	result := operations.DivideBy8558(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8559(t *testing.T) {
	result := operations.DivideBy8559(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8560(t *testing.T) {
	result := operations.DivideBy8560(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8561(t *testing.T) {
	result := operations.DivideBy8561(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8562(t *testing.T) {
	result := operations.DivideBy8562(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8563(t *testing.T) {
	result := operations.DivideBy8563(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8564(t *testing.T) {
	result := operations.DivideBy8564(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8565(t *testing.T) {
	result := operations.DivideBy8565(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8566(t *testing.T) {
	result := operations.DivideBy8566(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8567(t *testing.T) {
	result := operations.DivideBy8567(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8568(t *testing.T) {
	result := operations.DivideBy8568(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8569(t *testing.T) {
	result := operations.DivideBy8569(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8570(t *testing.T) {
	result := operations.DivideBy8570(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8571(t *testing.T) {
	result := operations.DivideBy8571(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8572(t *testing.T) {
	result := operations.DivideBy8572(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8573(t *testing.T) {
	result := operations.DivideBy8573(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8574(t *testing.T) {
	result := operations.DivideBy8574(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8575(t *testing.T) {
	result := operations.DivideBy8575(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8576(t *testing.T) {
	result := operations.DivideBy8576(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8577(t *testing.T) {
	result := operations.DivideBy8577(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8578(t *testing.T) {
	result := operations.DivideBy8578(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8579(t *testing.T) {
	result := operations.DivideBy8579(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8580(t *testing.T) {
	result := operations.DivideBy8580(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8581(t *testing.T) {
	result := operations.DivideBy8581(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8582(t *testing.T) {
	result := operations.DivideBy8582(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8583(t *testing.T) {
	result := operations.DivideBy8583(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8584(t *testing.T) {
	result := operations.DivideBy8584(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8585(t *testing.T) {
	result := operations.DivideBy8585(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8586(t *testing.T) {
	result := operations.DivideBy8586(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8587(t *testing.T) {
	result := operations.DivideBy8587(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8588(t *testing.T) {
	result := operations.DivideBy8588(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8589(t *testing.T) {
	result := operations.DivideBy8589(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8590(t *testing.T) {
	result := operations.DivideBy8590(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8591(t *testing.T) {
	result := operations.DivideBy8591(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8592(t *testing.T) {
	result := operations.DivideBy8592(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8593(t *testing.T) {
	result := operations.DivideBy8593(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8594(t *testing.T) {
	result := operations.DivideBy8594(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8595(t *testing.T) {
	result := operations.DivideBy8595(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8596(t *testing.T) {
	result := operations.DivideBy8596(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8597(t *testing.T) {
	result := operations.DivideBy8597(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8598(t *testing.T) {
	result := operations.DivideBy8598(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8599(t *testing.T) {
	result := operations.DivideBy8599(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8600(t *testing.T) {
	result := operations.DivideBy8600(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8601(t *testing.T) {
	result := operations.DivideBy8601(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8602(t *testing.T) {
	result := operations.DivideBy8602(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8603(t *testing.T) {
	result := operations.DivideBy8603(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8604(t *testing.T) {
	result := operations.DivideBy8604(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8605(t *testing.T) {
	result := operations.DivideBy8605(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8606(t *testing.T) {
	result := operations.DivideBy8606(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8607(t *testing.T) {
	result := operations.DivideBy8607(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8608(t *testing.T) {
	result := operations.DivideBy8608(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8609(t *testing.T) {
	result := operations.DivideBy8609(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8610(t *testing.T) {
	result := operations.DivideBy8610(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8611(t *testing.T) {
	result := operations.DivideBy8611(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8612(t *testing.T) {
	result := operations.DivideBy8612(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8613(t *testing.T) {
	result := operations.DivideBy8613(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8614(t *testing.T) {
	result := operations.DivideBy8614(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8615(t *testing.T) {
	result := operations.DivideBy8615(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8616(t *testing.T) {
	result := operations.DivideBy8616(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8617(t *testing.T) {
	result := operations.DivideBy8617(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8618(t *testing.T) {
	result := operations.DivideBy8618(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8619(t *testing.T) {
	result := operations.DivideBy8619(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8620(t *testing.T) {
	result := operations.DivideBy8620(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8621(t *testing.T) {
	result := operations.DivideBy8621(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8622(t *testing.T) {
	result := operations.DivideBy8622(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8623(t *testing.T) {
	result := operations.DivideBy8623(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8624(t *testing.T) {
	result := operations.DivideBy8624(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8625(t *testing.T) {
	result := operations.DivideBy8625(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8626(t *testing.T) {
	result := operations.DivideBy8626(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8627(t *testing.T) {
	result := operations.DivideBy8627(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8628(t *testing.T) {
	result := operations.DivideBy8628(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8629(t *testing.T) {
	result := operations.DivideBy8629(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8630(t *testing.T) {
	result := operations.DivideBy8630(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8631(t *testing.T) {
	result := operations.DivideBy8631(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8632(t *testing.T) {
	result := operations.DivideBy8632(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8633(t *testing.T) {
	result := operations.DivideBy8633(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8634(t *testing.T) {
	result := operations.DivideBy8634(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8635(t *testing.T) {
	result := operations.DivideBy8635(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8636(t *testing.T) {
	result := operations.DivideBy8636(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8637(t *testing.T) {
	result := operations.DivideBy8637(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8638(t *testing.T) {
	result := operations.DivideBy8638(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8639(t *testing.T) {
	result := operations.DivideBy8639(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8640(t *testing.T) {
	result := operations.DivideBy8640(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8641(t *testing.T) {
	result := operations.DivideBy8641(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8642(t *testing.T) {
	result := operations.DivideBy8642(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8643(t *testing.T) {
	result := operations.DivideBy8643(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8644(t *testing.T) {
	result := operations.DivideBy8644(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8645(t *testing.T) {
	result := operations.DivideBy8645(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8646(t *testing.T) {
	result := operations.DivideBy8646(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8647(t *testing.T) {
	result := operations.DivideBy8647(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8648(t *testing.T) {
	result := operations.DivideBy8648(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8649(t *testing.T) {
	result := operations.DivideBy8649(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8650(t *testing.T) {
	result := operations.DivideBy8650(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8651(t *testing.T) {
	result := operations.DivideBy8651(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8652(t *testing.T) {
	result := operations.DivideBy8652(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8653(t *testing.T) {
	result := operations.DivideBy8653(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8654(t *testing.T) {
	result := operations.DivideBy8654(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8655(t *testing.T) {
	result := operations.DivideBy8655(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8656(t *testing.T) {
	result := operations.DivideBy8656(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8657(t *testing.T) {
	result := operations.DivideBy8657(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8658(t *testing.T) {
	result := operations.DivideBy8658(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8659(t *testing.T) {
	result := operations.DivideBy8659(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8660(t *testing.T) {
	result := operations.DivideBy8660(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8661(t *testing.T) {
	result := operations.DivideBy8661(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8662(t *testing.T) {
	result := operations.DivideBy8662(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8663(t *testing.T) {
	result := operations.DivideBy8663(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8664(t *testing.T) {
	result := operations.DivideBy8664(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8665(t *testing.T) {
	result := operations.DivideBy8665(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8666(t *testing.T) {
	result := operations.DivideBy8666(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8667(t *testing.T) {
	result := operations.DivideBy8667(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8668(t *testing.T) {
	result := operations.DivideBy8668(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8669(t *testing.T) {
	result := operations.DivideBy8669(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8670(t *testing.T) {
	result := operations.DivideBy8670(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8671(t *testing.T) {
	result := operations.DivideBy8671(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8672(t *testing.T) {
	result := operations.DivideBy8672(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8673(t *testing.T) {
	result := operations.DivideBy8673(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8674(t *testing.T) {
	result := operations.DivideBy8674(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8675(t *testing.T) {
	result := operations.DivideBy8675(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8676(t *testing.T) {
	result := operations.DivideBy8676(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8677(t *testing.T) {
	result := operations.DivideBy8677(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8678(t *testing.T) {
	result := operations.DivideBy8678(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8679(t *testing.T) {
	result := operations.DivideBy8679(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8680(t *testing.T) {
	result := operations.DivideBy8680(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8681(t *testing.T) {
	result := operations.DivideBy8681(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8682(t *testing.T) {
	result := operations.DivideBy8682(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8683(t *testing.T) {
	result := operations.DivideBy8683(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8684(t *testing.T) {
	result := operations.DivideBy8684(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8685(t *testing.T) {
	result := operations.DivideBy8685(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8686(t *testing.T) {
	result := operations.DivideBy8686(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8687(t *testing.T) {
	result := operations.DivideBy8687(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8688(t *testing.T) {
	result := operations.DivideBy8688(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8689(t *testing.T) {
	result := operations.DivideBy8689(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8690(t *testing.T) {
	result := operations.DivideBy8690(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8691(t *testing.T) {
	result := operations.DivideBy8691(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8692(t *testing.T) {
	result := operations.DivideBy8692(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8693(t *testing.T) {
	result := operations.DivideBy8693(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8694(t *testing.T) {
	result := operations.DivideBy8694(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8695(t *testing.T) {
	result := operations.DivideBy8695(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8696(t *testing.T) {
	result := operations.DivideBy8696(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8697(t *testing.T) {
	result := operations.DivideBy8697(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8698(t *testing.T) {
	result := operations.DivideBy8698(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8699(t *testing.T) {
	result := operations.DivideBy8699(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8700(t *testing.T) {
	result := operations.DivideBy8700(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8701(t *testing.T) {
	result := operations.DivideBy8701(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8702(t *testing.T) {
	result := operations.DivideBy8702(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8703(t *testing.T) {
	result := operations.DivideBy8703(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8704(t *testing.T) {
	result := operations.DivideBy8704(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8705(t *testing.T) {
	result := operations.DivideBy8705(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8706(t *testing.T) {
	result := operations.DivideBy8706(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8707(t *testing.T) {
	result := operations.DivideBy8707(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8708(t *testing.T) {
	result := operations.DivideBy8708(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8709(t *testing.T) {
	result := operations.DivideBy8709(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8710(t *testing.T) {
	result := operations.DivideBy8710(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8711(t *testing.T) {
	result := operations.DivideBy8711(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8712(t *testing.T) {
	result := operations.DivideBy8712(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8713(t *testing.T) {
	result := operations.DivideBy8713(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8714(t *testing.T) {
	result := operations.DivideBy8714(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8715(t *testing.T) {
	result := operations.DivideBy8715(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8716(t *testing.T) {
	result := operations.DivideBy8716(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8717(t *testing.T) {
	result := operations.DivideBy8717(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8718(t *testing.T) {
	result := operations.DivideBy8718(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8719(t *testing.T) {
	result := operations.DivideBy8719(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8720(t *testing.T) {
	result := operations.DivideBy8720(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8721(t *testing.T) {
	result := operations.DivideBy8721(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8722(t *testing.T) {
	result := operations.DivideBy8722(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8723(t *testing.T) {
	result := operations.DivideBy8723(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8724(t *testing.T) {
	result := operations.DivideBy8724(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8725(t *testing.T) {
	result := operations.DivideBy8725(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8726(t *testing.T) {
	result := operations.DivideBy8726(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8727(t *testing.T) {
	result := operations.DivideBy8727(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8728(t *testing.T) {
	result := operations.DivideBy8728(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8729(t *testing.T) {
	result := operations.DivideBy8729(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8730(t *testing.T) {
	result := operations.DivideBy8730(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8731(t *testing.T) {
	result := operations.DivideBy8731(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8732(t *testing.T) {
	result := operations.DivideBy8732(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8733(t *testing.T) {
	result := operations.DivideBy8733(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8734(t *testing.T) {
	result := operations.DivideBy8734(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8735(t *testing.T) {
	result := operations.DivideBy8735(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8736(t *testing.T) {
	result := operations.DivideBy8736(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8737(t *testing.T) {
	result := operations.DivideBy8737(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8738(t *testing.T) {
	result := operations.DivideBy8738(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8739(t *testing.T) {
	result := operations.DivideBy8739(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8740(t *testing.T) {
	result := operations.DivideBy8740(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8741(t *testing.T) {
	result := operations.DivideBy8741(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8742(t *testing.T) {
	result := operations.DivideBy8742(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8743(t *testing.T) {
	result := operations.DivideBy8743(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8744(t *testing.T) {
	result := operations.DivideBy8744(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8745(t *testing.T) {
	result := operations.DivideBy8745(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8746(t *testing.T) {
	result := operations.DivideBy8746(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8747(t *testing.T) {
	result := operations.DivideBy8747(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8748(t *testing.T) {
	result := operations.DivideBy8748(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8749(t *testing.T) {
	result := operations.DivideBy8749(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8750(t *testing.T) {
	result := operations.DivideBy8750(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8751(t *testing.T) {
	result := operations.DivideBy8751(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8752(t *testing.T) {
	result := operations.DivideBy8752(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8753(t *testing.T) {
	result := operations.DivideBy8753(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8754(t *testing.T) {
	result := operations.DivideBy8754(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8755(t *testing.T) {
	result := operations.DivideBy8755(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8756(t *testing.T) {
	result := operations.DivideBy8756(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8757(t *testing.T) {
	result := operations.DivideBy8757(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8758(t *testing.T) {
	result := operations.DivideBy8758(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8759(t *testing.T) {
	result := operations.DivideBy8759(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8760(t *testing.T) {
	result := operations.DivideBy8760(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8761(t *testing.T) {
	result := operations.DivideBy8761(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8762(t *testing.T) {
	result := operations.DivideBy8762(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8763(t *testing.T) {
	result := operations.DivideBy8763(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8764(t *testing.T) {
	result := operations.DivideBy8764(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8765(t *testing.T) {
	result := operations.DivideBy8765(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8766(t *testing.T) {
	result := operations.DivideBy8766(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8767(t *testing.T) {
	result := operations.DivideBy8767(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8768(t *testing.T) {
	result := operations.DivideBy8768(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8769(t *testing.T) {
	result := operations.DivideBy8769(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8770(t *testing.T) {
	result := operations.DivideBy8770(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8771(t *testing.T) {
	result := operations.DivideBy8771(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8772(t *testing.T) {
	result := operations.DivideBy8772(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8773(t *testing.T) {
	result := operations.DivideBy8773(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8774(t *testing.T) {
	result := operations.DivideBy8774(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8775(t *testing.T) {
	result := operations.DivideBy8775(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8776(t *testing.T) {
	result := operations.DivideBy8776(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8777(t *testing.T) {
	result := operations.DivideBy8777(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8778(t *testing.T) {
	result := operations.DivideBy8778(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8779(t *testing.T) {
	result := operations.DivideBy8779(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8780(t *testing.T) {
	result := operations.DivideBy8780(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8781(t *testing.T) {
	result := operations.DivideBy8781(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8782(t *testing.T) {
	result := operations.DivideBy8782(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8783(t *testing.T) {
	result := operations.DivideBy8783(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8784(t *testing.T) {
	result := operations.DivideBy8784(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8785(t *testing.T) {
	result := operations.DivideBy8785(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8786(t *testing.T) {
	result := operations.DivideBy8786(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8787(t *testing.T) {
	result := operations.DivideBy8787(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8788(t *testing.T) {
	result := operations.DivideBy8788(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8789(t *testing.T) {
	result := operations.DivideBy8789(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8790(t *testing.T) {
	result := operations.DivideBy8790(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8791(t *testing.T) {
	result := operations.DivideBy8791(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8792(t *testing.T) {
	result := operations.DivideBy8792(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8793(t *testing.T) {
	result := operations.DivideBy8793(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8794(t *testing.T) {
	result := operations.DivideBy8794(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8795(t *testing.T) {
	result := operations.DivideBy8795(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8796(t *testing.T) {
	result := operations.DivideBy8796(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8797(t *testing.T) {
	result := operations.DivideBy8797(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8798(t *testing.T) {
	result := operations.DivideBy8798(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8799(t *testing.T) {
	result := operations.DivideBy8799(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8800(t *testing.T) {
	result := operations.DivideBy8800(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8801(t *testing.T) {
	result := operations.DivideBy8801(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8802(t *testing.T) {
	result := operations.DivideBy8802(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8803(t *testing.T) {
	result := operations.DivideBy8803(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8804(t *testing.T) {
	result := operations.DivideBy8804(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8805(t *testing.T) {
	result := operations.DivideBy8805(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8806(t *testing.T) {
	result := operations.DivideBy8806(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8807(t *testing.T) {
	result := operations.DivideBy8807(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8808(t *testing.T) {
	result := operations.DivideBy8808(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8809(t *testing.T) {
	result := operations.DivideBy8809(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8810(t *testing.T) {
	result := operations.DivideBy8810(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8811(t *testing.T) {
	result := operations.DivideBy8811(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8812(t *testing.T) {
	result := operations.DivideBy8812(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8813(t *testing.T) {
	result := operations.DivideBy8813(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8814(t *testing.T) {
	result := operations.DivideBy8814(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8815(t *testing.T) {
	result := operations.DivideBy8815(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8816(t *testing.T) {
	result := operations.DivideBy8816(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8817(t *testing.T) {
	result := operations.DivideBy8817(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8818(t *testing.T) {
	result := operations.DivideBy8818(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8819(t *testing.T) {
	result := operations.DivideBy8819(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8820(t *testing.T) {
	result := operations.DivideBy8820(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8821(t *testing.T) {
	result := operations.DivideBy8821(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8822(t *testing.T) {
	result := operations.DivideBy8822(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8823(t *testing.T) {
	result := operations.DivideBy8823(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8824(t *testing.T) {
	result := operations.DivideBy8824(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8825(t *testing.T) {
	result := operations.DivideBy8825(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8826(t *testing.T) {
	result := operations.DivideBy8826(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8827(t *testing.T) {
	result := operations.DivideBy8827(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8828(t *testing.T) {
	result := operations.DivideBy8828(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8829(t *testing.T) {
	result := operations.DivideBy8829(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8830(t *testing.T) {
	result := operations.DivideBy8830(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8831(t *testing.T) {
	result := operations.DivideBy8831(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8832(t *testing.T) {
	result := operations.DivideBy8832(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8833(t *testing.T) {
	result := operations.DivideBy8833(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8834(t *testing.T) {
	result := operations.DivideBy8834(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8835(t *testing.T) {
	result := operations.DivideBy8835(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8836(t *testing.T) {
	result := operations.DivideBy8836(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8837(t *testing.T) {
	result := operations.DivideBy8837(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8838(t *testing.T) {
	result := operations.DivideBy8838(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8839(t *testing.T) {
	result := operations.DivideBy8839(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8840(t *testing.T) {
	result := operations.DivideBy8840(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8841(t *testing.T) {
	result := operations.DivideBy8841(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8842(t *testing.T) {
	result := operations.DivideBy8842(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8843(t *testing.T) {
	result := operations.DivideBy8843(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8844(t *testing.T) {
	result := operations.DivideBy8844(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8845(t *testing.T) {
	result := operations.DivideBy8845(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8846(t *testing.T) {
	result := operations.DivideBy8846(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8847(t *testing.T) {
	result := operations.DivideBy8847(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8848(t *testing.T) {
	result := operations.DivideBy8848(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8849(t *testing.T) {
	result := operations.DivideBy8849(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8850(t *testing.T) {
	result := operations.DivideBy8850(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8851(t *testing.T) {
	result := operations.DivideBy8851(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8852(t *testing.T) {
	result := operations.DivideBy8852(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8853(t *testing.T) {
	result := operations.DivideBy8853(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8854(t *testing.T) {
	result := operations.DivideBy8854(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8855(t *testing.T) {
	result := operations.DivideBy8855(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8856(t *testing.T) {
	result := operations.DivideBy8856(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8857(t *testing.T) {
	result := operations.DivideBy8857(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8858(t *testing.T) {
	result := operations.DivideBy8858(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8859(t *testing.T) {
	result := operations.DivideBy8859(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8860(t *testing.T) {
	result := operations.DivideBy8860(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8861(t *testing.T) {
	result := operations.DivideBy8861(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8862(t *testing.T) {
	result := operations.DivideBy8862(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8863(t *testing.T) {
	result := operations.DivideBy8863(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8864(t *testing.T) {
	result := operations.DivideBy8864(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8865(t *testing.T) {
	result := operations.DivideBy8865(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8866(t *testing.T) {
	result := operations.DivideBy8866(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8867(t *testing.T) {
	result := operations.DivideBy8867(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8868(t *testing.T) {
	result := operations.DivideBy8868(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8869(t *testing.T) {
	result := operations.DivideBy8869(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8870(t *testing.T) {
	result := operations.DivideBy8870(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8871(t *testing.T) {
	result := operations.DivideBy8871(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8872(t *testing.T) {
	result := operations.DivideBy8872(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8873(t *testing.T) {
	result := operations.DivideBy8873(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8874(t *testing.T) {
	result := operations.DivideBy8874(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8875(t *testing.T) {
	result := operations.DivideBy8875(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8876(t *testing.T) {
	result := operations.DivideBy8876(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8877(t *testing.T) {
	result := operations.DivideBy8877(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8878(t *testing.T) {
	result := operations.DivideBy8878(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8879(t *testing.T) {
	result := operations.DivideBy8879(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8880(t *testing.T) {
	result := operations.DivideBy8880(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8881(t *testing.T) {
	result := operations.DivideBy8881(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8882(t *testing.T) {
	result := operations.DivideBy8882(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8883(t *testing.T) {
	result := operations.DivideBy8883(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8884(t *testing.T) {
	result := operations.DivideBy8884(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8885(t *testing.T) {
	result := operations.DivideBy8885(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8886(t *testing.T) {
	result := operations.DivideBy8886(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8887(t *testing.T) {
	result := operations.DivideBy8887(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8888(t *testing.T) {
	result := operations.DivideBy8888(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8889(t *testing.T) {
	result := operations.DivideBy8889(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8890(t *testing.T) {
	result := operations.DivideBy8890(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8891(t *testing.T) {
	result := operations.DivideBy8891(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8892(t *testing.T) {
	result := operations.DivideBy8892(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8893(t *testing.T) {
	result := operations.DivideBy8893(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8894(t *testing.T) {
	result := operations.DivideBy8894(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8895(t *testing.T) {
	result := operations.DivideBy8895(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8896(t *testing.T) {
	result := operations.DivideBy8896(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8897(t *testing.T) {
	result := operations.DivideBy8897(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8898(t *testing.T) {
	result := operations.DivideBy8898(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8899(t *testing.T) {
	result := operations.DivideBy8899(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8900(t *testing.T) {
	result := operations.DivideBy8900(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8901(t *testing.T) {
	result := operations.DivideBy8901(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8902(t *testing.T) {
	result := operations.DivideBy8902(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8903(t *testing.T) {
	result := operations.DivideBy8903(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8904(t *testing.T) {
	result := operations.DivideBy8904(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8905(t *testing.T) {
	result := operations.DivideBy8905(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8906(t *testing.T) {
	result := operations.DivideBy8906(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8907(t *testing.T) {
	result := operations.DivideBy8907(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8908(t *testing.T) {
	result := operations.DivideBy8908(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8909(t *testing.T) {
	result := operations.DivideBy8909(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8910(t *testing.T) {
	result := operations.DivideBy8910(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8911(t *testing.T) {
	result := operations.DivideBy8911(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8912(t *testing.T) {
	result := operations.DivideBy8912(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8913(t *testing.T) {
	result := operations.DivideBy8913(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8914(t *testing.T) {
	result := operations.DivideBy8914(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8915(t *testing.T) {
	result := operations.DivideBy8915(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8916(t *testing.T) {
	result := operations.DivideBy8916(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8917(t *testing.T) {
	result := operations.DivideBy8917(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8918(t *testing.T) {
	result := operations.DivideBy8918(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8919(t *testing.T) {
	result := operations.DivideBy8919(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8920(t *testing.T) {
	result := operations.DivideBy8920(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8921(t *testing.T) {
	result := operations.DivideBy8921(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8922(t *testing.T) {
	result := operations.DivideBy8922(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8923(t *testing.T) {
	result := operations.DivideBy8923(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8924(t *testing.T) {
	result := operations.DivideBy8924(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8925(t *testing.T) {
	result := operations.DivideBy8925(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8926(t *testing.T) {
	result := operations.DivideBy8926(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8927(t *testing.T) {
	result := operations.DivideBy8927(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8928(t *testing.T) {
	result := operations.DivideBy8928(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8929(t *testing.T) {
	result := operations.DivideBy8929(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8930(t *testing.T) {
	result := operations.DivideBy8930(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8931(t *testing.T) {
	result := operations.DivideBy8931(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8932(t *testing.T) {
	result := operations.DivideBy8932(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8933(t *testing.T) {
	result := operations.DivideBy8933(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8934(t *testing.T) {
	result := operations.DivideBy8934(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8935(t *testing.T) {
	result := operations.DivideBy8935(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8936(t *testing.T) {
	result := operations.DivideBy8936(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8937(t *testing.T) {
	result := operations.DivideBy8937(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8938(t *testing.T) {
	result := operations.DivideBy8938(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8939(t *testing.T) {
	result := operations.DivideBy8939(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8940(t *testing.T) {
	result := operations.DivideBy8940(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8941(t *testing.T) {
	result := operations.DivideBy8941(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8942(t *testing.T) {
	result := operations.DivideBy8942(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8943(t *testing.T) {
	result := operations.DivideBy8943(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8944(t *testing.T) {
	result := operations.DivideBy8944(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8945(t *testing.T) {
	result := operations.DivideBy8945(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8946(t *testing.T) {
	result := operations.DivideBy8946(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8947(t *testing.T) {
	result := operations.DivideBy8947(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8948(t *testing.T) {
	result := operations.DivideBy8948(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8949(t *testing.T) {
	result := operations.DivideBy8949(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8950(t *testing.T) {
	result := operations.DivideBy8950(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8951(t *testing.T) {
	result := operations.DivideBy8951(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8952(t *testing.T) {
	result := operations.DivideBy8952(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8953(t *testing.T) {
	result := operations.DivideBy8953(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8954(t *testing.T) {
	result := operations.DivideBy8954(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8955(t *testing.T) {
	result := operations.DivideBy8955(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8956(t *testing.T) {
	result := operations.DivideBy8956(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8957(t *testing.T) {
	result := operations.DivideBy8957(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8958(t *testing.T) {
	result := operations.DivideBy8958(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8959(t *testing.T) {
	result := operations.DivideBy8959(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8960(t *testing.T) {
	result := operations.DivideBy8960(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8961(t *testing.T) {
	result := operations.DivideBy8961(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8962(t *testing.T) {
	result := operations.DivideBy8962(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8963(t *testing.T) {
	result := operations.DivideBy8963(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8964(t *testing.T) {
	result := operations.DivideBy8964(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8965(t *testing.T) {
	result := operations.DivideBy8965(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8966(t *testing.T) {
	result := operations.DivideBy8966(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8967(t *testing.T) {
	result := operations.DivideBy8967(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8968(t *testing.T) {
	result := operations.DivideBy8968(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8969(t *testing.T) {
	result := operations.DivideBy8969(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8970(t *testing.T) {
	result := operations.DivideBy8970(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8971(t *testing.T) {
	result := operations.DivideBy8971(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8972(t *testing.T) {
	result := operations.DivideBy8972(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8973(t *testing.T) {
	result := operations.DivideBy8973(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8974(t *testing.T) {
	result := operations.DivideBy8974(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8975(t *testing.T) {
	result := operations.DivideBy8975(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8976(t *testing.T) {
	result := operations.DivideBy8976(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8977(t *testing.T) {
	result := operations.DivideBy8977(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8978(t *testing.T) {
	result := operations.DivideBy8978(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8979(t *testing.T) {
	result := operations.DivideBy8979(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8980(t *testing.T) {
	result := operations.DivideBy8980(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8981(t *testing.T) {
	result := operations.DivideBy8981(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8982(t *testing.T) {
	result := operations.DivideBy8982(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8983(t *testing.T) {
	result := operations.DivideBy8983(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8984(t *testing.T) {
	result := operations.DivideBy8984(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8985(t *testing.T) {
	result := operations.DivideBy8985(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8986(t *testing.T) {
	result := operations.DivideBy8986(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8987(t *testing.T) {
	result := operations.DivideBy8987(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8988(t *testing.T) {
	result := operations.DivideBy8988(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8989(t *testing.T) {
	result := operations.DivideBy8989(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8990(t *testing.T) {
	result := operations.DivideBy8990(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8991(t *testing.T) {
	result := operations.DivideBy8991(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8992(t *testing.T) {
	result := operations.DivideBy8992(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8993(t *testing.T) {
	result := operations.DivideBy8993(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8994(t *testing.T) {
	result := operations.DivideBy8994(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8995(t *testing.T) {
	result := operations.DivideBy8995(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8996(t *testing.T) {
	result := operations.DivideBy8996(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8997(t *testing.T) {
	result := operations.DivideBy8997(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8998(t *testing.T) {
	result := operations.DivideBy8998(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy8999(t *testing.T) {
	result := operations.DivideBy8999(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9000(t *testing.T) {
	result := operations.DivideBy9000(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9001(t *testing.T) {
	result := operations.DivideBy9001(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9002(t *testing.T) {
	result := operations.DivideBy9002(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9003(t *testing.T) {
	result := operations.DivideBy9003(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9004(t *testing.T) {
	result := operations.DivideBy9004(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9005(t *testing.T) {
	result := operations.DivideBy9005(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9006(t *testing.T) {
	result := operations.DivideBy9006(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9007(t *testing.T) {
	result := operations.DivideBy9007(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9008(t *testing.T) {
	result := operations.DivideBy9008(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9009(t *testing.T) {
	result := operations.DivideBy9009(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9010(t *testing.T) {
	result := operations.DivideBy9010(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9011(t *testing.T) {
	result := operations.DivideBy9011(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9012(t *testing.T) {
	result := operations.DivideBy9012(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9013(t *testing.T) {
	result := operations.DivideBy9013(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9014(t *testing.T) {
	result := operations.DivideBy9014(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9015(t *testing.T) {
	result := operations.DivideBy9015(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9016(t *testing.T) {
	result := operations.DivideBy9016(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9017(t *testing.T) {
	result := operations.DivideBy9017(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9018(t *testing.T) {
	result := operations.DivideBy9018(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9019(t *testing.T) {
	result := operations.DivideBy9019(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9020(t *testing.T) {
	result := operations.DivideBy9020(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9021(t *testing.T) {
	result := operations.DivideBy9021(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9022(t *testing.T) {
	result := operations.DivideBy9022(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9023(t *testing.T) {
	result := operations.DivideBy9023(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9024(t *testing.T) {
	result := operations.DivideBy9024(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9025(t *testing.T) {
	result := operations.DivideBy9025(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9026(t *testing.T) {
	result := operations.DivideBy9026(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9027(t *testing.T) {
	result := operations.DivideBy9027(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9028(t *testing.T) {
	result := operations.DivideBy9028(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9029(t *testing.T) {
	result := operations.DivideBy9029(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9030(t *testing.T) {
	result := operations.DivideBy9030(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9031(t *testing.T) {
	result := operations.DivideBy9031(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9032(t *testing.T) {
	result := operations.DivideBy9032(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9033(t *testing.T) {
	result := operations.DivideBy9033(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9034(t *testing.T) {
	result := operations.DivideBy9034(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9035(t *testing.T) {
	result := operations.DivideBy9035(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9036(t *testing.T) {
	result := operations.DivideBy9036(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9037(t *testing.T) {
	result := operations.DivideBy9037(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9038(t *testing.T) {
	result := operations.DivideBy9038(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9039(t *testing.T) {
	result := operations.DivideBy9039(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9040(t *testing.T) {
	result := operations.DivideBy9040(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9041(t *testing.T) {
	result := operations.DivideBy9041(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9042(t *testing.T) {
	result := operations.DivideBy9042(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9043(t *testing.T) {
	result := operations.DivideBy9043(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9044(t *testing.T) {
	result := operations.DivideBy9044(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9045(t *testing.T) {
	result := operations.DivideBy9045(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9046(t *testing.T) {
	result := operations.DivideBy9046(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9047(t *testing.T) {
	result := operations.DivideBy9047(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9048(t *testing.T) {
	result := operations.DivideBy9048(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9049(t *testing.T) {
	result := operations.DivideBy9049(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9050(t *testing.T) {
	result := operations.DivideBy9050(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9051(t *testing.T) {
	result := operations.DivideBy9051(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9052(t *testing.T) {
	result := operations.DivideBy9052(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9053(t *testing.T) {
	result := operations.DivideBy9053(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9054(t *testing.T) {
	result := operations.DivideBy9054(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9055(t *testing.T) {
	result := operations.DivideBy9055(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9056(t *testing.T) {
	result := operations.DivideBy9056(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9057(t *testing.T) {
	result := operations.DivideBy9057(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9058(t *testing.T) {
	result := operations.DivideBy9058(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9059(t *testing.T) {
	result := operations.DivideBy9059(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9060(t *testing.T) {
	result := operations.DivideBy9060(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9061(t *testing.T) {
	result := operations.DivideBy9061(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9062(t *testing.T) {
	result := operations.DivideBy9062(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9063(t *testing.T) {
	result := operations.DivideBy9063(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9064(t *testing.T) {
	result := operations.DivideBy9064(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9065(t *testing.T) {
	result := operations.DivideBy9065(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9066(t *testing.T) {
	result := operations.DivideBy9066(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9067(t *testing.T) {
	result := operations.DivideBy9067(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9068(t *testing.T) {
	result := operations.DivideBy9068(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9069(t *testing.T) {
	result := operations.DivideBy9069(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9070(t *testing.T) {
	result := operations.DivideBy9070(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9071(t *testing.T) {
	result := operations.DivideBy9071(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9072(t *testing.T) {
	result := operations.DivideBy9072(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9073(t *testing.T) {
	result := operations.DivideBy9073(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9074(t *testing.T) {
	result := operations.DivideBy9074(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9075(t *testing.T) {
	result := operations.DivideBy9075(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9076(t *testing.T) {
	result := operations.DivideBy9076(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9077(t *testing.T) {
	result := operations.DivideBy9077(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9078(t *testing.T) {
	result := operations.DivideBy9078(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9079(t *testing.T) {
	result := operations.DivideBy9079(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9080(t *testing.T) {
	result := operations.DivideBy9080(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9081(t *testing.T) {
	result := operations.DivideBy9081(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9082(t *testing.T) {
	result := operations.DivideBy9082(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9083(t *testing.T) {
	result := operations.DivideBy9083(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9084(t *testing.T) {
	result := operations.DivideBy9084(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9085(t *testing.T) {
	result := operations.DivideBy9085(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9086(t *testing.T) {
	result := operations.DivideBy9086(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9087(t *testing.T) {
	result := operations.DivideBy9087(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9088(t *testing.T) {
	result := operations.DivideBy9088(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9089(t *testing.T) {
	result := operations.DivideBy9089(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9090(t *testing.T) {
	result := operations.DivideBy9090(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9091(t *testing.T) {
	result := operations.DivideBy9091(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9092(t *testing.T) {
	result := operations.DivideBy9092(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9093(t *testing.T) {
	result := operations.DivideBy9093(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9094(t *testing.T) {
	result := operations.DivideBy9094(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9095(t *testing.T) {
	result := operations.DivideBy9095(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9096(t *testing.T) {
	result := operations.DivideBy9096(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9097(t *testing.T) {
	result := operations.DivideBy9097(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9098(t *testing.T) {
	result := operations.DivideBy9098(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9099(t *testing.T) {
	result := operations.DivideBy9099(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9100(t *testing.T) {
	result := operations.DivideBy9100(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9101(t *testing.T) {
	result := operations.DivideBy9101(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9102(t *testing.T) {
	result := operations.DivideBy9102(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9103(t *testing.T) {
	result := operations.DivideBy9103(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9104(t *testing.T) {
	result := operations.DivideBy9104(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9105(t *testing.T) {
	result := operations.DivideBy9105(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9106(t *testing.T) {
	result := operations.DivideBy9106(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9107(t *testing.T) {
	result := operations.DivideBy9107(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9108(t *testing.T) {
	result := operations.DivideBy9108(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9109(t *testing.T) {
	result := operations.DivideBy9109(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9110(t *testing.T) {
	result := operations.DivideBy9110(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9111(t *testing.T) {
	result := operations.DivideBy9111(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9112(t *testing.T) {
	result := operations.DivideBy9112(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9113(t *testing.T) {
	result := operations.DivideBy9113(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9114(t *testing.T) {
	result := operations.DivideBy9114(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9115(t *testing.T) {
	result := operations.DivideBy9115(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9116(t *testing.T) {
	result := operations.DivideBy9116(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9117(t *testing.T) {
	result := operations.DivideBy9117(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9118(t *testing.T) {
	result := operations.DivideBy9118(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9119(t *testing.T) {
	result := operations.DivideBy9119(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9120(t *testing.T) {
	result := operations.DivideBy9120(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9121(t *testing.T) {
	result := operations.DivideBy9121(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9122(t *testing.T) {
	result := operations.DivideBy9122(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9123(t *testing.T) {
	result := operations.DivideBy9123(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9124(t *testing.T) {
	result := operations.DivideBy9124(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9125(t *testing.T) {
	result := operations.DivideBy9125(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9126(t *testing.T) {
	result := operations.DivideBy9126(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9127(t *testing.T) {
	result := operations.DivideBy9127(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9128(t *testing.T) {
	result := operations.DivideBy9128(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9129(t *testing.T) {
	result := operations.DivideBy9129(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9130(t *testing.T) {
	result := operations.DivideBy9130(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9131(t *testing.T) {
	result := operations.DivideBy9131(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9132(t *testing.T) {
	result := operations.DivideBy9132(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9133(t *testing.T) {
	result := operations.DivideBy9133(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9134(t *testing.T) {
	result := operations.DivideBy9134(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9135(t *testing.T) {
	result := operations.DivideBy9135(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9136(t *testing.T) {
	result := operations.DivideBy9136(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9137(t *testing.T) {
	result := operations.DivideBy9137(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9138(t *testing.T) {
	result := operations.DivideBy9138(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9139(t *testing.T) {
	result := operations.DivideBy9139(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9140(t *testing.T) {
	result := operations.DivideBy9140(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9141(t *testing.T) {
	result := operations.DivideBy9141(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9142(t *testing.T) {
	result := operations.DivideBy9142(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9143(t *testing.T) {
	result := operations.DivideBy9143(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9144(t *testing.T) {
	result := operations.DivideBy9144(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9145(t *testing.T) {
	result := operations.DivideBy9145(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9146(t *testing.T) {
	result := operations.DivideBy9146(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9147(t *testing.T) {
	result := operations.DivideBy9147(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9148(t *testing.T) {
	result := operations.DivideBy9148(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9149(t *testing.T) {
	result := operations.DivideBy9149(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9150(t *testing.T) {
	result := operations.DivideBy9150(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9151(t *testing.T) {
	result := operations.DivideBy9151(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9152(t *testing.T) {
	result := operations.DivideBy9152(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9153(t *testing.T) {
	result := operations.DivideBy9153(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9154(t *testing.T) {
	result := operations.DivideBy9154(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9155(t *testing.T) {
	result := operations.DivideBy9155(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9156(t *testing.T) {
	result := operations.DivideBy9156(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9157(t *testing.T) {
	result := operations.DivideBy9157(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9158(t *testing.T) {
	result := operations.DivideBy9158(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9159(t *testing.T) {
	result := operations.DivideBy9159(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9160(t *testing.T) {
	result := operations.DivideBy9160(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9161(t *testing.T) {
	result := operations.DivideBy9161(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9162(t *testing.T) {
	result := operations.DivideBy9162(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9163(t *testing.T) {
	result := operations.DivideBy9163(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9164(t *testing.T) {
	result := operations.DivideBy9164(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9165(t *testing.T) {
	result := operations.DivideBy9165(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9166(t *testing.T) {
	result := operations.DivideBy9166(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9167(t *testing.T) {
	result := operations.DivideBy9167(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9168(t *testing.T) {
	result := operations.DivideBy9168(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9169(t *testing.T) {
	result := operations.DivideBy9169(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9170(t *testing.T) {
	result := operations.DivideBy9170(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9171(t *testing.T) {
	result := operations.DivideBy9171(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9172(t *testing.T) {
	result := operations.DivideBy9172(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9173(t *testing.T) {
	result := operations.DivideBy9173(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9174(t *testing.T) {
	result := operations.DivideBy9174(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9175(t *testing.T) {
	result := operations.DivideBy9175(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9176(t *testing.T) {
	result := operations.DivideBy9176(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9177(t *testing.T) {
	result := operations.DivideBy9177(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9178(t *testing.T) {
	result := operations.DivideBy9178(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9179(t *testing.T) {
	result := operations.DivideBy9179(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9180(t *testing.T) {
	result := operations.DivideBy9180(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9181(t *testing.T) {
	result := operations.DivideBy9181(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9182(t *testing.T) {
	result := operations.DivideBy9182(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9183(t *testing.T) {
	result := operations.DivideBy9183(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9184(t *testing.T) {
	result := operations.DivideBy9184(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9185(t *testing.T) {
	result := operations.DivideBy9185(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9186(t *testing.T) {
	result := operations.DivideBy9186(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9187(t *testing.T) {
	result := operations.DivideBy9187(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9188(t *testing.T) {
	result := operations.DivideBy9188(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9189(t *testing.T) {
	result := operations.DivideBy9189(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9190(t *testing.T) {
	result := operations.DivideBy9190(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9191(t *testing.T) {
	result := operations.DivideBy9191(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9192(t *testing.T) {
	result := operations.DivideBy9192(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9193(t *testing.T) {
	result := operations.DivideBy9193(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9194(t *testing.T) {
	result := operations.DivideBy9194(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9195(t *testing.T) {
	result := operations.DivideBy9195(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9196(t *testing.T) {
	result := operations.DivideBy9196(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9197(t *testing.T) {
	result := operations.DivideBy9197(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9198(t *testing.T) {
	result := operations.DivideBy9198(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9199(t *testing.T) {
	result := operations.DivideBy9199(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9200(t *testing.T) {
	result := operations.DivideBy9200(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9201(t *testing.T) {
	result := operations.DivideBy9201(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9202(t *testing.T) {
	result := operations.DivideBy9202(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9203(t *testing.T) {
	result := operations.DivideBy9203(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9204(t *testing.T) {
	result := operations.DivideBy9204(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9205(t *testing.T) {
	result := operations.DivideBy9205(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9206(t *testing.T) {
	result := operations.DivideBy9206(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9207(t *testing.T) {
	result := operations.DivideBy9207(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9208(t *testing.T) {
	result := operations.DivideBy9208(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9209(t *testing.T) {
	result := operations.DivideBy9209(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9210(t *testing.T) {
	result := operations.DivideBy9210(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9211(t *testing.T) {
	result := operations.DivideBy9211(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9212(t *testing.T) {
	result := operations.DivideBy9212(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9213(t *testing.T) {
	result := operations.DivideBy9213(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9214(t *testing.T) {
	result := operations.DivideBy9214(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9215(t *testing.T) {
	result := operations.DivideBy9215(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9216(t *testing.T) {
	result := operations.DivideBy9216(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9217(t *testing.T) {
	result := operations.DivideBy9217(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9218(t *testing.T) {
	result := operations.DivideBy9218(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9219(t *testing.T) {
	result := operations.DivideBy9219(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9220(t *testing.T) {
	result := operations.DivideBy9220(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9221(t *testing.T) {
	result := operations.DivideBy9221(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9222(t *testing.T) {
	result := operations.DivideBy9222(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9223(t *testing.T) {
	result := operations.DivideBy9223(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9224(t *testing.T) {
	result := operations.DivideBy9224(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9225(t *testing.T) {
	result := operations.DivideBy9225(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9226(t *testing.T) {
	result := operations.DivideBy9226(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9227(t *testing.T) {
	result := operations.DivideBy9227(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9228(t *testing.T) {
	result := operations.DivideBy9228(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9229(t *testing.T) {
	result := operations.DivideBy9229(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9230(t *testing.T) {
	result := operations.DivideBy9230(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9231(t *testing.T) {
	result := operations.DivideBy9231(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9232(t *testing.T) {
	result := operations.DivideBy9232(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9233(t *testing.T) {
	result := operations.DivideBy9233(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9234(t *testing.T) {
	result := operations.DivideBy9234(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9235(t *testing.T) {
	result := operations.DivideBy9235(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9236(t *testing.T) {
	result := operations.DivideBy9236(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9237(t *testing.T) {
	result := operations.DivideBy9237(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9238(t *testing.T) {
	result := operations.DivideBy9238(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9239(t *testing.T) {
	result := operations.DivideBy9239(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9240(t *testing.T) {
	result := operations.DivideBy9240(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9241(t *testing.T) {
	result := operations.DivideBy9241(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9242(t *testing.T) {
	result := operations.DivideBy9242(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9243(t *testing.T) {
	result := operations.DivideBy9243(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9244(t *testing.T) {
	result := operations.DivideBy9244(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9245(t *testing.T) {
	result := operations.DivideBy9245(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9246(t *testing.T) {
	result := operations.DivideBy9246(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9247(t *testing.T) {
	result := operations.DivideBy9247(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9248(t *testing.T) {
	result := operations.DivideBy9248(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9249(t *testing.T) {
	result := operations.DivideBy9249(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9250(t *testing.T) {
	result := operations.DivideBy9250(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9251(t *testing.T) {
	result := operations.DivideBy9251(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9252(t *testing.T) {
	result := operations.DivideBy9252(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9253(t *testing.T) {
	result := operations.DivideBy9253(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9254(t *testing.T) {
	result := operations.DivideBy9254(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9255(t *testing.T) {
	result := operations.DivideBy9255(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9256(t *testing.T) {
	result := operations.DivideBy9256(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9257(t *testing.T) {
	result := operations.DivideBy9257(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9258(t *testing.T) {
	result := operations.DivideBy9258(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9259(t *testing.T) {
	result := operations.DivideBy9259(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9260(t *testing.T) {
	result := operations.DivideBy9260(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9261(t *testing.T) {
	result := operations.DivideBy9261(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9262(t *testing.T) {
	result := operations.DivideBy9262(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9263(t *testing.T) {
	result := operations.DivideBy9263(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9264(t *testing.T) {
	result := operations.DivideBy9264(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9265(t *testing.T) {
	result := operations.DivideBy9265(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9266(t *testing.T) {
	result := operations.DivideBy9266(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9267(t *testing.T) {
	result := operations.DivideBy9267(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9268(t *testing.T) {
	result := operations.DivideBy9268(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9269(t *testing.T) {
	result := operations.DivideBy9269(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9270(t *testing.T) {
	result := operations.DivideBy9270(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9271(t *testing.T) {
	result := operations.DivideBy9271(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9272(t *testing.T) {
	result := operations.DivideBy9272(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9273(t *testing.T) {
	result := operations.DivideBy9273(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9274(t *testing.T) {
	result := operations.DivideBy9274(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9275(t *testing.T) {
	result := operations.DivideBy9275(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9276(t *testing.T) {
	result := operations.DivideBy9276(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9277(t *testing.T) {
	result := operations.DivideBy9277(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9278(t *testing.T) {
	result := operations.DivideBy9278(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9279(t *testing.T) {
	result := operations.DivideBy9279(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9280(t *testing.T) {
	result := operations.DivideBy9280(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9281(t *testing.T) {
	result := operations.DivideBy9281(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9282(t *testing.T) {
	result := operations.DivideBy9282(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9283(t *testing.T) {
	result := operations.DivideBy9283(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9284(t *testing.T) {
	result := operations.DivideBy9284(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9285(t *testing.T) {
	result := operations.DivideBy9285(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9286(t *testing.T) {
	result := operations.DivideBy9286(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9287(t *testing.T) {
	result := operations.DivideBy9287(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9288(t *testing.T) {
	result := operations.DivideBy9288(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9289(t *testing.T) {
	result := operations.DivideBy9289(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9290(t *testing.T) {
	result := operations.DivideBy9290(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9291(t *testing.T) {
	result := operations.DivideBy9291(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9292(t *testing.T) {
	result := operations.DivideBy9292(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9293(t *testing.T) {
	result := operations.DivideBy9293(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9294(t *testing.T) {
	result := operations.DivideBy9294(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9295(t *testing.T) {
	result := operations.DivideBy9295(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9296(t *testing.T) {
	result := operations.DivideBy9296(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9297(t *testing.T) {
	result := operations.DivideBy9297(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9298(t *testing.T) {
	result := operations.DivideBy9298(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9299(t *testing.T) {
	result := operations.DivideBy9299(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9300(t *testing.T) {
	result := operations.DivideBy9300(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9301(t *testing.T) {
	result := operations.DivideBy9301(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9302(t *testing.T) {
	result := operations.DivideBy9302(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9303(t *testing.T) {
	result := operations.DivideBy9303(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9304(t *testing.T) {
	result := operations.DivideBy9304(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9305(t *testing.T) {
	result := operations.DivideBy9305(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9306(t *testing.T) {
	result := operations.DivideBy9306(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9307(t *testing.T) {
	result := operations.DivideBy9307(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9308(t *testing.T) {
	result := operations.DivideBy9308(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9309(t *testing.T) {
	result := operations.DivideBy9309(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9310(t *testing.T) {
	result := operations.DivideBy9310(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9311(t *testing.T) {
	result := operations.DivideBy9311(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9312(t *testing.T) {
	result := operations.DivideBy9312(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9313(t *testing.T) {
	result := operations.DivideBy9313(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9314(t *testing.T) {
	result := operations.DivideBy9314(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9315(t *testing.T) {
	result := operations.DivideBy9315(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9316(t *testing.T) {
	result := operations.DivideBy9316(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9317(t *testing.T) {
	result := operations.DivideBy9317(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9318(t *testing.T) {
	result := operations.DivideBy9318(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9319(t *testing.T) {
	result := operations.DivideBy9319(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9320(t *testing.T) {
	result := operations.DivideBy9320(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9321(t *testing.T) {
	result := operations.DivideBy9321(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9322(t *testing.T) {
	result := operations.DivideBy9322(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9323(t *testing.T) {
	result := operations.DivideBy9323(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9324(t *testing.T) {
	result := operations.DivideBy9324(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9325(t *testing.T) {
	result := operations.DivideBy9325(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9326(t *testing.T) {
	result := operations.DivideBy9326(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9327(t *testing.T) {
	result := operations.DivideBy9327(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9328(t *testing.T) {
	result := operations.DivideBy9328(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9329(t *testing.T) {
	result := operations.DivideBy9329(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9330(t *testing.T) {
	result := operations.DivideBy9330(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9331(t *testing.T) {
	result := operations.DivideBy9331(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9332(t *testing.T) {
	result := operations.DivideBy9332(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9333(t *testing.T) {
	result := operations.DivideBy9333(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9334(t *testing.T) {
	result := operations.DivideBy9334(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9335(t *testing.T) {
	result := operations.DivideBy9335(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9336(t *testing.T) {
	result := operations.DivideBy9336(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9337(t *testing.T) {
	result := operations.DivideBy9337(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9338(t *testing.T) {
	result := operations.DivideBy9338(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9339(t *testing.T) {
	result := operations.DivideBy9339(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9340(t *testing.T) {
	result := operations.DivideBy9340(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9341(t *testing.T) {
	result := operations.DivideBy9341(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9342(t *testing.T) {
	result := operations.DivideBy9342(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9343(t *testing.T) {
	result := operations.DivideBy9343(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9344(t *testing.T) {
	result := operations.DivideBy9344(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9345(t *testing.T) {
	result := operations.DivideBy9345(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9346(t *testing.T) {
	result := operations.DivideBy9346(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9347(t *testing.T) {
	result := operations.DivideBy9347(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9348(t *testing.T) {
	result := operations.DivideBy9348(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9349(t *testing.T) {
	result := operations.DivideBy9349(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9350(t *testing.T) {
	result := operations.DivideBy9350(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9351(t *testing.T) {
	result := operations.DivideBy9351(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9352(t *testing.T) {
	result := operations.DivideBy9352(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9353(t *testing.T) {
	result := operations.DivideBy9353(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9354(t *testing.T) {
	result := operations.DivideBy9354(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9355(t *testing.T) {
	result := operations.DivideBy9355(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9356(t *testing.T) {
	result := operations.DivideBy9356(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9357(t *testing.T) {
	result := operations.DivideBy9357(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9358(t *testing.T) {
	result := operations.DivideBy9358(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9359(t *testing.T) {
	result := operations.DivideBy9359(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9360(t *testing.T) {
	result := operations.DivideBy9360(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9361(t *testing.T) {
	result := operations.DivideBy9361(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9362(t *testing.T) {
	result := operations.DivideBy9362(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9363(t *testing.T) {
	result := operations.DivideBy9363(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9364(t *testing.T) {
	result := operations.DivideBy9364(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9365(t *testing.T) {
	result := operations.DivideBy9365(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9366(t *testing.T) {
	result := operations.DivideBy9366(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9367(t *testing.T) {
	result := operations.DivideBy9367(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9368(t *testing.T) {
	result := operations.DivideBy9368(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9369(t *testing.T) {
	result := operations.DivideBy9369(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9370(t *testing.T) {
	result := operations.DivideBy9370(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9371(t *testing.T) {
	result := operations.DivideBy9371(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9372(t *testing.T) {
	result := operations.DivideBy9372(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9373(t *testing.T) {
	result := operations.DivideBy9373(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9374(t *testing.T) {
	result := operations.DivideBy9374(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9375(t *testing.T) {
	result := operations.DivideBy9375(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9376(t *testing.T) {
	result := operations.DivideBy9376(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9377(t *testing.T) {
	result := operations.DivideBy9377(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9378(t *testing.T) {
	result := operations.DivideBy9378(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9379(t *testing.T) {
	result := operations.DivideBy9379(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9380(t *testing.T) {
	result := operations.DivideBy9380(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9381(t *testing.T) {
	result := operations.DivideBy9381(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9382(t *testing.T) {
	result := operations.DivideBy9382(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9383(t *testing.T) {
	result := operations.DivideBy9383(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9384(t *testing.T) {
	result := operations.DivideBy9384(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9385(t *testing.T) {
	result := operations.DivideBy9385(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9386(t *testing.T) {
	result := operations.DivideBy9386(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9387(t *testing.T) {
	result := operations.DivideBy9387(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9388(t *testing.T) {
	result := operations.DivideBy9388(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9389(t *testing.T) {
	result := operations.DivideBy9389(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9390(t *testing.T) {
	result := operations.DivideBy9390(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9391(t *testing.T) {
	result := operations.DivideBy9391(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9392(t *testing.T) {
	result := operations.DivideBy9392(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9393(t *testing.T) {
	result := operations.DivideBy9393(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9394(t *testing.T) {
	result := operations.DivideBy9394(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9395(t *testing.T) {
	result := operations.DivideBy9395(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9396(t *testing.T) {
	result := operations.DivideBy9396(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9397(t *testing.T) {
	result := operations.DivideBy9397(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9398(t *testing.T) {
	result := operations.DivideBy9398(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9399(t *testing.T) {
	result := operations.DivideBy9399(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9400(t *testing.T) {
	result := operations.DivideBy9400(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9401(t *testing.T) {
	result := operations.DivideBy9401(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9402(t *testing.T) {
	result := operations.DivideBy9402(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9403(t *testing.T) {
	result := operations.DivideBy9403(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9404(t *testing.T) {
	result := operations.DivideBy9404(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9405(t *testing.T) {
	result := operations.DivideBy9405(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9406(t *testing.T) {
	result := operations.DivideBy9406(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9407(t *testing.T) {
	result := operations.DivideBy9407(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9408(t *testing.T) {
	result := operations.DivideBy9408(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9409(t *testing.T) {
	result := operations.DivideBy9409(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9410(t *testing.T) {
	result := operations.DivideBy9410(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9411(t *testing.T) {
	result := operations.DivideBy9411(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9412(t *testing.T) {
	result := operations.DivideBy9412(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9413(t *testing.T) {
	result := operations.DivideBy9413(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9414(t *testing.T) {
	result := operations.DivideBy9414(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9415(t *testing.T) {
	result := operations.DivideBy9415(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9416(t *testing.T) {
	result := operations.DivideBy9416(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9417(t *testing.T) {
	result := operations.DivideBy9417(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9418(t *testing.T) {
	result := operations.DivideBy9418(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9419(t *testing.T) {
	result := operations.DivideBy9419(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9420(t *testing.T) {
	result := operations.DivideBy9420(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9421(t *testing.T) {
	result := operations.DivideBy9421(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9422(t *testing.T) {
	result := operations.DivideBy9422(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9423(t *testing.T) {
	result := operations.DivideBy9423(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9424(t *testing.T) {
	result := operations.DivideBy9424(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9425(t *testing.T) {
	result := operations.DivideBy9425(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9426(t *testing.T) {
	result := operations.DivideBy9426(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9427(t *testing.T) {
	result := operations.DivideBy9427(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9428(t *testing.T) {
	result := operations.DivideBy9428(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9429(t *testing.T) {
	result := operations.DivideBy9429(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9430(t *testing.T) {
	result := operations.DivideBy9430(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9431(t *testing.T) {
	result := operations.DivideBy9431(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9432(t *testing.T) {
	result := operations.DivideBy9432(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9433(t *testing.T) {
	result := operations.DivideBy9433(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9434(t *testing.T) {
	result := operations.DivideBy9434(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9435(t *testing.T) {
	result := operations.DivideBy9435(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9436(t *testing.T) {
	result := operations.DivideBy9436(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9437(t *testing.T) {
	result := operations.DivideBy9437(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9438(t *testing.T) {
	result := operations.DivideBy9438(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9439(t *testing.T) {
	result := operations.DivideBy9439(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9440(t *testing.T) {
	result := operations.DivideBy9440(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9441(t *testing.T) {
	result := operations.DivideBy9441(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9442(t *testing.T) {
	result := operations.DivideBy9442(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9443(t *testing.T) {
	result := operations.DivideBy9443(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9444(t *testing.T) {
	result := operations.DivideBy9444(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9445(t *testing.T) {
	result := operations.DivideBy9445(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9446(t *testing.T) {
	result := operations.DivideBy9446(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9447(t *testing.T) {
	result := operations.DivideBy9447(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9448(t *testing.T) {
	result := operations.DivideBy9448(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9449(t *testing.T) {
	result := operations.DivideBy9449(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9450(t *testing.T) {
	result := operations.DivideBy9450(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9451(t *testing.T) {
	result := operations.DivideBy9451(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9452(t *testing.T) {
	result := operations.DivideBy9452(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9453(t *testing.T) {
	result := operations.DivideBy9453(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9454(t *testing.T) {
	result := operations.DivideBy9454(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9455(t *testing.T) {
	result := operations.DivideBy9455(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9456(t *testing.T) {
	result := operations.DivideBy9456(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9457(t *testing.T) {
	result := operations.DivideBy9457(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9458(t *testing.T) {
	result := operations.DivideBy9458(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9459(t *testing.T) {
	result := operations.DivideBy9459(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9460(t *testing.T) {
	result := operations.DivideBy9460(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9461(t *testing.T) {
	result := operations.DivideBy9461(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9462(t *testing.T) {
	result := operations.DivideBy9462(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9463(t *testing.T) {
	result := operations.DivideBy9463(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9464(t *testing.T) {
	result := operations.DivideBy9464(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9465(t *testing.T) {
	result := operations.DivideBy9465(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9466(t *testing.T) {
	result := operations.DivideBy9466(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9467(t *testing.T) {
	result := operations.DivideBy9467(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9468(t *testing.T) {
	result := operations.DivideBy9468(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9469(t *testing.T) {
	result := operations.DivideBy9469(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9470(t *testing.T) {
	result := operations.DivideBy9470(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9471(t *testing.T) {
	result := operations.DivideBy9471(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9472(t *testing.T) {
	result := operations.DivideBy9472(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9473(t *testing.T) {
	result := operations.DivideBy9473(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9474(t *testing.T) {
	result := operations.DivideBy9474(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9475(t *testing.T) {
	result := operations.DivideBy9475(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9476(t *testing.T) {
	result := operations.DivideBy9476(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9477(t *testing.T) {
	result := operations.DivideBy9477(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9478(t *testing.T) {
	result := operations.DivideBy9478(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9479(t *testing.T) {
	result := operations.DivideBy9479(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9480(t *testing.T) {
	result := operations.DivideBy9480(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9481(t *testing.T) {
	result := operations.DivideBy9481(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9482(t *testing.T) {
	result := operations.DivideBy9482(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9483(t *testing.T) {
	result := operations.DivideBy9483(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9484(t *testing.T) {
	result := operations.DivideBy9484(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9485(t *testing.T) {
	result := operations.DivideBy9485(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9486(t *testing.T) {
	result := operations.DivideBy9486(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9487(t *testing.T) {
	result := operations.DivideBy9487(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9488(t *testing.T) {
	result := operations.DivideBy9488(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9489(t *testing.T) {
	result := operations.DivideBy9489(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9490(t *testing.T) {
	result := operations.DivideBy9490(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9491(t *testing.T) {
	result := operations.DivideBy9491(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9492(t *testing.T) {
	result := operations.DivideBy9492(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9493(t *testing.T) {
	result := operations.DivideBy9493(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9494(t *testing.T) {
	result := operations.DivideBy9494(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9495(t *testing.T) {
	result := operations.DivideBy9495(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9496(t *testing.T) {
	result := operations.DivideBy9496(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9497(t *testing.T) {
	result := operations.DivideBy9497(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9498(t *testing.T) {
	result := operations.DivideBy9498(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9499(t *testing.T) {
	result := operations.DivideBy9499(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9500(t *testing.T) {
	result := operations.DivideBy9500(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9501(t *testing.T) {
	result := operations.DivideBy9501(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9502(t *testing.T) {
	result := operations.DivideBy9502(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9503(t *testing.T) {
	result := operations.DivideBy9503(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9504(t *testing.T) {
	result := operations.DivideBy9504(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9505(t *testing.T) {
	result := operations.DivideBy9505(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9506(t *testing.T) {
	result := operations.DivideBy9506(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9507(t *testing.T) {
	result := operations.DivideBy9507(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9508(t *testing.T) {
	result := operations.DivideBy9508(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9509(t *testing.T) {
	result := operations.DivideBy9509(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9510(t *testing.T) {
	result := operations.DivideBy9510(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9511(t *testing.T) {
	result := operations.DivideBy9511(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9512(t *testing.T) {
	result := operations.DivideBy9512(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9513(t *testing.T) {
	result := operations.DivideBy9513(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9514(t *testing.T) {
	result := operations.DivideBy9514(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9515(t *testing.T) {
	result := operations.DivideBy9515(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9516(t *testing.T) {
	result := operations.DivideBy9516(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9517(t *testing.T) {
	result := operations.DivideBy9517(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9518(t *testing.T) {
	result := operations.DivideBy9518(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9519(t *testing.T) {
	result := operations.DivideBy9519(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9520(t *testing.T) {
	result := operations.DivideBy9520(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9521(t *testing.T) {
	result := operations.DivideBy9521(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9522(t *testing.T) {
	result := operations.DivideBy9522(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9523(t *testing.T) {
	result := operations.DivideBy9523(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9524(t *testing.T) {
	result := operations.DivideBy9524(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9525(t *testing.T) {
	result := operations.DivideBy9525(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9526(t *testing.T) {
	result := operations.DivideBy9526(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9527(t *testing.T) {
	result := operations.DivideBy9527(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9528(t *testing.T) {
	result := operations.DivideBy9528(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9529(t *testing.T) {
	result := operations.DivideBy9529(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9530(t *testing.T) {
	result := operations.DivideBy9530(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9531(t *testing.T) {
	result := operations.DivideBy9531(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9532(t *testing.T) {
	result := operations.DivideBy9532(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9533(t *testing.T) {
	result := operations.DivideBy9533(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9534(t *testing.T) {
	result := operations.DivideBy9534(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9535(t *testing.T) {
	result := operations.DivideBy9535(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9536(t *testing.T) {
	result := operations.DivideBy9536(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9537(t *testing.T) {
	result := operations.DivideBy9537(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9538(t *testing.T) {
	result := operations.DivideBy9538(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9539(t *testing.T) {
	result := operations.DivideBy9539(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9540(t *testing.T) {
	result := operations.DivideBy9540(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9541(t *testing.T) {
	result := operations.DivideBy9541(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9542(t *testing.T) {
	result := operations.DivideBy9542(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9543(t *testing.T) {
	result := operations.DivideBy9543(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9544(t *testing.T) {
	result := operations.DivideBy9544(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9545(t *testing.T) {
	result := operations.DivideBy9545(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9546(t *testing.T) {
	result := operations.DivideBy9546(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9547(t *testing.T) {
	result := operations.DivideBy9547(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9548(t *testing.T) {
	result := operations.DivideBy9548(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9549(t *testing.T) {
	result := operations.DivideBy9549(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9550(t *testing.T) {
	result := operations.DivideBy9550(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9551(t *testing.T) {
	result := operations.DivideBy9551(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9552(t *testing.T) {
	result := operations.DivideBy9552(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9553(t *testing.T) {
	result := operations.DivideBy9553(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9554(t *testing.T) {
	result := operations.DivideBy9554(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9555(t *testing.T) {
	result := operations.DivideBy9555(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9556(t *testing.T) {
	result := operations.DivideBy9556(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9557(t *testing.T) {
	result := operations.DivideBy9557(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9558(t *testing.T) {
	result := operations.DivideBy9558(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9559(t *testing.T) {
	result := operations.DivideBy9559(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9560(t *testing.T) {
	result := operations.DivideBy9560(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9561(t *testing.T) {
	result := operations.DivideBy9561(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9562(t *testing.T) {
	result := operations.DivideBy9562(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9563(t *testing.T) {
	result := operations.DivideBy9563(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9564(t *testing.T) {
	result := operations.DivideBy9564(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9565(t *testing.T) {
	result := operations.DivideBy9565(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9566(t *testing.T) {
	result := operations.DivideBy9566(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9567(t *testing.T) {
	result := operations.DivideBy9567(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9568(t *testing.T) {
	result := operations.DivideBy9568(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9569(t *testing.T) {
	result := operations.DivideBy9569(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9570(t *testing.T) {
	result := operations.DivideBy9570(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9571(t *testing.T) {
	result := operations.DivideBy9571(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9572(t *testing.T) {
	result := operations.DivideBy9572(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9573(t *testing.T) {
	result := operations.DivideBy9573(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9574(t *testing.T) {
	result := operations.DivideBy9574(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9575(t *testing.T) {
	result := operations.DivideBy9575(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9576(t *testing.T) {
	result := operations.DivideBy9576(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9577(t *testing.T) {
	result := operations.DivideBy9577(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9578(t *testing.T) {
	result := operations.DivideBy9578(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9579(t *testing.T) {
	result := operations.DivideBy9579(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9580(t *testing.T) {
	result := operations.DivideBy9580(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9581(t *testing.T) {
	result := operations.DivideBy9581(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9582(t *testing.T) {
	result := operations.DivideBy9582(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9583(t *testing.T) {
	result := operations.DivideBy9583(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9584(t *testing.T) {
	result := operations.DivideBy9584(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9585(t *testing.T) {
	result := operations.DivideBy9585(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9586(t *testing.T) {
	result := operations.DivideBy9586(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9587(t *testing.T) {
	result := operations.DivideBy9587(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9588(t *testing.T) {
	result := operations.DivideBy9588(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9589(t *testing.T) {
	result := operations.DivideBy9589(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9590(t *testing.T) {
	result := operations.DivideBy9590(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9591(t *testing.T) {
	result := operations.DivideBy9591(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9592(t *testing.T) {
	result := operations.DivideBy9592(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9593(t *testing.T) {
	result := operations.DivideBy9593(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9594(t *testing.T) {
	result := operations.DivideBy9594(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9595(t *testing.T) {
	result := operations.DivideBy9595(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9596(t *testing.T) {
	result := operations.DivideBy9596(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9597(t *testing.T) {
	result := operations.DivideBy9597(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9598(t *testing.T) {
	result := operations.DivideBy9598(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9599(t *testing.T) {
	result := operations.DivideBy9599(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9600(t *testing.T) {
	result := operations.DivideBy9600(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9601(t *testing.T) {
	result := operations.DivideBy9601(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9602(t *testing.T) {
	result := operations.DivideBy9602(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9603(t *testing.T) {
	result := operations.DivideBy9603(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9604(t *testing.T) {
	result := operations.DivideBy9604(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9605(t *testing.T) {
	result := operations.DivideBy9605(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9606(t *testing.T) {
	result := operations.DivideBy9606(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9607(t *testing.T) {
	result := operations.DivideBy9607(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9608(t *testing.T) {
	result := operations.DivideBy9608(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9609(t *testing.T) {
	result := operations.DivideBy9609(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9610(t *testing.T) {
	result := operations.DivideBy9610(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9611(t *testing.T) {
	result := operations.DivideBy9611(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9612(t *testing.T) {
	result := operations.DivideBy9612(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9613(t *testing.T) {
	result := operations.DivideBy9613(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9614(t *testing.T) {
	result := operations.DivideBy9614(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9615(t *testing.T) {
	result := operations.DivideBy9615(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9616(t *testing.T) {
	result := operations.DivideBy9616(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9617(t *testing.T) {
	result := operations.DivideBy9617(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9618(t *testing.T) {
	result := operations.DivideBy9618(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9619(t *testing.T) {
	result := operations.DivideBy9619(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9620(t *testing.T) {
	result := operations.DivideBy9620(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9621(t *testing.T) {
	result := operations.DivideBy9621(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9622(t *testing.T) {
	result := operations.DivideBy9622(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9623(t *testing.T) {
	result := operations.DivideBy9623(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9624(t *testing.T) {
	result := operations.DivideBy9624(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9625(t *testing.T) {
	result := operations.DivideBy9625(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9626(t *testing.T) {
	result := operations.DivideBy9626(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9627(t *testing.T) {
	result := operations.DivideBy9627(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9628(t *testing.T) {
	result := operations.DivideBy9628(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9629(t *testing.T) {
	result := operations.DivideBy9629(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9630(t *testing.T) {
	result := operations.DivideBy9630(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9631(t *testing.T) {
	result := operations.DivideBy9631(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9632(t *testing.T) {
	result := operations.DivideBy9632(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9633(t *testing.T) {
	result := operations.DivideBy9633(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9634(t *testing.T) {
	result := operations.DivideBy9634(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9635(t *testing.T) {
	result := operations.DivideBy9635(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9636(t *testing.T) {
	result := operations.DivideBy9636(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9637(t *testing.T) {
	result := operations.DivideBy9637(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9638(t *testing.T) {
	result := operations.DivideBy9638(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9639(t *testing.T) {
	result := operations.DivideBy9639(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9640(t *testing.T) {
	result := operations.DivideBy9640(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9641(t *testing.T) {
	result := operations.DivideBy9641(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9642(t *testing.T) {
	result := operations.DivideBy9642(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9643(t *testing.T) {
	result := operations.DivideBy9643(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9644(t *testing.T) {
	result := operations.DivideBy9644(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9645(t *testing.T) {
	result := operations.DivideBy9645(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9646(t *testing.T) {
	result := operations.DivideBy9646(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9647(t *testing.T) {
	result := operations.DivideBy9647(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9648(t *testing.T) {
	result := operations.DivideBy9648(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9649(t *testing.T) {
	result := operations.DivideBy9649(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9650(t *testing.T) {
	result := operations.DivideBy9650(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9651(t *testing.T) {
	result := operations.DivideBy9651(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9652(t *testing.T) {
	result := operations.DivideBy9652(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9653(t *testing.T) {
	result := operations.DivideBy9653(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9654(t *testing.T) {
	result := operations.DivideBy9654(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9655(t *testing.T) {
	result := operations.DivideBy9655(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9656(t *testing.T) {
	result := operations.DivideBy9656(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9657(t *testing.T) {
	result := operations.DivideBy9657(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9658(t *testing.T) {
	result := operations.DivideBy9658(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9659(t *testing.T) {
	result := operations.DivideBy9659(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9660(t *testing.T) {
	result := operations.DivideBy9660(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9661(t *testing.T) {
	result := operations.DivideBy9661(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9662(t *testing.T) {
	result := operations.DivideBy9662(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9663(t *testing.T) {
	result := operations.DivideBy9663(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9664(t *testing.T) {
	result := operations.DivideBy9664(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9665(t *testing.T) {
	result := operations.DivideBy9665(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9666(t *testing.T) {
	result := operations.DivideBy9666(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9667(t *testing.T) {
	result := operations.DivideBy9667(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9668(t *testing.T) {
	result := operations.DivideBy9668(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9669(t *testing.T) {
	result := operations.DivideBy9669(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9670(t *testing.T) {
	result := operations.DivideBy9670(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9671(t *testing.T) {
	result := operations.DivideBy9671(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9672(t *testing.T) {
	result := operations.DivideBy9672(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9673(t *testing.T) {
	result := operations.DivideBy9673(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9674(t *testing.T) {
	result := operations.DivideBy9674(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9675(t *testing.T) {
	result := operations.DivideBy9675(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9676(t *testing.T) {
	result := operations.DivideBy9676(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9677(t *testing.T) {
	result := operations.DivideBy9677(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9678(t *testing.T) {
	result := operations.DivideBy9678(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9679(t *testing.T) {
	result := operations.DivideBy9679(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9680(t *testing.T) {
	result := operations.DivideBy9680(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9681(t *testing.T) {
	result := operations.DivideBy9681(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9682(t *testing.T) {
	result := operations.DivideBy9682(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9683(t *testing.T) {
	result := operations.DivideBy9683(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9684(t *testing.T) {
	result := operations.DivideBy9684(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9685(t *testing.T) {
	result := operations.DivideBy9685(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9686(t *testing.T) {
	result := operations.DivideBy9686(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9687(t *testing.T) {
	result := operations.DivideBy9687(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9688(t *testing.T) {
	result := operations.DivideBy9688(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9689(t *testing.T) {
	result := operations.DivideBy9689(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9690(t *testing.T) {
	result := operations.DivideBy9690(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9691(t *testing.T) {
	result := operations.DivideBy9691(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9692(t *testing.T) {
	result := operations.DivideBy9692(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9693(t *testing.T) {
	result := operations.DivideBy9693(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9694(t *testing.T) {
	result := operations.DivideBy9694(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9695(t *testing.T) {
	result := operations.DivideBy9695(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9696(t *testing.T) {
	result := operations.DivideBy9696(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9697(t *testing.T) {
	result := operations.DivideBy9697(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9698(t *testing.T) {
	result := operations.DivideBy9698(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9699(t *testing.T) {
	result := operations.DivideBy9699(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9700(t *testing.T) {
	result := operations.DivideBy9700(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9701(t *testing.T) {
	result := operations.DivideBy9701(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9702(t *testing.T) {
	result := operations.DivideBy9702(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9703(t *testing.T) {
	result := operations.DivideBy9703(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9704(t *testing.T) {
	result := operations.DivideBy9704(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9705(t *testing.T) {
	result := operations.DivideBy9705(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9706(t *testing.T) {
	result := operations.DivideBy9706(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9707(t *testing.T) {
	result := operations.DivideBy9707(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9708(t *testing.T) {
	result := operations.DivideBy9708(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9709(t *testing.T) {
	result := operations.DivideBy9709(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9710(t *testing.T) {
	result := operations.DivideBy9710(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9711(t *testing.T) {
	result := operations.DivideBy9711(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9712(t *testing.T) {
	result := operations.DivideBy9712(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9713(t *testing.T) {
	result := operations.DivideBy9713(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9714(t *testing.T) {
	result := operations.DivideBy9714(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9715(t *testing.T) {
	result := operations.DivideBy9715(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9716(t *testing.T) {
	result := operations.DivideBy9716(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9717(t *testing.T) {
	result := operations.DivideBy9717(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9718(t *testing.T) {
	result := operations.DivideBy9718(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9719(t *testing.T) {
	result := operations.DivideBy9719(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9720(t *testing.T) {
	result := operations.DivideBy9720(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9721(t *testing.T) {
	result := operations.DivideBy9721(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9722(t *testing.T) {
	result := operations.DivideBy9722(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9723(t *testing.T) {
	result := operations.DivideBy9723(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9724(t *testing.T) {
	result := operations.DivideBy9724(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9725(t *testing.T) {
	result := operations.DivideBy9725(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9726(t *testing.T) {
	result := operations.DivideBy9726(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9727(t *testing.T) {
	result := operations.DivideBy9727(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9728(t *testing.T) {
	result := operations.DivideBy9728(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9729(t *testing.T) {
	result := operations.DivideBy9729(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9730(t *testing.T) {
	result := operations.DivideBy9730(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9731(t *testing.T) {
	result := operations.DivideBy9731(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9732(t *testing.T) {
	result := operations.DivideBy9732(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9733(t *testing.T) {
	result := operations.DivideBy9733(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9734(t *testing.T) {
	result := operations.DivideBy9734(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9735(t *testing.T) {
	result := operations.DivideBy9735(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9736(t *testing.T) {
	result := operations.DivideBy9736(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9737(t *testing.T) {
	result := operations.DivideBy9737(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9738(t *testing.T) {
	result := operations.DivideBy9738(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9739(t *testing.T) {
	result := operations.DivideBy9739(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9740(t *testing.T) {
	result := operations.DivideBy9740(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9741(t *testing.T) {
	result := operations.DivideBy9741(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9742(t *testing.T) {
	result := operations.DivideBy9742(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9743(t *testing.T) {
	result := operations.DivideBy9743(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9744(t *testing.T) {
	result := operations.DivideBy9744(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9745(t *testing.T) {
	result := operations.DivideBy9745(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9746(t *testing.T) {
	result := operations.DivideBy9746(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9747(t *testing.T) {
	result := operations.DivideBy9747(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9748(t *testing.T) {
	result := operations.DivideBy9748(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9749(t *testing.T) {
	result := operations.DivideBy9749(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9750(t *testing.T) {
	result := operations.DivideBy9750(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9751(t *testing.T) {
	result := operations.DivideBy9751(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9752(t *testing.T) {
	result := operations.DivideBy9752(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9753(t *testing.T) {
	result := operations.DivideBy9753(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9754(t *testing.T) {
	result := operations.DivideBy9754(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9755(t *testing.T) {
	result := operations.DivideBy9755(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9756(t *testing.T) {
	result := operations.DivideBy9756(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9757(t *testing.T) {
	result := operations.DivideBy9757(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9758(t *testing.T) {
	result := operations.DivideBy9758(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9759(t *testing.T) {
	result := operations.DivideBy9759(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9760(t *testing.T) {
	result := operations.DivideBy9760(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9761(t *testing.T) {
	result := operations.DivideBy9761(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9762(t *testing.T) {
	result := operations.DivideBy9762(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9763(t *testing.T) {
	result := operations.DivideBy9763(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9764(t *testing.T) {
	result := operations.DivideBy9764(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9765(t *testing.T) {
	result := operations.DivideBy9765(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9766(t *testing.T) {
	result := operations.DivideBy9766(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9767(t *testing.T) {
	result := operations.DivideBy9767(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9768(t *testing.T) {
	result := operations.DivideBy9768(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9769(t *testing.T) {
	result := operations.DivideBy9769(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9770(t *testing.T) {
	result := operations.DivideBy9770(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9771(t *testing.T) {
	result := operations.DivideBy9771(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9772(t *testing.T) {
	result := operations.DivideBy9772(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9773(t *testing.T) {
	result := operations.DivideBy9773(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9774(t *testing.T) {
	result := operations.DivideBy9774(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9775(t *testing.T) {
	result := operations.DivideBy9775(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9776(t *testing.T) {
	result := operations.DivideBy9776(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9777(t *testing.T) {
	result := operations.DivideBy9777(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9778(t *testing.T) {
	result := operations.DivideBy9778(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9779(t *testing.T) {
	result := operations.DivideBy9779(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9780(t *testing.T) {
	result := operations.DivideBy9780(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9781(t *testing.T) {
	result := operations.DivideBy9781(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9782(t *testing.T) {
	result := operations.DivideBy9782(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9783(t *testing.T) {
	result := operations.DivideBy9783(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9784(t *testing.T) {
	result := operations.DivideBy9784(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9785(t *testing.T) {
	result := operations.DivideBy9785(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9786(t *testing.T) {
	result := operations.DivideBy9786(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9787(t *testing.T) {
	result := operations.DivideBy9787(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9788(t *testing.T) {
	result := operations.DivideBy9788(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9789(t *testing.T) {
	result := operations.DivideBy9789(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9790(t *testing.T) {
	result := operations.DivideBy9790(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9791(t *testing.T) {
	result := operations.DivideBy9791(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9792(t *testing.T) {
	result := operations.DivideBy9792(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9793(t *testing.T) {
	result := operations.DivideBy9793(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9794(t *testing.T) {
	result := operations.DivideBy9794(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9795(t *testing.T) {
	result := operations.DivideBy9795(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9796(t *testing.T) {
	result := operations.DivideBy9796(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9797(t *testing.T) {
	result := operations.DivideBy9797(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9798(t *testing.T) {
	result := operations.DivideBy9798(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9799(t *testing.T) {
	result := operations.DivideBy9799(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9800(t *testing.T) {
	result := operations.DivideBy9800(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9801(t *testing.T) {
	result := operations.DivideBy9801(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9802(t *testing.T) {
	result := operations.DivideBy9802(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9803(t *testing.T) {
	result := operations.DivideBy9803(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9804(t *testing.T) {
	result := operations.DivideBy9804(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9805(t *testing.T) {
	result := operations.DivideBy9805(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9806(t *testing.T) {
	result := operations.DivideBy9806(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9807(t *testing.T) {
	result := operations.DivideBy9807(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9808(t *testing.T) {
	result := operations.DivideBy9808(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9809(t *testing.T) {
	result := operations.DivideBy9809(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9810(t *testing.T) {
	result := operations.DivideBy9810(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9811(t *testing.T) {
	result := operations.DivideBy9811(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9812(t *testing.T) {
	result := operations.DivideBy9812(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9813(t *testing.T) {
	result := operations.DivideBy9813(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9814(t *testing.T) {
	result := operations.DivideBy9814(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9815(t *testing.T) {
	result := operations.DivideBy9815(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9816(t *testing.T) {
	result := operations.DivideBy9816(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9817(t *testing.T) {
	result := operations.DivideBy9817(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9818(t *testing.T) {
	result := operations.DivideBy9818(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9819(t *testing.T) {
	result := operations.DivideBy9819(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9820(t *testing.T) {
	result := operations.DivideBy9820(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9821(t *testing.T) {
	result := operations.DivideBy9821(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9822(t *testing.T) {
	result := operations.DivideBy9822(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9823(t *testing.T) {
	result := operations.DivideBy9823(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9824(t *testing.T) {
	result := operations.DivideBy9824(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9825(t *testing.T) {
	result := operations.DivideBy9825(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9826(t *testing.T) {
	result := operations.DivideBy9826(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9827(t *testing.T) {
	result := operations.DivideBy9827(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9828(t *testing.T) {
	result := operations.DivideBy9828(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9829(t *testing.T) {
	result := operations.DivideBy9829(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9830(t *testing.T) {
	result := operations.DivideBy9830(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9831(t *testing.T) {
	result := operations.DivideBy9831(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9832(t *testing.T) {
	result := operations.DivideBy9832(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9833(t *testing.T) {
	result := operations.DivideBy9833(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9834(t *testing.T) {
	result := operations.DivideBy9834(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9835(t *testing.T) {
	result := operations.DivideBy9835(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9836(t *testing.T) {
	result := operations.DivideBy9836(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9837(t *testing.T) {
	result := operations.DivideBy9837(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9838(t *testing.T) {
	result := operations.DivideBy9838(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9839(t *testing.T) {
	result := operations.DivideBy9839(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9840(t *testing.T) {
	result := operations.DivideBy9840(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9841(t *testing.T) {
	result := operations.DivideBy9841(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9842(t *testing.T) {
	result := operations.DivideBy9842(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9843(t *testing.T) {
	result := operations.DivideBy9843(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9844(t *testing.T) {
	result := operations.DivideBy9844(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9845(t *testing.T) {
	result := operations.DivideBy9845(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9846(t *testing.T) {
	result := operations.DivideBy9846(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9847(t *testing.T) {
	result := operations.DivideBy9847(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9848(t *testing.T) {
	result := operations.DivideBy9848(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9849(t *testing.T) {
	result := operations.DivideBy9849(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9850(t *testing.T) {
	result := operations.DivideBy9850(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9851(t *testing.T) {
	result := operations.DivideBy9851(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9852(t *testing.T) {
	result := operations.DivideBy9852(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9853(t *testing.T) {
	result := operations.DivideBy9853(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9854(t *testing.T) {
	result := operations.DivideBy9854(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9855(t *testing.T) {
	result := operations.DivideBy9855(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9856(t *testing.T) {
	result := operations.DivideBy9856(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9857(t *testing.T) {
	result := operations.DivideBy9857(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9858(t *testing.T) {
	result := operations.DivideBy9858(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9859(t *testing.T) {
	result := operations.DivideBy9859(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9860(t *testing.T) {
	result := operations.DivideBy9860(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9861(t *testing.T) {
	result := operations.DivideBy9861(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9862(t *testing.T) {
	result := operations.DivideBy9862(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9863(t *testing.T) {
	result := operations.DivideBy9863(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9864(t *testing.T) {
	result := operations.DivideBy9864(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9865(t *testing.T) {
	result := operations.DivideBy9865(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9866(t *testing.T) {
	result := operations.DivideBy9866(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9867(t *testing.T) {
	result := operations.DivideBy9867(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9868(t *testing.T) {
	result := operations.DivideBy9868(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9869(t *testing.T) {
	result := operations.DivideBy9869(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9870(t *testing.T) {
	result := operations.DivideBy9870(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9871(t *testing.T) {
	result := operations.DivideBy9871(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9872(t *testing.T) {
	result := operations.DivideBy9872(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9873(t *testing.T) {
	result := operations.DivideBy9873(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9874(t *testing.T) {
	result := operations.DivideBy9874(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9875(t *testing.T) {
	result := operations.DivideBy9875(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9876(t *testing.T) {
	result := operations.DivideBy9876(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9877(t *testing.T) {
	result := operations.DivideBy9877(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9878(t *testing.T) {
	result := operations.DivideBy9878(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9879(t *testing.T) {
	result := operations.DivideBy9879(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9880(t *testing.T) {
	result := operations.DivideBy9880(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9881(t *testing.T) {
	result := operations.DivideBy9881(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9882(t *testing.T) {
	result := operations.DivideBy9882(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9883(t *testing.T) {
	result := operations.DivideBy9883(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9884(t *testing.T) {
	result := operations.DivideBy9884(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9885(t *testing.T) {
	result := operations.DivideBy9885(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9886(t *testing.T) {
	result := operations.DivideBy9886(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9887(t *testing.T) {
	result := operations.DivideBy9887(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9888(t *testing.T) {
	result := operations.DivideBy9888(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9889(t *testing.T) {
	result := operations.DivideBy9889(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9890(t *testing.T) {
	result := operations.DivideBy9890(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9891(t *testing.T) {
	result := operations.DivideBy9891(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9892(t *testing.T) {
	result := operations.DivideBy9892(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9893(t *testing.T) {
	result := operations.DivideBy9893(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9894(t *testing.T) {
	result := operations.DivideBy9894(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9895(t *testing.T) {
	result := operations.DivideBy9895(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9896(t *testing.T) {
	result := operations.DivideBy9896(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9897(t *testing.T) {
	result := operations.DivideBy9897(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9898(t *testing.T) {
	result := operations.DivideBy9898(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9899(t *testing.T) {
	result := operations.DivideBy9899(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9900(t *testing.T) {
	result := operations.DivideBy9900(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9901(t *testing.T) {
	result := operations.DivideBy9901(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9902(t *testing.T) {
	result := operations.DivideBy9902(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9903(t *testing.T) {
	result := operations.DivideBy9903(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9904(t *testing.T) {
	result := operations.DivideBy9904(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9905(t *testing.T) {
	result := operations.DivideBy9905(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9906(t *testing.T) {
	result := operations.DivideBy9906(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9907(t *testing.T) {
	result := operations.DivideBy9907(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9908(t *testing.T) {
	result := operations.DivideBy9908(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9909(t *testing.T) {
	result := operations.DivideBy9909(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9910(t *testing.T) {
	result := operations.DivideBy9910(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9911(t *testing.T) {
	result := operations.DivideBy9911(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9912(t *testing.T) {
	result := operations.DivideBy9912(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9913(t *testing.T) {
	result := operations.DivideBy9913(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9914(t *testing.T) {
	result := operations.DivideBy9914(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9915(t *testing.T) {
	result := operations.DivideBy9915(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9916(t *testing.T) {
	result := operations.DivideBy9916(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9917(t *testing.T) {
	result := operations.DivideBy9917(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9918(t *testing.T) {
	result := operations.DivideBy9918(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9919(t *testing.T) {
	result := operations.DivideBy9919(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9920(t *testing.T) {
	result := operations.DivideBy9920(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9921(t *testing.T) {
	result := operations.DivideBy9921(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9922(t *testing.T) {
	result := operations.DivideBy9922(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9923(t *testing.T) {
	result := operations.DivideBy9923(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9924(t *testing.T) {
	result := operations.DivideBy9924(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9925(t *testing.T) {
	result := operations.DivideBy9925(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9926(t *testing.T) {
	result := operations.DivideBy9926(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9927(t *testing.T) {
	result := operations.DivideBy9927(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9928(t *testing.T) {
	result := operations.DivideBy9928(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9929(t *testing.T) {
	result := operations.DivideBy9929(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9930(t *testing.T) {
	result := operations.DivideBy9930(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9931(t *testing.T) {
	result := operations.DivideBy9931(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9932(t *testing.T) {
	result := operations.DivideBy9932(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9933(t *testing.T) {
	result := operations.DivideBy9933(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9934(t *testing.T) {
	result := operations.DivideBy9934(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9935(t *testing.T) {
	result := operations.DivideBy9935(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9936(t *testing.T) {
	result := operations.DivideBy9936(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9937(t *testing.T) {
	result := operations.DivideBy9937(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9938(t *testing.T) {
	result := operations.DivideBy9938(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9939(t *testing.T) {
	result := operations.DivideBy9939(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9940(t *testing.T) {
	result := operations.DivideBy9940(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9941(t *testing.T) {
	result := operations.DivideBy9941(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9942(t *testing.T) {
	result := operations.DivideBy9942(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9943(t *testing.T) {
	result := operations.DivideBy9943(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9944(t *testing.T) {
	result := operations.DivideBy9944(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9945(t *testing.T) {
	result := operations.DivideBy9945(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9946(t *testing.T) {
	result := operations.DivideBy9946(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9947(t *testing.T) {
	result := operations.DivideBy9947(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9948(t *testing.T) {
	result := operations.DivideBy9948(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9949(t *testing.T) {
	result := operations.DivideBy9949(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9950(t *testing.T) {
	result := operations.DivideBy9950(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9951(t *testing.T) {
	result := operations.DivideBy9951(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9952(t *testing.T) {
	result := operations.DivideBy9952(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9953(t *testing.T) {
	result := operations.DivideBy9953(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9954(t *testing.T) {
	result := operations.DivideBy9954(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9955(t *testing.T) {
	result := operations.DivideBy9955(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9956(t *testing.T) {
	result := operations.DivideBy9956(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9957(t *testing.T) {
	result := operations.DivideBy9957(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9958(t *testing.T) {
	result := operations.DivideBy9958(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9959(t *testing.T) {
	result := operations.DivideBy9959(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9960(t *testing.T) {
	result := operations.DivideBy9960(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9961(t *testing.T) {
	result := operations.DivideBy9961(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9962(t *testing.T) {
	result := operations.DivideBy9962(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9963(t *testing.T) {
	result := operations.DivideBy9963(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9964(t *testing.T) {
	result := operations.DivideBy9964(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9965(t *testing.T) {
	result := operations.DivideBy9965(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9966(t *testing.T) {
	result := operations.DivideBy9966(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9967(t *testing.T) {
	result := operations.DivideBy9967(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9968(t *testing.T) {
	result := operations.DivideBy9968(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9969(t *testing.T) {
	result := operations.DivideBy9969(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9970(t *testing.T) {
	result := operations.DivideBy9970(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9971(t *testing.T) {
	result := operations.DivideBy9971(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9972(t *testing.T) {
	result := operations.DivideBy9972(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9973(t *testing.T) {
	result := operations.DivideBy9973(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9974(t *testing.T) {
	result := operations.DivideBy9974(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9975(t *testing.T) {
	result := operations.DivideBy9975(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9976(t *testing.T) {
	result := operations.DivideBy9976(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9977(t *testing.T) {
	result := operations.DivideBy9977(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9978(t *testing.T) {
	result := operations.DivideBy9978(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9979(t *testing.T) {
	result := operations.DivideBy9979(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9980(t *testing.T) {
	result := operations.DivideBy9980(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9981(t *testing.T) {
	result := operations.DivideBy9981(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9982(t *testing.T) {
	result := operations.DivideBy9982(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9983(t *testing.T) {
	result := operations.DivideBy9983(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9984(t *testing.T) {
	result := operations.DivideBy9984(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9985(t *testing.T) {
	result := operations.DivideBy9985(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9986(t *testing.T) {
	result := operations.DivideBy9986(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9987(t *testing.T) {
	result := operations.DivideBy9987(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9988(t *testing.T) {
	result := operations.DivideBy9988(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9989(t *testing.T) {
	result := operations.DivideBy9989(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9990(t *testing.T) {
	result := operations.DivideBy9990(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9991(t *testing.T) {
	result := operations.DivideBy9991(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9992(t *testing.T) {
	result := operations.DivideBy9992(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9993(t *testing.T) {
	result := operations.DivideBy9993(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9994(t *testing.T) {
	result := operations.DivideBy9994(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9995(t *testing.T) {
	result := operations.DivideBy9995(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9996(t *testing.T) {
	result := operations.DivideBy9996(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9997(t *testing.T) {
	result := operations.DivideBy9997(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9998(t *testing.T) {
	result := operations.DivideBy9998(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy9999(t *testing.T) {
	result := operations.DivideBy9999(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}

func TestDivideBy10000(t *testing.T) {
	result := operations.DivideBy10000(17000)
	
	if result != 1 {
		t.Errorf("Expected 1 but got %d", result)
	}
}
